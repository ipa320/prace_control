/// autogenerated analytical inverse kinematics code from ikfast program part of OpenRAVE
/// \author Rosen Diankov
///
/// Licensed under the Apache License, Version 2.0 (the "License");
/// you may not use this file except in compliance with the License.
/// You may obtain a copy of the License at
///     http://www.apache.org/licenses/LICENSE-2.0
/// 
/// Unless required by applicable law or agreed to in writing, software
/// distributed under the License is distributed on an "AS IS" BASIS,
/// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
/// See the License for the specific language governing permissions and
/// limitations under the License.
///
/// ikfast version 61 generated on 2013-06-18 13:48:19.422977
/// To compile with gcc:
///     gcc -lstdc++ ik.cpp
/// To compile without any main function as a shared object (might need -llapack):
///     gcc -fPIC -lstdc++ -DIKFAST_NO_MAIN -DIKFAST_CLIBRARY -shared -Wl,-soname,libik.so -o libik.so ik.cpp
#define IKFAST_HAS_LIBRARY
#include "ikfast.h" // found inside share/openrave-X.Y/python/ikfast.h
using namespace ikfast;

// check if the included ikfast version matches what this file was compiled with
#define IKFAST_COMPILE_ASSERT(x) extern int __dummy[(int)x]
IKFAST_COMPILE_ASSERT(IKFAST_VERSION==61);

#include <cmath>
#include <vector>
#include <limits>
#include <algorithm>
#include <complex>

#define IKFAST_STRINGIZE2(s) #s
#define IKFAST_STRINGIZE(s) IKFAST_STRINGIZE2(s)

#ifndef IKFAST_ASSERT
#include <stdexcept>
#include <sstream>
#include <iostream>

#ifdef _MSC_VER
#ifndef __PRETTY_FUNCTION__
#define __PRETTY_FUNCTION__ __FUNCDNAME__
#endif
#endif

#ifndef __PRETTY_FUNCTION__
#define __PRETTY_FUNCTION__ __func__
#endif

#define IKFAST_ASSERT(b) { if( !(b) ) { std::stringstream ss; ss << "ikfast exception: " << __FILE__ << ":" << __LINE__ << ": " <<__PRETTY_FUNCTION__ << ": Assertion '" << #b << "' failed"; throw std::runtime_error(ss.str()); } }

#endif

#if defined(_MSC_VER)
#define IKFAST_ALIGNED16(x) __declspec(align(16)) x
#else
#define IKFAST_ALIGNED16(x) x __attribute((aligned(16)))
#endif

#define IK2PI  ((IkReal)6.28318530717959)
#define IKPI  ((IkReal)3.14159265358979)
#define IKPI_2  ((IkReal)1.57079632679490)

#ifdef _MSC_VER
#ifndef isnan
#define isnan _isnan
#endif
#endif // _MSC_VER

// lapack routines
extern "C" {
  void dgetrf_ (const int* m, const int* n, double* a, const int* lda, int* ipiv, int* info);
  void zgetrf_ (const int* m, const int* n, std::complex<double>* a, const int* lda, int* ipiv, int* info);
  void dgetri_(const int* n, const double* a, const int* lda, int* ipiv, double* work, const int* lwork, int* info);
  void dgesv_ (const int* n, const int* nrhs, double* a, const int* lda, int* ipiv, double* b, const int* ldb, int* info);
  void dgetrs_(const char *trans, const int *n, const int *nrhs, double *a, const int *lda, int *ipiv, double *b, const int *ldb, int *info);
  void dgeev_(const char *jobvl, const char *jobvr, const int *n, double *a, const int *lda, double *wr, double *wi,double *vl, const int *ldvl, double *vr, const int *ldvr, double *work, const int *lwork, int *info);
}

using namespace std; // necessary to get std math routines

#ifdef IKFAST_NAMESPACE
namespace IKFAST_NAMESPACE {
#endif

inline float IKabs(float f) { return fabsf(f); }
inline double IKabs(double f) { return fabs(f); }

inline float IKsqr(float f) { return f*f; }
inline double IKsqr(double f) { return f*f; }

inline float IKlog(float f) { return logf(f); }
inline double IKlog(double f) { return log(f); }

// allows asin and acos to exceed 1
#ifndef IKFAST_SINCOS_THRESH
#define IKFAST_SINCOS_THRESH ((IkReal)0.000001)
#endif

// used to check input to atan2 for degenerate cases
#ifndef IKFAST_ATAN2_MAGTHRESH
#define IKFAST_ATAN2_MAGTHRESH ((IkReal)2e-6)
#endif

// minimum distance of separate solutions
#ifndef IKFAST_SOLUTION_THRESH
#define IKFAST_SOLUTION_THRESH ((IkReal)1e-6)
#endif

inline float IKasin(float f)
{
IKFAST_ASSERT( f > -1-IKFAST_SINCOS_THRESH && f < 1+IKFAST_SINCOS_THRESH ); // any more error implies something is wrong with the solver
if( f <= -1 ) return float(-IKPI_2);
else if( f >= 1 ) return float(IKPI_2);
return asinf(f);
}
inline double IKasin(double f)
{
IKFAST_ASSERT( f > -1-IKFAST_SINCOS_THRESH && f < 1+IKFAST_SINCOS_THRESH ); // any more error implies something is wrong with the solver
if( f <= -1 ) return -IKPI_2;
else if( f >= 1 ) return IKPI_2;
return asin(f);
}

// return positive value in [0,y)
inline float IKfmod(float x, float y)
{
    while(x < 0) {
        x += y;
    }
    return fmodf(x,y);
}

// return positive value in [0,y)
inline double IKfmod(double x, double y)
{
    while(x < 0) {
        x += y;
    }
    return fmod(x,y);
}

inline float IKacos(float f)
{
IKFAST_ASSERT( f > -1-IKFAST_SINCOS_THRESH && f < 1+IKFAST_SINCOS_THRESH ); // any more error implies something is wrong with the solver
if( f <= -1 ) return float(IKPI);
else if( f >= 1 ) return float(0);
return acosf(f);
}
inline double IKacos(double f)
{
IKFAST_ASSERT( f > -1-IKFAST_SINCOS_THRESH && f < 1+IKFAST_SINCOS_THRESH ); // any more error implies something is wrong with the solver
if( f <= -1 ) return IKPI;
else if( f >= 1 ) return 0;
return acos(f);
}
inline float IKsin(float f) { return sinf(f); }
inline double IKsin(double f) { return sin(f); }
inline float IKcos(float f) { return cosf(f); }
inline double IKcos(double f) { return cos(f); }
inline float IKtan(float f) { return tanf(f); }
inline double IKtan(double f) { return tan(f); }
inline float IKsqrt(float f) { if( f <= 0.0f ) return 0.0f; return sqrtf(f); }
inline double IKsqrt(double f) { if( f <= 0.0 ) return 0.0; return sqrt(f); }
inline float IKatan2(float fy, float fx) {
    if( isnan(fy) ) {
        IKFAST_ASSERT(!isnan(fx)); // if both are nan, probably wrong value will be returned
        return float(IKPI_2);
    }
    else if( isnan(fx) ) {
        return 0;
    }
    return atan2f(fy,fx);
}
inline double IKatan2(double fy, double fx) {
    if( isnan(fy) ) {
        IKFAST_ASSERT(!isnan(fx)); // if both are nan, probably wrong value will be returned
        return IKPI_2;
    }
    else if( isnan(fx) ) {
        return 0;
    }
    return atan2(fy,fx);
}

inline float IKsign(float f) {
    if( f > 0 ) {
        return float(1);
    }
    else if( f < 0 ) {
        return float(-1);
    }
    return 0;
}

inline double IKsign(double f) {
    if( f > 0 ) {
        return 1.0;
    }
    else if( f < 0 ) {
        return -1.0;
    }
    return 0;
}

/// solves the forward kinematics equations.
/// \param pfree is an array specifying the free joints of the chain.
IKFAST_API void ComputeFk(const IkReal* j, IkReal* eetrans, IkReal* eerot) {
IkReal x0,x1,x2,x3,x4,x5,x6,x7,x8,x9,x10,x11,x12,x13,x14,x15,x16,x17,x18,x19,x20,x21,x22,x23,x24,x25,x26,x27,x28,x29,x30,x31,x32,x33,x34,x35,x36,x37,x38,x39,x40,x41,x42,x43,x44,x45,x46,x47,x48,x49,x50,x51,x52,x53,x54,x55,x56,x57,x58,x59,x60,x61,x62,x63,x64,x65,x66,x67,x68,x69,x70;
x0=IKsin(j[2]);
x1=IKsin(j[3]);
x2=IKsin(j[4]);
x3=IKcos(j[2]);
x4=IKcos(j[4]);
x5=IKcos(j[6]);
x6=IKcos(j[5]);
x7=IKcos(j[3]);
x8=IKcos(j[1]);
x9=IKsin(j[5]);
x10=IKsin(j[1]);
x11=IKsin(j[6]);
x12=IKcos(j[0]);
x13=IKsin(j[0]);
x14=((IkReal(0.0405000000000000))*(x0));
x15=((IkReal(0.0320000000000000))*(x4));
x16=((IkReal(1.00000000000000))*(x3));
x17=((IkReal(1.00000000000000))*(x6));
x18=((IkReal(1.00000000000000))*(x11));
x19=((IkReal(0.0270000000000000))*(x4));
x20=((IkReal(1.00000000000000))*(x4));
x21=((IkReal(1.00000000000000))*(x9));
x22=((IkReal(0.0320000000000000))*(x3));
x23=((IkReal(0.0135000000000000))*(x3));
x24=((IkReal(0.0405000000000000))*(x3));
x25=((IkReal(1.00000000000000))*(x5));
x26=((IkReal(0.265000000000000))*(x3));
x27=((x1)*(x8));
x28=((x2)*(x3));
x29=((x1)*(x10));
x30=((x0)*(x1));
x31=((x10)*(x7));
x32=((x0)*(x7));
x33=((x7)*(x8));
x34=((x2)*(x23));
x35=((x1)*(x14));
x36=((IkReal(0.265000000000000))*(x32));
x37=((IkReal(0.0270000000000000))*(x3)*(x7));
x38=((x0)*(x2)*(x8));
x39=((x0)*(x10)*(x2));
x40=((x21)*(x32));
x41=((x16)*(x33));
x42=((IkReal(0.0270000000000000))*(x32)*(x9));
x43=((IkReal(0.0320000000000000))*(x32)*(x6));
x44=((IkReal(0.0135000000000000))*(x30)*(x4));
x45=((x16)*(x29));
x46=((IkReal(1.00000000000000))*(x39));
x47=((((IkReal(-1.00000000000000))*(x41)))+(x29));
x48=((((IkReal(-1.00000000000000))*(x20)*(x30)))+(x28));
x49=((((x2)*(x30)))+(((x3)*(x4))));
x50=((((IkReal(-1.00000000000000))*(x45)))+(x33));
x51=((((x19)*(x30)))+(((IkReal(-0.0270000000000000))*(x28))));
x52=((((x2)*(x22)))+(((IkReal(-1.00000000000000))*(x15)*(x30))));
x53=((((x16)*(x27)))+(((IkReal(1.00000000000000))*(x31))));
x54=((IkReal(-1.00000000000000))*(x53));
x55=((((IkReal(-1.00000000000000))*(x27)))+(((IkReal(-1.00000000000000))*(x16)*(x31))));
x56=((x4)*(x50));
x57=((x51)*(x6));
x58=((((IkReal(-1.00000000000000))*(x40)))+(((x48)*(x6))));
x59=((((IkReal(-1.00000000000000))*(x46)))+(x56));
x60=((((IkReal(-1.00000000000000))*(x17)*(x48)))+(x40));
x61=((((x2)*(x53)))+(((IkReal(-1.00000000000000))*(x0)*(x20)*(x8))));
x62=((((IkReal(-1.00000000000000))*(x38)))+(((x4)*(x54))));
x63=((((x0)*(x10)*(x20)))+(((x2)*(((((IkReal(-1.00000000000000))*(x45)))+(((IkReal(1.00000000000000))*(x33))))))));
x64=((x5)*(x58));
x65=((x11)*(x60));
x66=((x36)+(x35)+(x34)+(x42)+(x43)+(x14));
x67=((((x6)*(((((IkReal(-1.00000000000000))*(x29)))+(x41)))))+(((x62)*(x9))));
x68=((((x5)*(((((x6)*(x62)))+(((x47)*(x9)))))))+(((x11)*(x61))));
x69=((((x5)*(x61)))+(((x11)*(((((IkReal(-1.00000000000000))*(x21)*(x47)))+(((IkReal(-1.00000000000000))*(x17)*(x62))))))));
x70=((((x9)*(((((IkReal(0.0270000000000000))*(x3)*(x33)))+(((x15)*(x54)))+(((IkReal(-0.0270000000000000))*(x29)))+(((IkReal(-0.0320000000000000))*(x38)))))))+(((IkReal(-0.265000000000000))*(x29)))+(((x26)*(x33)))+(((x4)*(((((IkReal(-0.0135000000000000))*(x31)))+(((IkReal(-1.00000000000000))*(x23)*(x27)))))))+(((IkReal(-0.0135000000000000))*(x38)))+(((IkReal(0.246500000000000))*(x10)))+(((x8)*(((IkReal(0.0300000000000000))+(x24)))))+(((x24)*(x27)))+(((x6)*(((((IkReal(0.0270000000000000))*(x38)))+(((IkReal(-0.0320000000000000))*(x29)))+(((x22)*(x33)))+(((IkReal(-1.00000000000000))*(x19)*(x54)))))))+(((IkReal(0.0405000000000000))*(x31))));
eerot[0]=((((x12)*(x68)))+(((x13)*(((((IkReal(-1.00000000000000))*(x18)*(x49)))+(((IkReal(-1.00000000000000))*(x25)*(x58))))))));
eerot[1]=((((x13)*(((((IkReal(-1.00000000000000))*(x18)*(x60)))+(((IkReal(-1.00000000000000))*(x25)*(x49)))))))+(((x12)*(x69))));
eerot[2]=((((x12)*(x67)))+(((x13)*(((((IkReal(-1.00000000000000))*(x17)*(x32)))+(((IkReal(-1.00000000000000))*(x21)*(x48))))))));
eetrans[0]=((((x12)*(x70)))+(((IkReal(-0.0300000000000000))*(x12)))+(((x13)*(((x44)+(((IkReal(-1.00000000000000))*(x21)*(x52)))+(((IkReal(-1.00000000000000))*(x17)*(x51)))+(((IkReal(-1.00000000000000))*(x66))))))));
eerot[3]=((((x13)*(x68)))+(((x12)*(((((x11)*(x49)))+(x64))))));
eerot[4]=((((x13)*(x69)))+(((x12)*(((((x49)*(x5)))+(x65))))));
eerot[5]=((((x13)*(x67)))+(((x12)*(((((x32)*(x6)))+(((x48)*(x9))))))));
eetrans[1]=((((x13)*(x70)))+(((x12)*(((((IkReal(-1.00000000000000))*(x44)))+(x57)+(x66)+(((x52)*(x9)))))))+(((IkReal(-0.0300000000000000))*(x13))));
eerot[6]=((((x11)*(x63)))+(((x5)*(((((IkReal(-1.00000000000000))*(x21)*(x55)))+(((IkReal(-1.00000000000000))*(x17)*(x59))))))));
eerot[7]=((((x5)*(x63)))+(((x11)*(((((x59)*(x6)))+(((x55)*(x9))))))));
eerot[8]=((((x9)*(((((IkReal(-1.00000000000000))*(x20)*(x50)))+(x46)))))+(((x55)*(x6))));
IkReal x71=((IkReal(1.00000000000000))*(x31));
IkReal x72=((IkReal(1.00000000000000))*(x24));
eetrans[2]=((IkReal(0.159000000000000))+(((x6)*(((((IkReal(-0.0320000000000000))*(x27)))+(((IkReal(-1.00000000000000))*(x22)*(x71)))))))+(((IkReal(-0.265000000000000))*(x27)))+(((IkReal(-1.00000000000000))*(x26)*(x71)))+(((IkReal(0.0135000000000000))*(x39)))+(((x6)*(((((x19)*(x50)))+(((IkReal(-0.0270000000000000))*(x39)))))))+(((IkReal(-1.00000000000000))*(x10)*(x72)))+(((x9)*(((((IkReal(0.0320000000000000))*(x39)))+(((IkReal(-1.00000000000000))*(x15)*(x50)))))))+(((IkReal(0.246500000000000))*(x8)))+(((x4)*(((((x23)*(x29)))+(((IkReal(-0.0135000000000000))*(x33)))))))+(((IkReal(-0.0300000000000000))*(x10)))+(((IkReal(-1.00000000000000))*(x29)*(x72)))+(((x9)*(((((IkReal(-0.0270000000000000))*(x27)))+(((IkReal(-0.0270000000000000))*(x3)*(x31)))))))+(((IkReal(0.0405000000000000))*(x33))));
}

IKFAST_API int GetNumFreeParameters() { return 1; }
IKFAST_API int* GetFreeParameters() { static int freeparams[] = {0}; return freeparams; }
IKFAST_API int GetNumJoints() { return 7; }

IKFAST_API int GetIkRealSize() { return sizeof(IkReal); }

IKFAST_API int GetIkType() { return 0x67000001; }

class IKSolver {
public:
IkReal j1,cj1,sj1,htj1,j2,cj2,sj2,htj2,j3,cj3,sj3,htj3,j4,cj4,sj4,htj4,j5,cj5,sj5,htj5,j6,cj6,sj6,htj6,j0,cj0,sj0,htj0,new_r00,r00,rxp0_0,new_r01,r01,rxp0_1,new_r02,r02,rxp0_2,new_r10,r10,rxp1_0,new_r11,r11,rxp1_1,new_r12,r12,rxp1_2,new_r20,r20,rxp2_0,new_r21,r21,rxp2_1,new_r22,r22,rxp2_2,new_px,px,npx,new_py,py,npy,new_pz,pz,npz,pp;
unsigned char _ij1[2], _nj1,_ij2[2], _nj2,_ij3[2], _nj3,_ij4[2], _nj4,_ij5[2], _nj5,_ij6[2], _nj6,_ij0[2], _nj0;

bool ComputeIk(const IkReal* eetrans, const IkReal* eerot, const IkReal* pfree, IkSolutionListBase<IkReal>& solutions) {
j1=numeric_limits<IkReal>::quiet_NaN(); _ij1[0] = -1; _ij1[1] = -1; _nj1 = -1; j2=numeric_limits<IkReal>::quiet_NaN(); _ij2[0] = -1; _ij2[1] = -1; _nj2 = -1; j3=numeric_limits<IkReal>::quiet_NaN(); _ij3[0] = -1; _ij3[1] = -1; _nj3 = -1; j4=numeric_limits<IkReal>::quiet_NaN(); _ij4[0] = -1; _ij4[1] = -1; _nj4 = -1; j5=numeric_limits<IkReal>::quiet_NaN(); _ij5[0] = -1; _ij5[1] = -1; _nj5 = -1; j6=numeric_limits<IkReal>::quiet_NaN(); _ij6[0] = -1; _ij6[1] = -1; _nj6 = -1;  _ij0[0] = -1; _ij0[1] = -1; _nj0 = 0; 
for(int dummyiter = 0; dummyiter < 1; ++dummyiter) {
    solutions.Clear();
j0=pfree[0]; cj0=cos(pfree[0]); sj0=sin(pfree[0]);
r00 = eerot[0*3+0];
r01 = eerot[0*3+1];
r02 = eerot[0*3+2];
r10 = eerot[1*3+0];
r11 = eerot[1*3+1];
r12 = eerot[1*3+2];
r20 = eerot[2*3+0];
r21 = eerot[2*3+1];
r22 = eerot[2*3+2];
px = eetrans[0]; py = eetrans[1]; pz = eetrans[2];

new_r00=((((r00)*(IKcos(j0))))+(((r10)*(IKsin(j0)))));
new_r01=((((r01)*(IKcos(j0))))+(((r11)*(IKsin(j0)))));
new_r02=((((r12)*(IKsin(j0))))+(((r02)*(IKcos(j0)))));
IkReal x73=IKcos(j0);
IkReal x74=IKsin(j0);
new_px=((IkReal(0.0300000000000000))+(((py)*(x74)))+(((IkReal(-0.0320000000000000))*(r02)*(x73)))+(((px)*(x73)))+(((IkReal(-0.0320000000000000))*(r12)*(x74))));
new_r10=((IkReal(-1.00000000000000))*(r20));
new_r11=((IkReal(-1.00000000000000))*(r21));
new_r12=((IkReal(-1.00000000000000))*(r22));
new_py=((IkReal(0.159000000000000))+(((IkReal(0.0320000000000000))*(r22)))+(((IkReal(-1.00000000000000))*(pz))));
new_r20=((((IkReal(-1.00000000000000))*(r00)*(IKsin(j0))))+(((r10)*(IKcos(j0)))));
new_r21=((((IkReal(-1.00000000000000))*(r01)*(IKsin(j0))))+(((r11)*(IKcos(j0)))));
new_r22=((((IkReal(-1.00000000000000))*(r02)*(IKsin(j0))))+(((r12)*(IKcos(j0)))));
IkReal x75=IKsin(j0);
IkReal x76=IKcos(j0);
new_pz=((((py)*(x76)))+(((IkReal(-1.00000000000000))*(px)*(x75)))+(((IkReal(0.0320000000000000))*(r02)*(x75)))+(((IkReal(-0.0320000000000000))*(r12)*(x76))));
r00 = new_r00; r01 = new_r01; r02 = new_r02; r10 = new_r10; r11 = new_r11; r12 = new_r12; r20 = new_r20; r21 = new_r21; r22 = new_r22; px = new_px; py = new_py; pz = new_pz;
pp=(((px)*(px))+((py)*(py))+((pz)*(pz)));
npx=((((px)*(r00)))+(((py)*(r10)))+(((pz)*(r20))));
npy=((((px)*(r01)))+(((py)*(r11)))+(((pz)*(r21))));
npz=((((px)*(r02)))+(((py)*(r12)))+(((pz)*(r22))));
rxp0_0=((((IkReal(-1.00000000000000))*(py)*(r20)))+(((pz)*(r10))));
rxp0_1=((((px)*(r20)))+(((IkReal(-1.00000000000000))*(pz)*(r00))));
rxp0_2=((((IkReal(-1.00000000000000))*(px)*(r10)))+(((py)*(r00))));
rxp1_0=((((IkReal(-1.00000000000000))*(py)*(r21)))+(((pz)*(r11))));
rxp1_1=((((px)*(r21)))+(((IkReal(-1.00000000000000))*(pz)*(r01))));
rxp1_2=((((IkReal(-1.00000000000000))*(px)*(r11)))+(((py)*(r01))));
rxp2_0=((((IkReal(-1.00000000000000))*(py)*(r22)))+(((pz)*(r12))));
rxp2_1=((((px)*(r22)))+(((IkReal(-1.00000000000000))*(pz)*(r02))));
rxp2_2=((((IkReal(-1.00000000000000))*(px)*(r12)))+(((py)*(r02))));
IkReal op[162], zeror[48];
int numroots;
IkReal x77=((IkReal(0.0540000000000000))*(r22));
IkReal x78=((IkReal(8.21666666666667))*(npy));
IkReal x79=((IkReal(0.265000000000000))*(r20));
IkReal x80=((IkReal(0.0540000000000000))*(r20));
IkReal x81=((IkReal(0.530000000000000))*(r22));
IkReal x82=((IkReal(1.00000000000000))*(rxp1_2));
IkReal x83=((IkReal(0.530000000000000))*(r21));
IkReal x84=((IkReal(2.00000000000000))*(rxp0_2));
IkReal x85=((IkReal(16.4333333333333))*(npx));
IkReal x86=((IkReal(0.530000000000000))*(npz));
IkReal x87=((IkReal(0.108000000000000))*(npx));
IkReal x88=((IkReal(1.00000000000000))*(pp));
IkReal x89=((IkReal(0.00243000000000000))*(r21));
IkReal x90=((IkReal(1.06000000000000))*(npx));
IkReal x91=((IkReal(0.108000000000000))*(npz));
IkReal x92=((IkReal(0.00486000000000000))*(r20));
IkReal x93=((IkReal(0.108000000000000))*(r21));
IkReal x94=((IkReal(1.35000000000000))*(npy));
IkReal x95=((IkReal(0.265000000000000))*(r22));
IkReal x96=((IkReal(0.530000000000000))*(r20));
IkReal x97=((IkReal(2.70000000000000))*(npx));
IkReal x98=((IkReal(0.0485865000000000))*(r20));
IkReal x99=((IkReal(0.127331000000000))*(r22));
IkReal x100=((IkReal(0.530000000000000))*(pz));
IkReal x101=((IkReal(0.108000000000000))*(rxp1_2));
IkReal x102=((IkReal(0.260494000000000))*(r20));
IkReal x103=((IkReal(0.108000000000000))*(pz));
IkReal x104=((IkReal(0.0685530000000000))*(r22));
IkReal x105=((pp)*(r22));
IkReal x106=((IkReal(0.0199665000000000))*(r20));
IkReal x107=((IkReal(0.130247000000000))*(r22));
IkReal x108=((IkReal(0.530000000000000))*(rxp0_2));
IkReal x109=((IkReal(0.00983850000000000))*(r21));
IkReal x110=((IkReal(0.108000000000000))*(rxp2_2));
IkReal x111=((IkReal(0.0286200000000000))*(r21));
IkReal x112=((IkReal(0.108000000000000))*(rxp0_2));
IkReal x113=((IkReal(1.06000000000000))*(rxp2_2));
IkReal x114=((IkReal(1.06000000000000))*(rxp1_2));
IkReal x115=((pp)*(r21));
IkReal x116=((IkReal(0.00692250000000000))*(r21));
IkReal x117=((IkReal(0.00728700000000000))*(r20));
IkReal x118=((IkReal(0.530000000000000))*(rxp1_2));
IkReal x119=((IkReal(0.00865350000000000))*(r22));
IkReal x120=((IkReal(0.216000000000000))*(rxp0_2));
IkReal x121=((IkReal(0.0113130000000000))*(r20));
IkReal x122=((IkReal(0.0204060000000000))*(r22));
IkReal x123=((pp)*(r20));
IkReal x124=((IkReal(1.06000000000000))*(rxp0_2));
IkReal x125=((IkReal(0.0199665000000000))*(r22));
IkReal x126=((IkReal(0.0102030000000000))*(r20));
IkReal x127=((IkReal(4.00000000000000))*(rxp2_2));
IkReal x128=((IkReal(32.8666666666667))*(npz));
IkReal x129=((IkReal(4.00000000000000))*(rxp1_2));
IkReal x130=((IkReal(32.8666666666667))*(npy));
IkReal x131=((IkReal(1.06000000000000))*(r20));
IkReal x132=((IkReal(0.00972000000000000))*(r22));
IkReal x133=((IkReal(0.162000000000000))*(npy));
IkReal x134=((IkReal(0.324000000000000))*(npx));
IkReal x135=((IkReal(0.00972000000000000))*(r21));
IkReal x136=((IkReal(0.0810000000000000))*(r21));
IkReal x137=((IkReal(5.40000000000000))*(npz));
IkReal x138=((IkReal(5.40000000000000))*(npy));
IkReal x139=((IkReal(0.162000000000000))*(r20));
IkReal x140=((IkReal(0.324000000000000))*(rxp2_2));
IkReal x141=((IkReal(0.00874800000000000))*(r21));
IkReal x142=((IkReal(0.0828630000000000))*(r21));
IkReal x143=((IkReal(0.162000000000000))*(rxp0_2));
IkReal x144=((IkReal(0.165726000000000))*(r20));
IkReal x145=((IkReal(0.324000000000000))*(rxp1_2));
IkReal x146=((IkReal(0.0167610000000000))*(r20));
IkReal x147=((IkReal(0.0540000000000000))*(pz));
IkReal x148=((IkReal(0.0143100000000000))*(r22));
IkReal x149=((IkReal(0.216000000000000))*(rxp1_2));
IkReal x150=((IkReal(0.0286200000000000))*(r20));
IkReal x151=((IkReal(0.0364380000000000))*(r22));
IkReal x152=((IkReal(2.12000000000000))*(rxp0_2));
IkReal x153=((IkReal(0.0138450000000000))*(r20));
IkReal x154=((IkReal(0.0429300000000000))*(r22));
IkReal x155=((IkReal(0.162000000000000))*(pz));
IkReal x156=((IkReal(0.0540000000000000))*(rxp2_2));
IkReal x157=((IkReal(0.0174900000000000))*(r21));
IkReal x158=((IkReal(0.0572400000000000))*(r21));
IkReal x159=((IkReal(2.12000000000000))*(rxp2_2));
IkReal x160=((IkReal(0.0204060000000000))*(r21));
IkReal x161=((IkReal(2.12000000000000))*(rxp1_2));
IkReal x162=((IkReal(0.162000000000000))*(rxp2_2));
IkReal x163=((IkReal(0.0270000000000000))*(r22));
IkReal x164=((IkReal(0.108000000000000))*(r20));
IkReal x165=((IkReal(0.0810000000000000))*(r22));
IkReal x166=((IkReal(0.0540000000000000))*(npx));
IkReal x167=((IkReal(2.12000000000000))*(npy));
IkReal x168=((IkReal(0.216000000000000))*(npz));
IkReal x169=((IkReal(0.162000000000000))*(npx));
IkReal x170=((IkReal(0.0270000000000000))*(r20));
IkReal x171=((IkReal(0.108000000000000))*(r22));
IkReal x172=((IkReal(0.0810000000000000))*(r20));
IkReal x173=((IkReal(0.129518000000000))*(r22));
IkReal x174=((IkReal(0.0540000000000000))*(rxp1_2));
IkReal x175=((IkReal(0.0342765000000000))*(r20));
IkReal x176=((IkReal(0.0971730000000000))*(r22));
IkReal x177=((IkReal(0.256120000000000))*(r20));
IkReal x178=((IkReal(0.0628965000000000))*(r20));
IkReal x179=((IkReal(0.162000000000000))*(rxp1_2));
IkReal x180=((IkReal(0.123686000000000))*(r22));
IkReal x181=((IkReal(0.00765150000000000))*(r21));
IkReal x182=((IkReal(0.0572400000000000))*(r20));
IkReal x183=((IkReal(0.0134835000000000))*(r21));
IkReal x184=((IkReal(0.00565650000000000))*(r22));
IkReal x185=((IkReal(0.00947400000000000))*(r20));
IkReal x186=((IkReal(0.0160320000000000))*(r22));
IkReal x187=((IkReal(0.0173070000000000))*(r20));
IkReal x188=((IkReal(0.00364200000000000))*(r20));
IkReal x189=((IkReal(0.0229635000000000))*(r22));
IkReal x190=((npz)*(pz));
IkReal x191=((IkReal(8.00000000000000))*(pz));
IkReal x192=((IkReal(2.00000000000000))*(pz));
IkReal x193=((IkReal(4.00000000000000))*(pz));
IkReal x194=((IkReal(2.00000000000000))*(x190));
IkReal x195=((r22)*(x88));
IkReal x196=((npx)*(x193));
IkReal x197=((IkReal(2.00000000000000))*(x123));
IkReal x198=((npy)*(x192));
IkReal x199=((r21)*(x88));
IkReal x200=((npx)*(x192));
IkReal x201=((IkReal(4.00000000000000))*(x190));
IkReal x202=((IkReal(2.00000000000000))*(x105));
IkReal x203=((npy)*(x193));
IkReal x204=((IkReal(2.00000000000000))*(x115));
IkReal x205=((r20)*(x88));
IkReal x206=((IkReal(4.00000000000000))*(x115));
IkReal x207=((npy)*(x191));
IkReal x208=((IkReal(8.00000000000000))*(x190));
IkReal x209=((IkReal(4.00000000000000))*(x105));
IkReal x210=((IkReal(4.00000000000000))*(x123));
IkReal x211=((npx)*(x191));
IkReal x212=((IkReal(-1.06000000000000))*(r21));
IkReal x213=((pz)+(x95));
IkReal x214=((IkReal(0.00243000000000000))+(x115));
IkReal x215=((rxp1_2)+(x78));
IkReal x216=((IkReal(-0.0286200000000000))+(x90));
IkReal x217=((x84)+(x85));
IkReal x218=((x133)+(x92));
IkReal x219=((x142)+(x143));
IkReal x220=((x78)+(x82));
IkReal x221=((x88)+(x89));
IkReal x222=((x88)+(x86));
IkReal x223=((IkReal(0.00243000000000000))+(x198));
IkReal x224=((x108)+(x109));
IkReal x225=((x127)+(x128));
IkReal x226=((x113)+(x111));
IkReal x227=((x136)+(x97));
IkReal x228=((x170)+(x94));
IkReal x229=((x169)+(x89));
IkReal x230=((x89)+(x86));
IkReal x231=((x130)+(x129));
IkReal x232=((x155)+(x189));
IkReal x233=((x155)+(x154));
IkReal x234=((x108)+(x181));
IkReal x235=((x80)+(x94));
IkReal x236=((x123)+(x118));
IkReal x237=((x179)+(x178));
IkReal x238=((x158)+(x112));
IkReal x239=((x147)+(x184));
IkReal x240=((x124)+(x203));
IkReal x241=((x160)+(x204));
IkReal x242=((x215)+(x79));
IkReal x243=((x213)+(x94));
IkReal x244=((x114)+(x196));
IkReal x245=((x108)+(x198));
IkReal x246=((x101)+(x201));
IkReal x247=((x103)+(x196));
IkReal x248=((x118)+(x205));
IkReal x249=((x124)+(x204));
IkReal x250=((x146)+(x197));
IkReal x251=((x186)+(x202));
IkReal x252=((x103)+(x197));
IkReal x253=((x100)+(x194));
IkReal x254=((x151)+(x209));
IkReal x255=((x100)+(x195));
IkReal x256=((x122)+(x202));
IkReal x257=((x173)+(x194));
IkReal x258=((x118)+(x200));
IkReal x259=((x114)+(x197));
IkReal x260=((x194)+(x99));
IkReal x261=((x217)+(x83));
IkReal x262=((x153)+(x259));
op[0]=((x77)+(x79)+(((IkReal(-1.00000000000000))*(x220))));
op[1]=((IkReal(-1.00000000000000))*(x261));
op[2]=((((IkReal(-1.00000000000000))*(x79)))+(x215)+(x77));
op[3]=((x81)+(((IkReal(-1.00000000000000))*(x80))));
op[4]=x93;
op[5]=((x80)+(x81));
op[6]=((((IkReal(-1.00000000000000))*(x79)))+(((IkReal(-1.00000000000000))*(x220))));
op[7]=((x83)+(((IkReal(-1.00000000000000))*(x217))));
op[8]=x242;
op[9]=((IkReal(-0.00983850000000000))+(x230)+(((IkReal(-1.00000000000000))*(x88)))+(((IkReal(-1.00000000000000))*(x87))));
op[10]=((((IkReal(0.216000000000000))*(npy)))+(x92));
op[11]=((IkReal(-0.00983850000000000))+(x86)+(x87)+(((IkReal(-1.00000000000000))*(x221))));
op[12]=((IkReal(-0.0286200000000000))+(((IkReal(-1.00000000000000))*(x90)))+(((IkReal(-1.00000000000000))*(x91))));
op[13]=x167;
op[14]=((x216)+(((IkReal(-1.00000000000000))*(x91))));
op[15]=((IkReal(-0.00692250000000000))+(x89)+(((IkReal(-1.00000000000000))*(x222))));
op[16]=x92;
op[17]=((IkReal(-0.00692250000000000))+(((IkReal(-1.00000000000000))*(x86)))+(((IkReal(-1.00000000000000))*(x221))));
op[18]=((x235)+(pz)+(((IkReal(-1.00000000000000))*(x95))));
op[19]=((x97)+(((IkReal(-1.00000000000000))*(x93))));
op[20]=((((IkReal(-1.00000000000000))*(x235)))+(pz)+(((IkReal(-1.00000000000000))*(x95))));
op[21]=((x77)+(x96));
op[22]=x212;
op[23]=((x77)+(((IkReal(-1.00000000000000))*(x96))));
op[24]=x243;
op[25]=x97;
op[26]=((x213)+(((IkReal(-1.00000000000000))*(x94))));
op[27]=((x101)+(x260)+(((IkReal(-1.00000000000000))*(x98)))+(((IkReal(-1.00000000000000))*(x255))));
op[28]=((x120)+(((IkReal(0.0971730000000000))*(r21))));
op[29]=((((IkReal(-1.00000000000000))*(x101)))+(x260)+(x98)+(((IkReal(-1.00000000000000))*(x255))));
op[30]=((((IkReal(-1.00000000000000))*(x104)))+(((IkReal(-1.00000000000000))*(x102)))+(x197)+(((IkReal(-1.00000000000000))*(x247))));
op[31]=((((IkReal(-1.00000000000000))*(x206)))+(x207)+(((IkReal(0.520988000000000))*(r21))));
op[32]=((((IkReal(-1.00000000000000))*(x104)))+(x102)+(x196)+(((IkReal(-1.00000000000000))*(x252))));
op[33]=((((IkReal(-1.00000000000000))*(x107)))+(x105)+(x106)+(((IkReal(-1.00000000000000))*(x253))));
op[34]=((IkReal(-0.0399330000000000))*(r21));
op[35]=((((IkReal(-1.00000000000000))*(x107)))+(((IkReal(-1.00000000000000))*(x106)))+(x105)+(((IkReal(-1.00000000000000))*(x253))));
op[36]=((((IkReal(-1.00000000000000))*(x199)))+(((IkReal(-1.00000000000000))*(x110)))+(x223)+(((IkReal(-1.00000000000000))*(x224))));
op[37]=((((IkReal(-1.00000000000000))*(x197)))+(x244)+(((IkReal(-0.0196770000000000))*(r20))));
op[38]=((((IkReal(-1.00000000000000))*(x198)))+(((IkReal(-1.00000000000000))*(x110)))+(x214)+(x224));
op[39]=((x112)+(((IkReal(-1.00000000000000))*(x226))));
op[40]=((((IkReal(-1.00000000000000))*(x149)))+(((IkReal(-1.00000000000000))*(x182))));
op[41]=((((IkReal(-1.00000000000000))*(x112)))+(((IkReal(-1.00000000000000))*(x113)))+(x111));
op[42]=((((IkReal(-1.00000000000000))*(x199)))+(((IkReal(-1.00000000000000))*(x116)))+(x108)+(x223));
op[43]=((x196)+(((IkReal(-1.00000000000000))*(x262))));
op[44]=((x116)+(x214)+(((IkReal(-1.00000000000000))*(x245))));
op[45]=((((IkReal(-1.00000000000000))*(x117)))+(((IkReal(-1.00000000000000))*(x119)))+(x103)+(((IkReal(-1.00000000000000))*(x205)))+(x258));
op[46]=((((IkReal(0.0145740000000000))*(r21)))+(((IkReal(-1.00000000000000))*(x203)))+(x249));
op[47]=((((IkReal(-1.00000000000000))*(x119)))+(x123)+(x117)+(x103)+(((IkReal(-1.00000000000000))*(x258))));
op[48]=((((IkReal(-1.00000000000000))*(x121)))+(x246)+(((IkReal(-1.00000000000000))*(x256))));
op[49]=((x120)+(((IkReal(0.0226260000000000))*(r21))));
op[50]=((((IkReal(-1.00000000000000))*(x101)))+(x121)+(x201)+(((IkReal(-1.00000000000000))*(x256))));
op[51]=((((IkReal(-1.00000000000000))*(x125)))+(x126)+(((IkReal(-1.00000000000000))*(x200)))+(x236));
op[52]=((x240)+(((IkReal(-1.00000000000000))*(x241))));
op[53]=((((IkReal(-1.00000000000000))*(x125)))+(((IkReal(-1.00000000000000))*(x126)))+(x200)+(((IkReal(-1.00000000000000))*(x248))));
op[54]=((IkReal(-0.221850000000000))+(((IkReal(-1.00000000000000))*(x261))));
op[55]=((((IkReal(-1.00000000000000))*(x131)))+(x231));
op[56]=((IkReal(-0.221850000000000))+(x261));
op[57]=((((IkReal(-1.00000000000000))*(x93)))+(((IkReal(-1.00000000000000))*(x225))));
op[58]=((IkReal(-0.216000000000000))*(r20));
op[59]=((x93)+(((IkReal(-1.00000000000000))*(x225))));
op[60]=((IkReal(0.665550000000000))+(x217)+(((IkReal(-1.00000000000000))*(x83))));
op[61]=((((IkReal(-1.00000000000000))*(x131)))+(((IkReal(-1.00000000000000))*(x231))));
op[62]=((IkReal(0.665550000000000))+(x83)+(((IkReal(-1.00000000000000))*(x217))));
op[63]=x218;
op[64]=((x134)+(((IkReal(-1.00000000000000))*(x135))));
op[65]=((IkReal(-1.00000000000000))*(x218));
op[66]=x132;
op[67]=IkReal(0);
op[68]=x132;
op[69]=((x133)+(((IkReal(-1.00000000000000))*(x92))));
op[70]=((x135)+(x134));
op[71]=((((IkReal(-1.00000000000000))*(x133)))+(x92));
op[72]=((IkReal(0.0364500000000000))+(((IkReal(-1.00000000000000))*(x136)))+(x97));
op[73]=((((IkReal(-1.00000000000000))*(x138)))+(((IkReal(-1.00000000000000))*(x139))));
op[74]=((IkReal(0.0364500000000000))+(x136)+(((IkReal(-1.00000000000000))*(x97))));
op[75]=x137;
op[76]=IkReal(0);
op[77]=x137;
op[78]=((IkReal(-0.109350000000000))+(((IkReal(-1.00000000000000))*(x227))));
op[79]=((x138)+(((IkReal(-1.00000000000000))*(x139))));
op[80]=((IkReal(-0.109350000000000))+(x227));
op[81]=x219;
op[82]=((((IkReal(-1.00000000000000))*(x145)))+(x144));
op[83]=((IkReal(-1.00000000000000))*(x219));
op[84]=((x140)+(x141));
op[85]=((IkReal(0.0174960000000000))*(r20));
op[86]=((((IkReal(-1.00000000000000))*(x141)))+(x140));
op[87]=((((IkReal(-1.00000000000000))*(x143)))+(x142));
op[88]=((x144)+(x145));
op[89]=((((IkReal(-1.00000000000000))*(x142)))+(x143));
op[90]=((((IkReal(-1.00000000000000))*(x148)))+(x147)+(x244)+(((IkReal(-1.00000000000000))*(x250))));
op[91]=((x152)+(((IkReal(-1.00000000000000))*(x207)))+(x206)+(((IkReal(0.0335220000000000))*(r21))));
op[92]=((((IkReal(-1.00000000000000))*(x148)))+(x147)+(x250)+(((IkReal(-1.00000000000000))*(x244))));
op[93]=((((IkReal(-1.00000000000000))*(x150)))+(x149)+(x208)+(((IkReal(-1.00000000000000))*(x254))));
op[94]=((((IkReal(0.432000000000000))*(rxp0_2)))+(x158));
op[95]=((((IkReal(-1.00000000000000))*(x149)))+(x150)+(x208)+(((IkReal(-1.00000000000000))*(x254))));
op[96]=((((IkReal(-1.00000000000000))*(x196)))+(((IkReal(-1.00000000000000))*(x233)))+(x262));
op[97]=((x152)+(((IkReal(-1.00000000000000))*(x206)))+(x207)+(((IkReal(-0.0276900000000000))*(r21))));
op[98]=((x196)+(((IkReal(-1.00000000000000))*(x233)))+(((IkReal(-1.00000000000000))*(x262))));
op[99]=((x157)+(x156)+(((IkReal(-1.00000000000000))*(x203)))+(x249));
op[100]=((((IkReal(-1.00000000000000))*(x161)))+(x210)+(((IkReal(-1.00000000000000))*(x211)))+(((IkReal(0.0349800000000000))*(r20))));
op[101]=((((IkReal(-1.00000000000000))*(x157)))+(x156)+(x203)+(((IkReal(-1.00000000000000))*(x249))));
op[102]=((x159)+(x238));
op[103]=((((IkReal(-1.00000000000000))*(x149)))+(((IkReal(0.114480000000000))*(r20))));
op[104]=((x159)+(((IkReal(-1.00000000000000))*(x238))));
op[105]=((x162)+(x241)+(((IkReal(-1.00000000000000))*(x240))));
op[106]=((x161)+(((IkReal(0.0408120000000000))*(r20)))+(x210)+(((IkReal(-1.00000000000000))*(x211))));
op[107]=((x162)+(x240)+(((IkReal(-1.00000000000000))*(x241))));
op[108]=((((IkReal(-1.00000000000000))*(x79)))+(x163)+(x215));
op[109]=x261;
op[110]=((x163)+(x79)+(((IkReal(-1.00000000000000))*(x220))));
op[111]=((((IkReal(-1.00000000000000))*(x164)))+(((IkReal(-1.00000000000000))*(x81))));
op[112]=((IkReal(0.216000000000000))*(r21));
op[113]=((x164)+(((IkReal(-1.00000000000000))*(x81))));
op[114]=((((IkReal(-1.00000000000000))*(x165)))+(x242));
op[115]=((x217)+(((IkReal(-1.00000000000000))*(x83))));
op[116]=((((IkReal(-1.00000000000000))*(x165)))+(((IkReal(-1.00000000000000))*(x79)))+(((IkReal(-1.00000000000000))*(x220))));
op[117]=((IkReal(-0.00765150000000000))+(x166)+(x86)+(((IkReal(-1.00000000000000))*(x221))));
op[118]=((((IkReal(-0.108000000000000))*(npy)))+(((IkReal(-1.00000000000000))*(x92))));
op[119]=((IkReal(-0.00765150000000000))+(((IkReal(-1.00000000000000))*(x166)))+(x230)+(((IkReal(-1.00000000000000))*(x88))));
op[120]=((IkReal(-0.0286200000000000))+(x168)+(((IkReal(-1.00000000000000))*(x90))));
op[121]=x167;
op[122]=((x168)+(x216));
op[123]=((IkReal(-0.0134835000000000))+(((IkReal(-1.00000000000000))*(x169)))+(((IkReal(-1.00000000000000))*(x86)))+(((IkReal(-1.00000000000000))*(x221))));
op[124]=((((IkReal(0.324000000000000))*(npy)))+(((IkReal(-1.00000000000000))*(x92))));
op[125]=((IkReal(-0.0134835000000000))+(x229)+(((IkReal(-1.00000000000000))*(x222))));
op[126]=((pz)+(((IkReal(-1.00000000000000))*(x95)))+(((IkReal(-1.00000000000000))*(x228))));
op[127]=((((IkReal(0.0540000000000000))*(r21)))+(((IkReal(-1.00000000000000))*(x97))));
op[128]=((x228)+(pz)+(((IkReal(-1.00000000000000))*(x95))));
op[129]=((((IkReal(-1.00000000000000))*(x171)))+(x96));
op[130]=x212;
op[131]=((((IkReal(-1.00000000000000))*(x171)))+(((IkReal(-1.00000000000000))*(x96))));
op[132]=((x172)+(x213)+(((IkReal(-1.00000000000000))*(x94))));
op[133]=((((IkReal(-1.00000000000000))*(x97)))+(((IkReal(-0.162000000000000))*(r21))));
op[134]=((((IkReal(-1.00000000000000))*(x172)))+(x243));
op[135]=((((IkReal(-1.00000000000000))*(x174)))+(x175)+(x257)+(((IkReal(-1.00000000000000))*(x255))));
op[136]=((((IkReal(-1.00000000000000))*(x112)))+(((IkReal(-0.0685530000000000))*(r21))));
op[137]=((((IkReal(-1.00000000000000))*(x175)))+(x174)+(x257)+(((IkReal(-1.00000000000000))*(x255))));
op[138]=((((IkReal(-1.00000000000000))*(x177)))+(x176)+(x197)+(((IkReal(-1.00000000000000))*(x247))));
op[139]=((((IkReal(-1.00000000000000))*(x206)))+(x207)+(((IkReal(0.512240000000000))*(r21))));
op[140]=((x177)+(x176)+(x196)+(((IkReal(-1.00000000000000))*(x252))));
op[141]=((((IkReal(-1.00000000000000))*(x180)))+(x105)+(((IkReal(-1.00000000000000))*(x237)))+(((IkReal(-1.00000000000000))*(x253))));
op[142]=((((IkReal(-0.324000000000000))*(rxp0_2)))+(((IkReal(0.125793000000000))*(r21))));
op[143]=((((IkReal(-1.00000000000000))*(x180)))+(x105)+(x237)+(((IkReal(-1.00000000000000))*(x253))));
op[144]=((((IkReal(-1.00000000000000))*(x156)))+(((IkReal(-1.00000000000000))*(x198)))+(x214)+(x234));
op[145]=((((IkReal(0.0153030000000000))*(r20)))+(x197)+(((IkReal(-1.00000000000000))*(x244))));
op[146]=((((IkReal(-1.00000000000000))*(x156)))+(((IkReal(-1.00000000000000))*(x199)))+(((IkReal(-1.00000000000000))*(x234)))+(x223));
op[147]=((x120)+(x226));
op[148]=((x182)+(((IkReal(-0.432000000000000))*(rxp1_2))));
op[149]=((((IkReal(-1.00000000000000))*(x111)))+(((IkReal(-1.00000000000000))*(x120)))+(x113));
op[150]=((x162)+(x183)+(x214)+(((IkReal(-1.00000000000000))*(x245))));
op[151]=((((IkReal(0.0269670000000000))*(r20)))+(((IkReal(-1.00000000000000))*(x196)))+(x259));
op[152]=((((IkReal(-1.00000000000000))*(x183)))+(((IkReal(-1.00000000000000))*(x199)))+(x162)+(x108)+(x223));
op[153]=((x123)+(x185)+(x239)+(((IkReal(-1.00000000000000))*(x258))));
op[154]=((((IkReal(-0.0189480000000000))*(r21)))+(x203)+(((IkReal(-1.00000000000000))*(x249))));
op[155]=((((IkReal(-1.00000000000000))*(x185)))+(((IkReal(-1.00000000000000))*(x205)))+(x258)+(x239));
op[156]=((x187)+(x251)+(((IkReal(-1.00000000000000))*(x246))));
op[157]=((((IkReal(-1.00000000000000))*(x120)))+(((IkReal(-0.0346140000000000))*(r21))));
op[158]=((((IkReal(-1.00000000000000))*(x187)))+(x101)+(((IkReal(-1.00000000000000))*(x201)))+(x251));
op[159]=((((IkReal(-1.00000000000000))*(x188)))+(x232)+(x200)+(((IkReal(-1.00000000000000))*(x248))));
op[160]=((((IkReal(0.00728400000000000))*(r21)))+(x204)+(((IkReal(-1.00000000000000))*(x240))));
op[161]=((x188)+(((IkReal(-1.00000000000000))*(x200)))+(x232)+(x236));
solvedialyticpoly12qep(op,zeror,numroots);
IkReal j4array[16], cj4array[16], sj4array[16], j5array[16], cj5array[16], sj5array[16], j6array[16], cj6array[16], sj6array[16];
int numsolutions = 0;
for(int ij4 = 0; ij4 < numroots; ij4 += 3)
{
IkReal htj4 = zeror[ij4+0], htj5 = zeror[ij4+1], htj6 = zeror[ij4+2];
j4array[numsolutions]=((IkReal(2.00000000000000))*(atan(htj4)));
j5array[numsolutions]=((IkReal(2.00000000000000))*(atan(htj5)));
j6array[numsolutions]=((IkReal(2.00000000000000))*(atan(htj6)));
IkReal x263=(htj4)*(htj4);
IkReal x264=(htj5)*(htj5);
IkReal x265=(htj6)*(htj6);
cj4array[numsolutions]=((((IKabs(((IkReal(1.00000000000000))+(x263))) != 0)?((IkReal)1/(((IkReal(1.00000000000000))+(x263)))):(IkReal)1.0e30))*(((IkReal(1.00000000000000))+(((IkReal(-1.00000000000000))*(x263))))));
cj5array[numsolutions]=((((IKabs(((IkReal(1.00000000000000))+(x264))) != 0)?((IkReal)1/(((IkReal(1.00000000000000))+(x264)))):(IkReal)1.0e30))*(((IkReal(1.00000000000000))+(((IkReal(-1.00000000000000))*(x264))))));
cj6array[numsolutions]=((((IKabs(((IkReal(1.00000000000000))+(x265))) != 0)?((IkReal)1/(((IkReal(1.00000000000000))+(x265)))):(IkReal)1.0e30))*(((IkReal(1.00000000000000))+(((IkReal(-1.00000000000000))*(x265))))));
sj4array[numsolutions]=((IkReal(2.00000000000000))*(htj4)*(((IKabs(((IkReal(1.00000000000000))+((htj4)*(htj4)))) != 0)?((IkReal)1/(((IkReal(1.00000000000000))+((htj4)*(htj4))))):(IkReal)1.0e30)));
sj5array[numsolutions]=((IkReal(2.00000000000000))*(htj5)*(((IKabs(((IkReal(1.00000000000000))+((htj5)*(htj5)))) != 0)?((IkReal)1/(((IkReal(1.00000000000000))+((htj5)*(htj5))))):(IkReal)1.0e30)));
sj6array[numsolutions]=((IkReal(2.00000000000000))*(htj6)*(((IKabs(((IkReal(1.00000000000000))+((htj6)*(htj6)))) != 0)?((IkReal)1/(((IkReal(1.00000000000000))+((htj6)*(htj6))))):(IkReal)1.0e30)));
if( j4array[numsolutions] > IKPI )
{
    j4array[numsolutions]-=IK2PI;
}
else if( j4array[numsolutions] < -IKPI )
{
    j4array[numsolutions]+=IK2PI;
}
if( j5array[numsolutions] > IKPI )
{
    j5array[numsolutions]-=IK2PI;
}
else if( j5array[numsolutions] < -IKPI )
{
    j5array[numsolutions]+=IK2PI;
}
if( j6array[numsolutions] > IKPI )
{
    j6array[numsolutions]-=IK2PI;
}
else if( j6array[numsolutions] < -IKPI )
{
    j6array[numsolutions]+=IK2PI;
}
numsolutions++;
}
bool j4valid[16]={true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true};
_nj4 = 16;
_nj5 = 1;
_nj6 = 1;
for(int ij4 = 0; ij4 < numsolutions; ++ij4)
    {
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
_ij5[0] = 0; _ij5[1] = -1;
_ij6[0] = 0; _ij6[1] = -1;
for(int iij4 = ij4+1; iij4 < numsolutions; ++iij4)
{
if( !j4valid[iij4] ) { continue; }
if( IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(cj5array[ij4]-cj5array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij4]-sj5array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(cj6array[ij4]-cj6array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj6array[ij4]-sj6array[iij4]) < IKFAST_SOLUTION_THRESH &&  1 )
{
    j4valid[iij4]=false; _ij4[1] = iij4; _ij5[1] = 0; _ij6[1] = 0;  break; 
}
}
    j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];

    j5 = j5array[ij4]; cj5 = cj5array[ij4]; sj5 = sj5array[ij4];

    j6 = j6array[ij4]; cj6 = cj6array[ij4]; sj6 = sj6array[ij4];

{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x266=((r22)*(sj5));
IkReal x267=((cj6)*(r20));
IkReal x268=((IkReal(6.54320987654321))*(sj5));
IkReal x269=((cj4)*(cj5));
IkReal x270=((cj5)*(sj4));
IkReal x271=((cj6)*(r21));
IkReal x272=((IkReal(0.333333333333333))*(cj5));
IkReal x273=((IkReal(1.00000000000000))*(sj4));
IkReal x274=((r20)*(sj6));
IkReal x275=((r21)*(sj6));
IkReal x276=((IkReal(1.00000000000000))*(x275));
if( IKabs(((((x272)*(x275)))+(((IkReal(-1.00000000000000))*(x273)*(x274)))+(((x267)*(x268)))+(((x267)*(x269)))+(((IkReal(-6.54320987654321))*(cj5)*(r22)))+(((IkReal(-1.00000000000000))*(x271)*(x273)))+(((cj4)*(x266)))+(((IkReal(-1.00000000000000))*(x269)*(x276)))+(((IkReal(-0.333333333333333))*(x266)))+(((IkReal(0.666666666666667))*(x267)))+(((IkReal(-1.00000000000000))*(x268)*(x275)))+(((IkReal(-1.00000000000000))*(x267)*(x272)))+(((IkReal(24.6913580246914))*(pz)))+(((IkReal(-0.666666666666667))*(x275))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((cj4)*(x271)))+(((cj4)*(x274)))+(((IkReal(-1.00000000000000))*(x270)*(x276)))+(((sj4)*(x266)))+(((x267)*(x270))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((x272)*(x275)))+(((IkReal(-1.00000000000000))*(x273)*(x274)))+(((x267)*(x268)))+(((x267)*(x269)))+(((IkReal(-6.54320987654321))*(cj5)*(r22)))+(((IkReal(-1.00000000000000))*(x271)*(x273)))+(((cj4)*(x266)))+(((IkReal(-1.00000000000000))*(x269)*(x276)))+(((IkReal(-0.333333333333333))*(x266)))+(((IkReal(0.666666666666667))*(x267)))+(((IkReal(-1.00000000000000))*(x268)*(x275)))+(((IkReal(-1.00000000000000))*(x267)*(x272)))+(((IkReal(24.6913580246914))*(pz)))+(((IkReal(-0.666666666666667))*(x275)))))+IKsqr(((((cj4)*(x271)))+(((cj4)*(x274)))+(((IkReal(-1.00000000000000))*(x270)*(x276)))+(((sj4)*(x266)))+(((x267)*(x270)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j2array[0]=IKatan2(((((x272)*(x275)))+(((IkReal(-1.00000000000000))*(x273)*(x274)))+(((x267)*(x268)))+(((x267)*(x269)))+(((IkReal(-6.54320987654321))*(cj5)*(r22)))+(((IkReal(-1.00000000000000))*(x271)*(x273)))+(((cj4)*(x266)))+(((IkReal(-1.00000000000000))*(x269)*(x276)))+(((IkReal(-0.333333333333333))*(x266)))+(((IkReal(0.666666666666667))*(x267)))+(((IkReal(-1.00000000000000))*(x268)*(x275)))+(((IkReal(-1.00000000000000))*(x267)*(x272)))+(((IkReal(24.6913580246914))*(pz)))+(((IkReal(-0.666666666666667))*(x275)))), ((((cj4)*(x271)))+(((cj4)*(x274)))+(((IkReal(-1.00000000000000))*(x270)*(x276)))+(((sj4)*(x266)))+(((x267)*(x270)))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[2];
IkReal x277=((IkReal(1.00000000000000))*(cj4));
IkReal x278=((r20)*(sj6));
IkReal x279=((cj6)*(r21));
IkReal x280=((r21)*(sj6));
IkReal x281=((cj5)*(sj4));
IkReal x282=((cj6)*(r20));
IkReal x283=((IkReal(0.0405000000000000))*(sj4));
IkReal x284=((r22)*(sj5));
IkReal x285=((IkReal(0.0135000000000000))*(cj5));
IkReal x286=((IkReal(0.265000000000000))*(sj5));
IkReal x287=((IkReal(0.0405000000000000))*(cj4)*(cj5));
evalcond[0]=((((IkReal(-1.00000000000000))*(x277)*(x279)))+(((IkReal(-1.00000000000000))*(x277)*(x278)))+(((IkReal(-1.00000000000000))*(x281)*(x282)))+(IKcos(j2))+(((IkReal(-1.00000000000000))*(sj4)*(x284)))+(((x280)*(x281))));
evalcond[1]=((((x279)*(x283)))+(((x278)*(x283)))+(((IkReal(-0.0405000000000000))*(cj4)*(x284)))+(((IkReal(0.0405000000000000))*(IKsin(j2))))+(((IkReal(-0.0270000000000000))*(x282)))+(((IkReal(-1.00000000000000))*(x280)*(x285)))+(((IkReal(0.265000000000000))*(cj5)*(r22)))+(((IkReal(-1.00000000000000))*(pz)))+(((IkReal(-1.00000000000000))*(x282)*(x286)))+(((IkReal(-1.00000000000000))*(x282)*(x287)))+(((IkReal(0.0270000000000000))*(x280)))+(((x280)*(x286)))+(((x280)*(x287)))+(((IkReal(0.0135000000000000))*(x284)))+(((x282)*(x285))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst1;
gconst1=IKsign(sj2);
dummyeval[0]=sj2;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst0;
gconst0=IKsign(sj2);
dummyeval[0]=sj2;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[2];
dummyeval[0]=((sj2)+(((IkReal(1.35000000000000))*(cj2)*(sj2))));
dummyeval[1]=sj2;
if( IKabs(dummyeval[0]) < 0.0000010000000000  || IKabs(dummyeval[1]) < 0.0000010000000000  )
{
{
IkReal evalcond[7];
IkReal x288=((r21)*(sj6));
IkReal x289=((cj5)*(sj4));
IkReal x290=((IkReal(1.00000000000000))*(cj5));
IkReal x291=((cj6)*(r20));
IkReal x292=((IkReal(0.265000000000000))*(sj5));
IkReal x293=((r20)*(sj6));
IkReal x294=((IkReal(1.00000000000000))*(cj4));
IkReal x295=((IkReal(0.0135000000000000))*(cj5));
IkReal x296=((r22)*(sj5));
IkReal x297=((IkReal(1.00000000000000))*(cj6));
IkReal x298=((IkReal(1.00000000000000))*(sj4)*(sj5));
IkReal x299=((cj6)*(r21)*(sj4));
IkReal x300=((IkReal(0.0405000000000000))*(cj4)*(cj5));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(3.14159265358979))+(j2)), IkReal(6.28318530717959))));
evalcond[1]=((((sj5)*(x291)))+(((IkReal(-1.00000000000000))*(sj5)*(x288)))+(((IkReal(-1.00000000000000))*(r22)*(x290))));
evalcond[2]=((IkReal(1.00000000000000))+(((IkReal(-1.00000000000000))*(cj6)*(r21)*(x294)))+(((IkReal(-1.00000000000000))*(sj4)*(x296)))+(((IkReal(-1.00000000000000))*(x289)*(x291)))+(((IkReal(-1.00000000000000))*(x293)*(x294)))+(((x288)*(x289))));
evalcond[3]=((((sj4)*(x293)))+(x299)+(((cj4)*(cj5)*(x288)))+(((IkReal(-1.00000000000000))*(x294)*(x296)))+(((IkReal(-1.00000000000000))*(cj4)*(x290)*(x291))));
evalcond[4]=((((IkReal(-1.00000000000000))*(r02)*(x298)))+(((r01)*(sj6)*(x289)))+(((IkReal(-1.00000000000000))*(cj6)*(r01)*(x294)))+(((IkReal(-1.00000000000000))*(r00)*(sj6)*(x294)))+(((IkReal(-1.00000000000000))*(r00)*(x289)*(x297))));
evalcond[5]=((((IkReal(-1.00000000000000))*(r10)*(x289)*(x297)))+(((IkReal(-1.00000000000000))*(cj6)*(r11)*(x294)))+(((r11)*(sj6)*(x289)))+(((IkReal(-1.00000000000000))*(r10)*(sj6)*(x294)))+(((IkReal(-1.00000000000000))*(r12)*(x298))));
evalcond[6]=((((x291)*(x295)))+(((IkReal(-1.00000000000000))*(x291)*(x292)))+(((IkReal(0.0135000000000000))*(x296)))+(((IkReal(0.0405000000000000))*(sj4)*(x293)))+(((IkReal(0.0405000000000000))*(x299)))+(((IkReal(0.265000000000000))*(cj5)*(r22)))+(((IkReal(-1.00000000000000))*(pz)))+(((IkReal(-0.0405000000000000))*(cj4)*(x296)))+(((x288)*(x300)))+(((IkReal(-1.00000000000000))*(x288)*(x295)))+(((IkReal(0.0270000000000000))*(x288)))+(((IkReal(-0.0270000000000000))*(x291)))+(((IkReal(-1.00000000000000))*(x291)*(x300)))+(((x288)*(x292))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x301=((cj6)*(r00));
IkReal x302=((IkReal(0.993762598410223))*(sj5));
IkReal x303=((r11)*(sj6));
IkReal x304=((IkReal(0.284220134636595))*(sj5));
IkReal x305=((IkReal(0.0506256418058038))*(cj5));
IkReal x306=((r01)*(sj6));
IkReal x307=((cj6)*(r10));
IkReal x308=((IkReal(0.0144791389343171))*(cj5));
IkReal x309=((IkReal(0.0506256418058038))*(sj5));
IkReal x310=((r12)*(sj5));
IkReal x311=((IkReal(0.0434374168029514))*(cj4));
IkReal x312=((cj5)*(r02));
IkReal x313=((cj5)*(r12));
IkReal x314=((r02)*(sj5));
IkReal x315=((IkReal(0.151876925417411))*(cj4));
IkReal x316=((r00)*(sj4)*(sj6));
IkReal x317=((cj6)*(r01)*(sj4));
IkReal x318=((cj5)*(x315));
IkReal x319=((cj6)*(r11)*(sj4));
IkReal x320=((r10)*(sj4)*(sj6));
if( IKabs(((((x301)*(x302)))+(((IkReal(-1.00000000000000))*(x301)*(x305)))+(((x310)*(x311)))+(((IkReal(-0.0144791389343171))*(x310)))+(((IkReal(-0.151876925417411))*(x316)))+(((IkReal(-0.151876925417411))*(x317)))+(((IkReal(-0.993762598410223))*(x312)))+(((IkReal(0.101251283611608))*(x301)))+(((IkReal(-1.00000000000000))*(x303)*(x304)))+(((x301)*(x318)))+(((IkReal(-0.101251283611608))*(x306)))+(((x303)*(x308)))+(((IkReal(-1.00000000000000))*(x302)*(x306)))+(((IkReal(-0.284220134636595))*(x313)))+(((IkReal(-0.0434374168029514))*(x319)))+(((IkReal(1.07252880994942))*(py)))+(((IkReal(-1.00000000000000))*(r02)*(x309)))+(((IkReal(-1.00000000000000))*(x306)*(x318)))+(((IkReal(3.75004754117065))*(px)))+(((IkReal(-1.00000000000000))*(cj5)*(x303)*(x311)))+(((x305)*(x306)))+(((IkReal(-1.00000000000000))*(x307)*(x308)))+(((x304)*(x307)))+(((IkReal(-0.0434374168029514))*(x320)))+(((cj5)*(x307)*(x311)))+(((x314)*(x315)))+(((IkReal(-0.0289582778686342))*(x303)))+(((IkReal(0.0289582778686342))*(x307))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((x301)*(x304)))+(((IkReal(-1.00000000000000))*(x301)*(x308)))+(((IkReal(-0.0144791389343171))*(x314)))+(((IkReal(-1.00000000000000))*(x310)*(x315)))+(((IkReal(-1.00000000000000))*(cj5)*(x306)*(x311)))+(((IkReal(0.101251283611608))*(x303)))+(((IkReal(-1.00000000000000))*(x303)*(x305)))+(((IkReal(-0.101251283611608))*(x307)))+(((IkReal(-1.00000000000000))*(x302)*(x307)))+(((IkReal(-0.284220134636595))*(x312)))+(((IkReal(-3.75004754117065))*(py)))+(((IkReal(-0.0434374168029514))*(x316)))+(((IkReal(-0.0434374168029514))*(x317)))+(((IkReal(1.07252880994942))*(px)))+(((cj5)*(x301)*(x311)))+(((x311)*(x314)))+(((x302)*(x303)))+(((x305)*(x307)))+(((IkReal(0.151876925417411))*(x320)))+(((IkReal(-1.00000000000000))*(x307)*(x318)))+(((IkReal(-1.00000000000000))*(x304)*(x306)))+(((IkReal(0.993762598410223))*(x313)))+(((x303)*(x318)))+(((IkReal(-0.0289582778686342))*(x306)))+(((IkReal(0.151876925417411))*(x319)))+(((IkReal(0.0289582778686342))*(x301)))+(((x306)*(x308)))+(((r12)*(x309))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((x301)*(x302)))+(((IkReal(-1.00000000000000))*(x301)*(x305)))+(((x310)*(x311)))+(((IkReal(-0.0144791389343171))*(x310)))+(((IkReal(-0.151876925417411))*(x316)))+(((IkReal(-0.151876925417411))*(x317)))+(((IkReal(-0.993762598410223))*(x312)))+(((IkReal(0.101251283611608))*(x301)))+(((IkReal(-1.00000000000000))*(x303)*(x304)))+(((x301)*(x318)))+(((IkReal(-0.101251283611608))*(x306)))+(((x303)*(x308)))+(((IkReal(-1.00000000000000))*(x302)*(x306)))+(((IkReal(-0.284220134636595))*(x313)))+(((IkReal(-0.0434374168029514))*(x319)))+(((IkReal(1.07252880994942))*(py)))+(((IkReal(-1.00000000000000))*(r02)*(x309)))+(((IkReal(-1.00000000000000))*(x306)*(x318)))+(((IkReal(3.75004754117065))*(px)))+(((IkReal(-1.00000000000000))*(cj5)*(x303)*(x311)))+(((x305)*(x306)))+(((IkReal(-1.00000000000000))*(x307)*(x308)))+(((x304)*(x307)))+(((IkReal(-0.0434374168029514))*(x320)))+(((cj5)*(x307)*(x311)))+(((x314)*(x315)))+(((IkReal(-0.0289582778686342))*(x303)))+(((IkReal(0.0289582778686342))*(x307)))))+IKsqr(((((x301)*(x304)))+(((IkReal(-1.00000000000000))*(x301)*(x308)))+(((IkReal(-0.0144791389343171))*(x314)))+(((IkReal(-1.00000000000000))*(x310)*(x315)))+(((IkReal(-1.00000000000000))*(cj5)*(x306)*(x311)))+(((IkReal(0.101251283611608))*(x303)))+(((IkReal(-1.00000000000000))*(x303)*(x305)))+(((IkReal(-0.101251283611608))*(x307)))+(((IkReal(-1.00000000000000))*(x302)*(x307)))+(((IkReal(-0.284220134636595))*(x312)))+(((IkReal(-3.75004754117065))*(py)))+(((IkReal(-0.0434374168029514))*(x316)))+(((IkReal(-0.0434374168029514))*(x317)))+(((IkReal(1.07252880994942))*(px)))+(((cj5)*(x301)*(x311)))+(((x311)*(x314)))+(((x302)*(x303)))+(((x305)*(x307)))+(((IkReal(0.151876925417411))*(x320)))+(((IkReal(-1.00000000000000))*(x307)*(x318)))+(((IkReal(-1.00000000000000))*(x304)*(x306)))+(((IkReal(0.993762598410223))*(x313)))+(((x303)*(x318)))+(((IkReal(-0.0289582778686342))*(x306)))+(((IkReal(0.151876925417411))*(x319)))+(((IkReal(0.0289582778686342))*(x301)))+(((x306)*(x308)))+(((r12)*(x309)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j1array[0]=IKatan2(((((x301)*(x302)))+(((IkReal(-1.00000000000000))*(x301)*(x305)))+(((x310)*(x311)))+(((IkReal(-0.0144791389343171))*(x310)))+(((IkReal(-0.151876925417411))*(x316)))+(((IkReal(-0.151876925417411))*(x317)))+(((IkReal(-0.993762598410223))*(x312)))+(((IkReal(0.101251283611608))*(x301)))+(((IkReal(-1.00000000000000))*(x303)*(x304)))+(((x301)*(x318)))+(((IkReal(-0.101251283611608))*(x306)))+(((x303)*(x308)))+(((IkReal(-1.00000000000000))*(x302)*(x306)))+(((IkReal(-0.284220134636595))*(x313)))+(((IkReal(-0.0434374168029514))*(x319)))+(((IkReal(1.07252880994942))*(py)))+(((IkReal(-1.00000000000000))*(r02)*(x309)))+(((IkReal(-1.00000000000000))*(x306)*(x318)))+(((IkReal(3.75004754117065))*(px)))+(((IkReal(-1.00000000000000))*(cj5)*(x303)*(x311)))+(((x305)*(x306)))+(((IkReal(-1.00000000000000))*(x307)*(x308)))+(((x304)*(x307)))+(((IkReal(-0.0434374168029514))*(x320)))+(((cj5)*(x307)*(x311)))+(((x314)*(x315)))+(((IkReal(-0.0289582778686342))*(x303)))+(((IkReal(0.0289582778686342))*(x307)))), ((((x301)*(x304)))+(((IkReal(-1.00000000000000))*(x301)*(x308)))+(((IkReal(-0.0144791389343171))*(x314)))+(((IkReal(-1.00000000000000))*(x310)*(x315)))+(((IkReal(-1.00000000000000))*(cj5)*(x306)*(x311)))+(((IkReal(0.101251283611608))*(x303)))+(((IkReal(-1.00000000000000))*(x303)*(x305)))+(((IkReal(-0.101251283611608))*(x307)))+(((IkReal(-1.00000000000000))*(x302)*(x307)))+(((IkReal(-0.284220134636595))*(x312)))+(((IkReal(-3.75004754117065))*(py)))+(((IkReal(-0.0434374168029514))*(x316)))+(((IkReal(-0.0434374168029514))*(x317)))+(((IkReal(1.07252880994942))*(px)))+(((cj5)*(x301)*(x311)))+(((x311)*(x314)))+(((x302)*(x303)))+(((x305)*(x307)))+(((IkReal(0.151876925417411))*(x320)))+(((IkReal(-1.00000000000000))*(x307)*(x318)))+(((IkReal(-1.00000000000000))*(x304)*(x306)))+(((IkReal(0.993762598410223))*(x313)))+(((x303)*(x318)))+(((IkReal(-0.0289582778686342))*(x306)))+(((IkReal(0.151876925417411))*(x319)))+(((IkReal(0.0289582778686342))*(x301)))+(((x306)*(x308)))+(((r12)*(x309)))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
for(int ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
for(int iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[2];
IkReal x321=IKsin(j1);
IkReal x322=IKcos(j1);
IkReal x323=((r02)*(sj5));
IkReal x324=((IkReal(0.0270000000000000))*(sj6));
IkReal x325=((IkReal(0.0405000000000000))*(cj4));
IkReal x326=((IkReal(0.265000000000000))*(sj5));
IkReal x327=((cj6)*(r00));
IkReal x328=((r11)*(sj6));
IkReal x329=((cj6)*(r10));
IkReal x330=((IkReal(0.0135000000000000))*(cj5));
IkReal x331=((IkReal(0.0405000000000000))*(sj4));
IkReal x332=((r12)*(sj5));
IkReal x333=((r01)*(sj6));
IkReal x334=((IkReal(0.265000000000000))*(cj5));
IkReal x335=((cj5)*(sj6)*(x325));
evalcond[0]=((((IkReal(0.0705000000000000))*(x322)))+(((IkReal(-1.00000000000000))*(x326)*(x327)))+(((cj5)*(x325)*(x333)))+(((r02)*(x334)))+(((r01)*(x324)))+(((IkReal(0.0135000000000000))*(x323)))+(((IkReal(-1.00000000000000))*(x323)*(x325)))+(((IkReal(-1.00000000000000))*(px)))+(((IkReal(-1.00000000000000))*(x330)*(x333)))+(((IkReal(-1.00000000000000))*(cj5)*(x325)*(x327)))+(((cj6)*(r01)*(x331)))+(((r00)*(sj6)*(x331)))+(((x327)*(x330)))+(((IkReal(0.246500000000000))*(x321)))+(((x326)*(x333)))+(((IkReal(-0.0270000000000000))*(x327))));
evalcond[1]=((((x326)*(x328)))+(((r12)*(x334)))+(((cj5)*(x325)*(x328)))+(((IkReal(-0.246500000000000))*(x322)))+(((r10)*(sj6)*(x331)))+(((IkReal(0.0705000000000000))*(x321)))+(((r11)*(x324)))+(((IkReal(-1.00000000000000))*(x326)*(x329)))+(((IkReal(-1.00000000000000))*(x328)*(x330)))+(((IkReal(-1.00000000000000))*(py)))+(((IkReal(-1.00000000000000))*(cj5)*(x325)*(x329)))+(((cj6)*(r11)*(x331)))+(((x329)*(x330)))+(((IkReal(0.0135000000000000))*(x332)))+(((IkReal(-0.0270000000000000))*(x329)))+(((IkReal(-1.00000000000000))*(x325)*(x332))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst14;
gconst14=IKsign((((sj1)*(sj1))+((cj1)*(cj1))));
dummyeval[0]=(((sj1)*(sj1))+((cj1)*(cj1)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst15;
gconst15=IKsign((((sj1)*(sj1))+((cj1)*(cj1))));
dummyeval[0]=(((sj1)*(sj1))+((cj1)*(cj1)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x336=((cj1)*(r12));
IkReal x337=((cj4)*(sj5));
IkReal x338=((cj4)*(cj5));
IkReal x339=((r10)*(sj6));
IkReal x340=((r12)*(sj1));
IkReal x341=((cj6)*(r11));
IkReal x342=((sj1)*(sj4));
IkReal x343=((r11)*(sj1)*(sj6));
IkReal x344=((IkReal(1.00000000000000))*(cj1)*(sj4));
IkReal x345=((cj1)*(cj6)*(r10));
IkReal x346=((cj1)*(r11)*(sj6));
IkReal x347=((IkReal(1.00000000000000))*(cj6)*(r10)*(sj1));
if( IKabs(((gconst15)*(((((sj5)*(x346)))+(((IkReal(-1.00000000000000))*(x337)*(x340)))+(((IkReal(-1.00000000000000))*(sj5)*(x345)))+(((x341)*(x342)))+(((x338)*(x343)))+(((cj5)*(x336)))+(((IkReal(-1.00000000000000))*(x338)*(x347)))+(((x339)*(x342))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst15)*(((((IkReal(-1.00000000000000))*(sj5)*(x347)))+(((x336)*(x337)))+(((IkReal(-1.00000000000000))*(x338)*(x346)))+(((sj5)*(x343)))+(((cj5)*(x340)))+(((IkReal(-1.00000000000000))*(x341)*(x344)))+(((x338)*(x345)))+(((IkReal(-1.00000000000000))*(x339)*(x344))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j3array[0]=IKatan2(((gconst15)*(((((sj5)*(x346)))+(((IkReal(-1.00000000000000))*(x337)*(x340)))+(((IkReal(-1.00000000000000))*(sj5)*(x345)))+(((x341)*(x342)))+(((x338)*(x343)))+(((cj5)*(x336)))+(((IkReal(-1.00000000000000))*(x338)*(x347)))+(((x339)*(x342)))))), ((gconst15)*(((((IkReal(-1.00000000000000))*(sj5)*(x347)))+(((x336)*(x337)))+(((IkReal(-1.00000000000000))*(x338)*(x346)))+(((sj5)*(x343)))+(((cj5)*(x340)))+(((IkReal(-1.00000000000000))*(x341)*(x344)))+(((x338)*(x345)))+(((IkReal(-1.00000000000000))*(x339)*(x344)))))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[4];
IkReal x348=IKcos(j3);
IkReal x349=IKsin(j3);
IkReal x350=((r11)*(sj6));
IkReal x351=((IkReal(1.00000000000000))*(sj5));
IkReal x352=((sj4)*(sj6));
IkReal x353=((cj6)*(sj4));
IkReal x354=((cj4)*(cj5));
IkReal x355=((r01)*(sj6));
IkReal x356=((IkReal(1.00000000000000))*(cj5));
IkReal x357=((cj6)*(sj5));
IkReal x358=((cj1)*(x348));
IkReal x359=((cj1)*(x349));
IkReal x360=((sj1)*(x348));
IkReal x361=((IkReal(1.00000000000000))*(sj1)*(x349));
IkReal x362=((IkReal(1.00000000000000))*(cj6)*(x354));
evalcond[0]=((((IkReal(-1.00000000000000))*(r12)*(x356)))+(x359)+(x360)+(((r10)*(x357)))+(((IkReal(-1.00000000000000))*(x350)*(x351))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x361)))+(((r00)*(x357)))+(x358)+(((IkReal(-1.00000000000000))*(r02)*(x356)))+(((IkReal(-1.00000000000000))*(x351)*(x355))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x361)))+(((r11)*(x353)))+(((IkReal(-1.00000000000000))*(r10)*(x362)))+(((IkReal(-1.00000000000000))*(cj4)*(r12)*(x351)))+(x358)+(((r10)*(x352)))+(((x350)*(x354))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x360)))+(((r01)*(x353)))+(((IkReal(-1.00000000000000))*(r00)*(x362)))+(((r00)*(x352)))+(((IkReal(-1.00000000000000))*(x359)))+(((x354)*(x355)))+(((IkReal(-1.00000000000000))*(cj4)*(r02)*(x351))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x363=((cj5)*(r12));
IkReal x364=((IkReal(1.00000000000000))*(sj1));
IkReal x365=((sj1)*(sj5));
IkReal x366=((cj6)*(r00));
IkReal x367=((cj5)*(r02));
IkReal x368=((r11)*(sj6));
IkReal x369=((cj1)*(sj5));
IkReal x370=((r01)*(sj5)*(sj6));
IkReal x371=((cj6)*(r10)*(sj5));
if( IKabs(((gconst14)*(((((x365)*(x366)))+(((IkReal(-1.00000000000000))*(cj6)*(r10)*(x369)))+(((cj1)*(x363)))+(((IkReal(-1.00000000000000))*(x364)*(x367)))+(((IkReal(-1.00000000000000))*(x364)*(x370)))+(((x368)*(x369))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst14)*(((((IkReal(-1.00000000000000))*(x366)*(x369)))+(((sj1)*(x363)))+(((x365)*(x368)))+(((r01)*(sj6)*(x369)))+(((cj1)*(x367)))+(((IkReal(-1.00000000000000))*(x364)*(x371))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j3array[0]=IKatan2(((gconst14)*(((((x365)*(x366)))+(((IkReal(-1.00000000000000))*(cj6)*(r10)*(x369)))+(((cj1)*(x363)))+(((IkReal(-1.00000000000000))*(x364)*(x367)))+(((IkReal(-1.00000000000000))*(x364)*(x370)))+(((x368)*(x369)))))), ((gconst14)*(((((IkReal(-1.00000000000000))*(x366)*(x369)))+(((sj1)*(x363)))+(((x365)*(x368)))+(((r01)*(sj6)*(x369)))+(((cj1)*(x367)))+(((IkReal(-1.00000000000000))*(x364)*(x371)))))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[4];
IkReal x372=IKcos(j3);
IkReal x373=IKsin(j3);
IkReal x374=((r11)*(sj6));
IkReal x375=((IkReal(1.00000000000000))*(sj5));
IkReal x376=((sj4)*(sj6));
IkReal x377=((cj6)*(sj4));
IkReal x378=((cj4)*(cj5));
IkReal x379=((r01)*(sj6));
IkReal x380=((IkReal(1.00000000000000))*(cj5));
IkReal x381=((cj6)*(sj5));
IkReal x382=((cj1)*(x372));
IkReal x383=((cj1)*(x373));
IkReal x384=((sj1)*(x372));
IkReal x385=((IkReal(1.00000000000000))*(sj1)*(x373));
IkReal x386=((IkReal(1.00000000000000))*(cj6)*(x378));
evalcond[0]=((x384)+(x383)+(((IkReal(-1.00000000000000))*(x374)*(x375)))+(((r10)*(x381)))+(((IkReal(-1.00000000000000))*(r12)*(x380))));
evalcond[1]=((x382)+(((IkReal(-1.00000000000000))*(x385)))+(((IkReal(-1.00000000000000))*(r02)*(x380)))+(((IkReal(-1.00000000000000))*(x375)*(x379)))+(((r00)*(x381))));
evalcond[2]=((((IkReal(-1.00000000000000))*(r10)*(x386)))+(x382)+(((IkReal(-1.00000000000000))*(cj4)*(r12)*(x375)))+(((r11)*(x377)))+(((IkReal(-1.00000000000000))*(x385)))+(((x374)*(x378)))+(((r10)*(x376))));
evalcond[3]=((((r00)*(x376)))+(((r01)*(x377)))+(((IkReal(-1.00000000000000))*(cj4)*(r02)*(x375)))+(((IkReal(-1.00000000000000))*(x383)))+(((IkReal(-1.00000000000000))*(x384)))+(((x378)*(x379)))+(((IkReal(-1.00000000000000))*(r00)*(x386))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

} else
{
IkReal x387=((r21)*(sj6));
IkReal x388=((cj5)*(sj4));
IkReal x389=((IkReal(1.00000000000000))*(cj5));
IkReal x390=((cj6)*(r20));
IkReal x391=((IkReal(0.265000000000000))*(sj5));
IkReal x392=((r20)*(sj6));
IkReal x393=((IkReal(1.00000000000000))*(cj4));
IkReal x394=((IkReal(0.0135000000000000))*(cj5));
IkReal x395=((r22)*(sj5));
IkReal x396=((IkReal(1.00000000000000))*(cj6));
IkReal x397=((IkReal(1.00000000000000))*(sj4)*(sj5));
IkReal x398=((cj6)*(r21)*(sj4));
IkReal x399=((IkReal(0.0405000000000000))*(cj4)*(cj5));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.11022302462516e-16))+(j2)), IkReal(6.28318530717959))));
evalcond[1]=((((IkReal(-1.00000000000000))*(r22)*(x389)))+(((IkReal(-1.00000000000000))*(sj5)*(x387)))+(((sj5)*(x390))));
evalcond[2]=((IkReal(-1.00000000000000))+(((x387)*(x388)))+(((IkReal(-1.00000000000000))*(cj6)*(r21)*(x393)))+(((IkReal(-1.00000000000000))*(x388)*(x390)))+(((IkReal(-1.00000000000000))*(sj4)*(x395)))+(((IkReal(-1.00000000000000))*(x392)*(x393))));
evalcond[3]=((((IkReal(-1.00000000000000))*(cj4)*(x389)*(x390)))+(((cj4)*(cj5)*(x387)))+(x398)+(((IkReal(-1.00000000000000))*(x393)*(x395)))+(((sj4)*(x392))));
evalcond[4]=((((IkReal(-1.00000000000000))*(r00)*(sj6)*(x393)))+(((IkReal(-1.00000000000000))*(r00)*(x388)*(x396)))+(((IkReal(-1.00000000000000))*(r02)*(x397)))+(((r01)*(sj6)*(x388)))+(((IkReal(-1.00000000000000))*(cj6)*(r01)*(x393))));
evalcond[5]=((((IkReal(-1.00000000000000))*(cj6)*(r11)*(x393)))+(((IkReal(-1.00000000000000))*(r10)*(x388)*(x396)))+(((IkReal(-1.00000000000000))*(r12)*(x397)))+(((IkReal(-1.00000000000000))*(r10)*(sj6)*(x393)))+(((r11)*(sj6)*(x388))));
evalcond[6]=((((IkReal(-1.00000000000000))*(x387)*(x394)))+(((IkReal(0.0405000000000000))*(sj4)*(x392)))+(((IkReal(-0.0270000000000000))*(x390)))+(((IkReal(-0.0405000000000000))*(cj4)*(x395)))+(((IkReal(0.0135000000000000))*(x395)))+(((IkReal(0.265000000000000))*(cj5)*(r22)))+(((IkReal(-1.00000000000000))*(pz)))+(((x387)*(x399)))+(((x387)*(x391)))+(((IkReal(-1.00000000000000))*(x390)*(x391)))+(((IkReal(-1.00000000000000))*(x390)*(x399)))+(((IkReal(0.0405000000000000))*(x398)))+(((x390)*(x394)))+(((IkReal(0.0270000000000000))*(x387))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x400=((IkReal(1.07310361821841))*(cj5));
IkReal x401=((IkReal(0.00232863772639533))*(sj5));
IkReal x402=((cj6)*(r10));
IkReal x403=((cj6)*(r00));
IkReal x404=((IkReal(1.07310361821841))*(sj5));
IkReal x405=((r01)*(sj6));
IkReal x406=((r11)*(sj6));
IkReal x407=((IkReal(0.00232863772639533))*(cj5));
IkReal x408=((IkReal(0.0457102961107232))*(sj5));
IkReal x409=((cj4)*(sj5));
IkReal x410=((IkReal(0.0546675428149000))*(cj5));
IkReal x411=((IkReal(0.0457102961107232))*(cj5));
IkReal x412=((IkReal(0.00698591317918600))*(sj4));
IkReal x413=((r00)*(sj6));
IkReal x414=((IkReal(0.0546675428149000))*(sj5));
IkReal x415=((cj6)*(r11));
IkReal x416=((cj6)*(r01));
IkReal x417=((IkReal(0.164002628444700))*(sj4));
IkReal x418=((IkReal(0.164002628444700))*(cj4)*(cj5));
IkReal x419=((IkReal(0.00698591317918600))*(cj4)*(cj5));
IkReal x420=((r10)*(sj4)*(sj6));
if( IKabs(((((IkReal(0.109335085629800))*(x403)))+(((IkReal(-0.109335085629800))*(x405)))+(((r10)*(sj6)*(x412)))+(((IkReal(0.164002628444700))*(r02)*(x409)))+(((IkReal(-1.00000000000000))*(x406)*(x407)))+(((r12)*(x411)))+(((x405)*(x410)))+(((r12)*(x401)))+(((IkReal(-1.00000000000000))*(r02)*(x414)))+(((IkReal(-1.00000000000000))*(x403)*(x410)))+(((IkReal(-1.00000000000000))*(r02)*(x400)))+(((IkReal(-1.00000000000000))*(x402)*(x419)))+(((IkReal(-1.00000000000000))*(x402)*(x408)))+(((x406)*(x419)))+(((IkReal(-0.172491683436691))*(py)))+(((x406)*(x408)))+(((IkReal(-1.00000000000000))*(x404)*(x405)))+(((IkReal(-0.00465727545279067))*(x402)))+(((IkReal(-1.00000000000000))*(x416)*(x417)))+(((IkReal(4.04944761591852))*(px)))+(((IkReal(-1.00000000000000))*(x405)*(x418)))+(((x412)*(x415)))+(((IkReal(0.00465727545279067))*(x406)))+(((IkReal(-1.00000000000000))*(x413)*(x417)))+(((x403)*(x418)))+(((x403)*(x404)))+(((x402)*(x407)))+(((IkReal(-0.00698591317918600))*(r12)*(x409))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(0.109335085629800))*(x406)))+(((IkReal(-0.109335085629800))*(x402)))+(((r10)*(sj6)*(x417)))+(((IkReal(-1.00000000000000))*(x406)*(x410)))+(((x405)*(x408)))+(((r12)*(x414)))+(((x405)*(x419)))+(((x404)*(x406)))+(((r12)*(x400)))+(((x415)*(x417)))+(((IkReal(-1.00000000000000))*(x403)*(x419)))+(((IkReal(-1.00000000000000))*(x402)*(x418)))+(((IkReal(-1.00000000000000))*(x403)*(x408)))+(((IkReal(-1.00000000000000))*(x402)*(x404)))+(((x406)*(x418)))+(((IkReal(-0.172491683436691))*(px)))+(((IkReal(-0.00465727545279067))*(x403)))+(((x412)*(x413)))+(((x412)*(x416)))+(((IkReal(-0.00698591317918600))*(r02)*(x409)))+(((IkReal(0.00465727545279067))*(x405)))+(((IkReal(-1.00000000000000))*(x405)*(x407)))+(((x402)*(x410)))+(((IkReal(-0.164002628444700))*(r12)*(x409)))+(((IkReal(-4.04944761591852))*(py)))+(((r02)*(x411)))+(((x403)*(x407)))+(((r02)*(x401))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IkReal(0.109335085629800))*(x403)))+(((IkReal(-0.109335085629800))*(x405)))+(((r10)*(sj6)*(x412)))+(((IkReal(0.164002628444700))*(r02)*(x409)))+(((IkReal(-1.00000000000000))*(x406)*(x407)))+(((r12)*(x411)))+(((x405)*(x410)))+(((r12)*(x401)))+(((IkReal(-1.00000000000000))*(r02)*(x414)))+(((IkReal(-1.00000000000000))*(x403)*(x410)))+(((IkReal(-1.00000000000000))*(r02)*(x400)))+(((IkReal(-1.00000000000000))*(x402)*(x419)))+(((IkReal(-1.00000000000000))*(x402)*(x408)))+(((x406)*(x419)))+(((IkReal(-0.172491683436691))*(py)))+(((x406)*(x408)))+(((IkReal(-1.00000000000000))*(x404)*(x405)))+(((IkReal(-0.00465727545279067))*(x402)))+(((IkReal(-1.00000000000000))*(x416)*(x417)))+(((IkReal(4.04944761591852))*(px)))+(((IkReal(-1.00000000000000))*(x405)*(x418)))+(((x412)*(x415)))+(((IkReal(0.00465727545279067))*(x406)))+(((IkReal(-1.00000000000000))*(x413)*(x417)))+(((x403)*(x418)))+(((x403)*(x404)))+(((x402)*(x407)))+(((IkReal(-0.00698591317918600))*(r12)*(x409)))))+IKsqr(((((IkReal(0.109335085629800))*(x406)))+(((IkReal(-0.109335085629800))*(x402)))+(((r10)*(sj6)*(x417)))+(((IkReal(-1.00000000000000))*(x406)*(x410)))+(((x405)*(x408)))+(((r12)*(x414)))+(((x405)*(x419)))+(((x404)*(x406)))+(((r12)*(x400)))+(((x415)*(x417)))+(((IkReal(-1.00000000000000))*(x403)*(x419)))+(((IkReal(-1.00000000000000))*(x402)*(x418)))+(((IkReal(-1.00000000000000))*(x403)*(x408)))+(((IkReal(-1.00000000000000))*(x402)*(x404)))+(((x406)*(x418)))+(((IkReal(-0.172491683436691))*(px)))+(((IkReal(-0.00465727545279067))*(x403)))+(((x412)*(x413)))+(((x412)*(x416)))+(((IkReal(-0.00698591317918600))*(r02)*(x409)))+(((IkReal(0.00465727545279067))*(x405)))+(((IkReal(-1.00000000000000))*(x405)*(x407)))+(((x402)*(x410)))+(((IkReal(-0.164002628444700))*(r12)*(x409)))+(((IkReal(-4.04944761591852))*(py)))+(((r02)*(x411)))+(((x403)*(x407)))+(((r02)*(x401)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j1array[0]=IKatan2(((((IkReal(0.109335085629800))*(x403)))+(((IkReal(-0.109335085629800))*(x405)))+(((r10)*(sj6)*(x412)))+(((IkReal(0.164002628444700))*(r02)*(x409)))+(((IkReal(-1.00000000000000))*(x406)*(x407)))+(((r12)*(x411)))+(((x405)*(x410)))+(((r12)*(x401)))+(((IkReal(-1.00000000000000))*(r02)*(x414)))+(((IkReal(-1.00000000000000))*(x403)*(x410)))+(((IkReal(-1.00000000000000))*(r02)*(x400)))+(((IkReal(-1.00000000000000))*(x402)*(x419)))+(((IkReal(-1.00000000000000))*(x402)*(x408)))+(((x406)*(x419)))+(((IkReal(-0.172491683436691))*(py)))+(((x406)*(x408)))+(((IkReal(-1.00000000000000))*(x404)*(x405)))+(((IkReal(-0.00465727545279067))*(x402)))+(((IkReal(-1.00000000000000))*(x416)*(x417)))+(((IkReal(4.04944761591852))*(px)))+(((IkReal(-1.00000000000000))*(x405)*(x418)))+(((x412)*(x415)))+(((IkReal(0.00465727545279067))*(x406)))+(((IkReal(-1.00000000000000))*(x413)*(x417)))+(((x403)*(x418)))+(((x403)*(x404)))+(((x402)*(x407)))+(((IkReal(-0.00698591317918600))*(r12)*(x409)))), ((((IkReal(0.109335085629800))*(x406)))+(((IkReal(-0.109335085629800))*(x402)))+(((r10)*(sj6)*(x417)))+(((IkReal(-1.00000000000000))*(x406)*(x410)))+(((x405)*(x408)))+(((r12)*(x414)))+(((x405)*(x419)))+(((x404)*(x406)))+(((r12)*(x400)))+(((x415)*(x417)))+(((IkReal(-1.00000000000000))*(x403)*(x419)))+(((IkReal(-1.00000000000000))*(x402)*(x418)))+(((IkReal(-1.00000000000000))*(x403)*(x408)))+(((IkReal(-1.00000000000000))*(x402)*(x404)))+(((x406)*(x418)))+(((IkReal(-0.172491683436691))*(px)))+(((IkReal(-0.00465727545279067))*(x403)))+(((x412)*(x413)))+(((x412)*(x416)))+(((IkReal(-0.00698591317918600))*(r02)*(x409)))+(((IkReal(0.00465727545279067))*(x405)))+(((IkReal(-1.00000000000000))*(x405)*(x407)))+(((x402)*(x410)))+(((IkReal(-0.164002628444700))*(r12)*(x409)))+(((IkReal(-4.04944761591852))*(py)))+(((r02)*(x411)))+(((x403)*(x407)))+(((r02)*(x401)))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
for(int ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
for(int iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[2];
IkReal x421=IKcos(j1);
IkReal x422=IKsin(j1);
IkReal x423=((r02)*(sj5));
IkReal x424=((IkReal(0.0270000000000000))*(sj6));
IkReal x425=((IkReal(0.0405000000000000))*(cj4));
IkReal x426=((IkReal(0.265000000000000))*(sj5));
IkReal x427=((cj6)*(r00));
IkReal x428=((r11)*(sj6));
IkReal x429=((cj6)*(r10));
IkReal x430=((IkReal(0.0135000000000000))*(cj5));
IkReal x431=((IkReal(0.0405000000000000))*(sj4));
IkReal x432=((r12)*(sj5));
IkReal x433=((r01)*(sj6));
IkReal x434=((IkReal(0.265000000000000))*(cj5));
IkReal x435=((cj5)*(sj6)*(x425));
evalcond[0]=((((IkReal(-1.00000000000000))*(x430)*(x433)))+(((cj6)*(r01)*(x431)))+(((x426)*(x433)))+(((r02)*(x434)))+(((IkReal(-1.00000000000000))*(cj5)*(x425)*(x427)))+(((IkReal(-0.0270000000000000))*(x427)))+(((IkReal(-0.0105000000000000))*(x421)))+(((IkReal(-1.00000000000000))*(px)))+(((IkReal(-1.00000000000000))*(x426)*(x427)))+(((r01)*(x424)))+(((IkReal(0.246500000000000))*(x422)))+(((cj5)*(x425)*(x433)))+(((IkReal(-1.00000000000000))*(x423)*(x425)))+(((r00)*(sj6)*(x431)))+(((x427)*(x430)))+(((IkReal(0.0135000000000000))*(x423))));
evalcond[1]=((((x429)*(x430)))+(((IkReal(-0.246500000000000))*(x421)))+(((r12)*(x434)))+(((x426)*(x428)))+(((r10)*(sj6)*(x431)))+(((IkReal(-1.00000000000000))*(cj5)*(x425)*(x429)))+(((IkReal(-0.0270000000000000))*(x429)))+(((IkReal(-0.0105000000000000))*(x422)))+(((IkReal(-1.00000000000000))*(py)))+(((IkReal(-1.00000000000000))*(x426)*(x429)))+(((cj5)*(x425)*(x428)))+(((IkReal(-1.00000000000000))*(x425)*(x432)))+(((IkReal(-1.00000000000000))*(x428)*(x430)))+(((cj6)*(r11)*(x431)))+(((IkReal(0.0135000000000000))*(x432)))+(((r11)*(x424))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst16;
gconst16=IKsign((((sj1)*(sj1))+((cj1)*(cj1))));
dummyeval[0]=(((sj1)*(sj1))+((cj1)*(cj1)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst17;
gconst17=IKsign(((((IkReal(-1.00000000000000))*((sj1)*(sj1))))+(((IkReal(-1.00000000000000))*((cj1)*(cj1))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((sj1)*(sj1))))+(((IkReal(-1.00000000000000))*((cj1)*(cj1)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x436=((cj4)*(cj5));
IkReal x437=((r11)*(sj6));
IkReal x438=((cj1)*(sj4));
IkReal x439=((r10)*(sj6));
IkReal x440=((r12)*(sj1));
IkReal x441=((cj1)*(r12));
IkReal x442=((cj6)*(r11));
IkReal x443=((sj1)*(sj4));
IkReal x444=((cj1)*(cj6)*(r10));
IkReal x445=((IkReal(1.00000000000000))*(cj4)*(sj5));
IkReal x446=((IkReal(1.00000000000000))*(cj6)*(r10)*(sj1));
if( IKabs(((gconst17)*(((((x439)*(x443)))+(((IkReal(-1.00000000000000))*(x436)*(x446)))+(((IkReal(-1.00000000000000))*(cj5)*(x441)))+(((sj1)*(x436)*(x437)))+(((IkReal(-1.00000000000000))*(cj1)*(sj5)*(x437)))+(((sj5)*(x444)))+(((x442)*(x443)))+(((IkReal(-1.00000000000000))*(x440)*(x445))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst17)*(((((IkReal(-1.00000000000000))*(sj5)*(x446)))+(((IkReal(-1.00000000000000))*(x436)*(x444)))+(((sj1)*(sj5)*(x437)))+(((cj5)*(x440)))+(((x438)*(x442)))+(((x438)*(x439)))+(((cj1)*(x436)*(x437)))+(((IkReal(-1.00000000000000))*(x441)*(x445))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j3array[0]=IKatan2(((gconst17)*(((((x439)*(x443)))+(((IkReal(-1.00000000000000))*(x436)*(x446)))+(((IkReal(-1.00000000000000))*(cj5)*(x441)))+(((sj1)*(x436)*(x437)))+(((IkReal(-1.00000000000000))*(cj1)*(sj5)*(x437)))+(((sj5)*(x444)))+(((x442)*(x443)))+(((IkReal(-1.00000000000000))*(x440)*(x445)))))), ((gconst17)*(((((IkReal(-1.00000000000000))*(sj5)*(x446)))+(((IkReal(-1.00000000000000))*(x436)*(x444)))+(((sj1)*(sj5)*(x437)))+(((cj5)*(x440)))+(((x438)*(x442)))+(((x438)*(x439)))+(((cj1)*(x436)*(x437)))+(((IkReal(-1.00000000000000))*(x441)*(x445)))))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[4];
IkReal x447=IKcos(j3);
IkReal x448=IKsin(j3);
IkReal x449=((r11)*(sj6));
IkReal x450=((IkReal(1.00000000000000))*(sj5));
IkReal x451=((sj4)*(sj6));
IkReal x452=((cj6)*(sj4));
IkReal x453=((cj4)*(cj5));
IkReal x454=((r01)*(sj6));
IkReal x455=((IkReal(1.00000000000000))*(cj5));
IkReal x456=((cj6)*(sj5));
IkReal x457=((cj1)*(x448));
IkReal x458=((sj1)*(x448));
IkReal x459=((cj1)*(x447));
IkReal x460=((IkReal(1.00000000000000))*(sj1)*(x447));
IkReal x461=((IkReal(1.00000000000000))*(cj6)*(x453));
evalcond[0]=((((IkReal(-1.00000000000000))*(x460)))+(((IkReal(-1.00000000000000))*(r12)*(x455)))+(x457)+(((r10)*(x456)))+(((IkReal(-1.00000000000000))*(x449)*(x450))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x459)))+(((IkReal(-1.00000000000000))*(x458)))+(((IkReal(-1.00000000000000))*(x450)*(x454)))+(((r00)*(x456)))+(((IkReal(-1.00000000000000))*(r02)*(x455))));
evalcond[2]=((((IkReal(-1.00000000000000))*(r10)*(x461)))+(x458)+(x459)+(((x449)*(x453)))+(((IkReal(-1.00000000000000))*(cj4)*(r12)*(x450)))+(((r11)*(x452)))+(((r10)*(x451))));
evalcond[3]=((((x453)*(x454)))+(((IkReal(-1.00000000000000))*(r00)*(x461)))+(((IkReal(-1.00000000000000))*(x460)))+(x457)+(((r00)*(x451)))+(((r01)*(x452)))+(((IkReal(-1.00000000000000))*(cj4)*(r02)*(x450))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x462=((cj5)*(r12));
IkReal x463=((IkReal(1.00000000000000))*(sj1));
IkReal x464=((cj5)*(r02));
IkReal x465=((IkReal(1.00000000000000))*(cj1));
IkReal x466=((cj6)*(sj5));
IkReal x467=((r01)*(sj5)*(sj6));
IkReal x468=((sj1)*(x466));
IkReal x469=((r11)*(sj5)*(sj6));
if( IKabs(((gconst16)*(((((IkReal(-1.00000000000000))*(x463)*(x464)))+(((IkReal(-1.00000000000000))*(x463)*(x467)))+(((cj1)*(x469)))+(((cj1)*(x462)))+(((IkReal(-1.00000000000000))*(r10)*(x465)*(x466)))+(((r00)*(x468))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst16)*(((((IkReal(-1.00000000000000))*(x465)*(x467)))+(((IkReal(-1.00000000000000))*(x462)*(x463)))+(((cj1)*(r00)*(x466)))+(((IkReal(-1.00000000000000))*(x463)*(x469)))+(((IkReal(-1.00000000000000))*(x464)*(x465)))+(((r10)*(x468))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j3array[0]=IKatan2(((gconst16)*(((((IkReal(-1.00000000000000))*(x463)*(x464)))+(((IkReal(-1.00000000000000))*(x463)*(x467)))+(((cj1)*(x469)))+(((cj1)*(x462)))+(((IkReal(-1.00000000000000))*(r10)*(x465)*(x466)))+(((r00)*(x468)))))), ((gconst16)*(((((IkReal(-1.00000000000000))*(x465)*(x467)))+(((IkReal(-1.00000000000000))*(x462)*(x463)))+(((cj1)*(r00)*(x466)))+(((IkReal(-1.00000000000000))*(x463)*(x469)))+(((IkReal(-1.00000000000000))*(x464)*(x465)))+(((r10)*(x468)))))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[4];
IkReal x470=IKcos(j3);
IkReal x471=IKsin(j3);
IkReal x472=((r11)*(sj6));
IkReal x473=((IkReal(1.00000000000000))*(sj5));
IkReal x474=((sj4)*(sj6));
IkReal x475=((cj6)*(sj4));
IkReal x476=((cj4)*(cj5));
IkReal x477=((r01)*(sj6));
IkReal x478=((IkReal(1.00000000000000))*(cj5));
IkReal x479=((cj6)*(sj5));
IkReal x480=((cj1)*(x471));
IkReal x481=((sj1)*(x471));
IkReal x482=((cj1)*(x470));
IkReal x483=((IkReal(1.00000000000000))*(sj1)*(x470));
IkReal x484=((IkReal(1.00000000000000))*(cj6)*(x476));
evalcond[0]=((((r10)*(x479)))+(((IkReal(-1.00000000000000))*(x483)))+(((IkReal(-1.00000000000000))*(x472)*(x473)))+(((IkReal(-1.00000000000000))*(r12)*(x478)))+(x480));
evalcond[1]=((((IkReal(-1.00000000000000))*(x473)*(x477)))+(((IkReal(-1.00000000000000))*(x482)))+(((IkReal(-1.00000000000000))*(x481)))+(((r00)*(x479)))+(((IkReal(-1.00000000000000))*(r02)*(x478))));
evalcond[2]=((((r10)*(x474)))+(((x472)*(x476)))+(((r11)*(x475)))+(((IkReal(-1.00000000000000))*(cj4)*(r12)*(x473)))+(x481)+(x482)+(((IkReal(-1.00000000000000))*(r10)*(x484))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x483)))+(((IkReal(-1.00000000000000))*(cj4)*(r02)*(x473)))+(x480)+(((x476)*(x477)))+(((r00)*(x474)))+(((r01)*(x475)))+(((IkReal(-1.00000000000000))*(r00)*(x484))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}
}

} else
{
{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x485=((IkReal(27.0000000000000))*(cj5));
IkReal x486=((IkReal(493.000000000000))*(sj4));
IkReal x487=((r02)*(sj5));
IkReal x488=((IkReal(530.000000000000))*(sj5));
IkReal x489=((IkReal(1.00000000000000))*(sj4));
IkReal x490=((IkReal(493.000000000000))*(cj4));
IkReal x491=((r00)*(sj6));
IkReal x492=((r12)*(sj2));
IkReal x493=((IkReal(81.0000000000000))*(sj2));
IkReal x494=((cj6)*(r01));
IkReal x495=((IkReal(1.00000000000000))*(cj4));
IkReal x496=((IkReal(81.0000000000000))*(cj4));
IkReal x497=((r11)*(sj2)*(sj6));
IkReal x498=((cj5)*(cj6)*(r00));
IkReal x499=((cj6)*(r10)*(sj2));
IkReal x500=((cj5)*(r01)*(sj6));
if( IKabs(((((IKabs(((((IkReal(60.0000000000000))*(sj2)))+(((cj2)*(x493))))) != 0)?((IkReal)1/(((((IkReal(60.0000000000000))*(sj2)))+(((cj2)*(x493)))))):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(x486)*(x487)))+(((IkReal(-1.00000000000000))*(x488)*(x497)))+(((x488)*(x499)))+(((IkReal(-1.00000000000000))*(cj6)*(r11)*(sj4)*(x493)))+(((IkReal(-1.00000000000000))*(cj4)*(cj5)*(r11)*(sj6)*(x493)))+(((IkReal(-530.000000000000))*(cj5)*(x492)))+(((IkReal(-1.00000000000000))*(x486)*(x498)))+(((cj4)*(cj5)*(cj6)*(r10)*(x493)))+(((IkReal(-1.00000000000000))*(r10)*(sj4)*(sj6)*(x493)))+(((IkReal(-1.00000000000000))*(x490)*(x491)))+(((IkReal(-1.00000000000000))*(x490)*(x494)))+(((IkReal(2000.00000000000))*(py)*(sj2)))+(((IkReal(-27.0000000000000))*(sj5)*(x492)))+(((IkReal(54.0000000000000))*(x499)))+(((IkReal(-54.0000000000000))*(x497)))+(((IkReal(-1.00000000000000))*(x485)*(x499)))+(((x485)*(x497)))+(((x486)*(x500)))+(((sj5)*(x492)*(x496))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IKabs(sj2) != 0)?((IkReal)1/(sj2)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(x494)*(x495)))+(((IkReal(-1.00000000000000))*(x489)*(x498)))+(((IkReal(-1.00000000000000))*(x491)*(x495)))+(((IkReal(-1.00000000000000))*(x487)*(x489)))+(((sj4)*(x500))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IKabs(((((IkReal(60.0000000000000))*(sj2)))+(((cj2)*(x493))))) != 0)?((IkReal)1/(((((IkReal(60.0000000000000))*(sj2)))+(((cj2)*(x493)))))):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(x486)*(x487)))+(((IkReal(-1.00000000000000))*(x488)*(x497)))+(((x488)*(x499)))+(((IkReal(-1.00000000000000))*(cj6)*(r11)*(sj4)*(x493)))+(((IkReal(-1.00000000000000))*(cj4)*(cj5)*(r11)*(sj6)*(x493)))+(((IkReal(-530.000000000000))*(cj5)*(x492)))+(((IkReal(-1.00000000000000))*(x486)*(x498)))+(((cj4)*(cj5)*(cj6)*(r10)*(x493)))+(((IkReal(-1.00000000000000))*(r10)*(sj4)*(sj6)*(x493)))+(((IkReal(-1.00000000000000))*(x490)*(x491)))+(((IkReal(-1.00000000000000))*(x490)*(x494)))+(((IkReal(2000.00000000000))*(py)*(sj2)))+(((IkReal(-27.0000000000000))*(sj5)*(x492)))+(((IkReal(54.0000000000000))*(x499)))+(((IkReal(-54.0000000000000))*(x497)))+(((IkReal(-1.00000000000000))*(x485)*(x499)))+(((x485)*(x497)))+(((x486)*(x500)))+(((sj5)*(x492)*(x496)))))))+IKsqr(((((IKabs(sj2) != 0)?((IkReal)1/(sj2)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(x494)*(x495)))+(((IkReal(-1.00000000000000))*(x489)*(x498)))+(((IkReal(-1.00000000000000))*(x491)*(x495)))+(((IkReal(-1.00000000000000))*(x487)*(x489)))+(((sj4)*(x500)))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j1array[0]=IKatan2(((((IKabs(((((IkReal(60.0000000000000))*(sj2)))+(((cj2)*(x493))))) != 0)?((IkReal)1/(((((IkReal(60.0000000000000))*(sj2)))+(((cj2)*(x493)))))):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(x486)*(x487)))+(((IkReal(-1.00000000000000))*(x488)*(x497)))+(((x488)*(x499)))+(((IkReal(-1.00000000000000))*(cj6)*(r11)*(sj4)*(x493)))+(((IkReal(-1.00000000000000))*(cj4)*(cj5)*(r11)*(sj6)*(x493)))+(((IkReal(-530.000000000000))*(cj5)*(x492)))+(((IkReal(-1.00000000000000))*(x486)*(x498)))+(((cj4)*(cj5)*(cj6)*(r10)*(x493)))+(((IkReal(-1.00000000000000))*(r10)*(sj4)*(sj6)*(x493)))+(((IkReal(-1.00000000000000))*(x490)*(x491)))+(((IkReal(-1.00000000000000))*(x490)*(x494)))+(((IkReal(2000.00000000000))*(py)*(sj2)))+(((IkReal(-27.0000000000000))*(sj5)*(x492)))+(((IkReal(54.0000000000000))*(x499)))+(((IkReal(-54.0000000000000))*(x497)))+(((IkReal(-1.00000000000000))*(x485)*(x499)))+(((x485)*(x497)))+(((x486)*(x500)))+(((sj5)*(x492)*(x496)))))), ((((IKabs(sj2) != 0)?((IkReal)1/(sj2)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(x494)*(x495)))+(((IkReal(-1.00000000000000))*(x489)*(x498)))+(((IkReal(-1.00000000000000))*(x491)*(x495)))+(((IkReal(-1.00000000000000))*(x487)*(x489)))+(((sj4)*(x500)))))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
for(int ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
for(int iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[4];
IkReal x501=IKcos(j1);
IkReal x502=IKsin(j1);
IkReal x503=((r02)*(sj5));
IkReal x504=((IkReal(1.00000000000000))*(sj2));
IkReal x505=((IkReal(0.0270000000000000))*(sj6));
IkReal x506=((IkReal(0.0405000000000000))*(cj4));
IkReal x507=((IkReal(0.265000000000000))*(sj5));
IkReal x508=((cj6)*(r00));
IkReal x509=((r11)*(sj6));
IkReal x510=((r12)*(sj5));
IkReal x511=((r01)*(sj6));
IkReal x512=((IkReal(1.00000000000000))*(sj4));
IkReal x513=((cj6)*(r10));
IkReal x514=((IkReal(0.0135000000000000))*(cj5));
IkReal x515=((IkReal(0.0405000000000000))*(sj4));
IkReal x516=((r10)*(sj6));
IkReal x517=((cj6)*(r11));
IkReal x518=((IkReal(0.0405000000000000))*(cj2));
IkReal x519=((cj5)*(sj4));
IkReal x520=((IkReal(1.00000000000000))*(cj4));
IkReal x521=((cj6)*(r01));
IkReal x522=((IkReal(0.265000000000000))*(cj5));
IkReal x523=((r00)*(sj6));
IkReal x524=((cj5)*(sj6)*(x506));
evalcond[0]=((((x511)*(x519)))+(((IkReal(-1.00000000000000))*(x520)*(x521)))+(((IkReal(-1.00000000000000))*(x520)*(x523)))+(((IkReal(-1.00000000000000))*(x503)*(x512)))+(((IkReal(-1.00000000000000))*(x501)*(x504)))+(((IkReal(-1.00000000000000))*(cj5)*(x508)*(x512))));
evalcond[1]=((((IkReal(-1.00000000000000))*(cj5)*(x512)*(x513)))+(((IkReal(-1.00000000000000))*(x502)*(x504)))+(((IkReal(-1.00000000000000))*(x517)*(x520)))+(((IkReal(-1.00000000000000))*(x516)*(x520)))+(((IkReal(-1.00000000000000))*(x510)*(x512)))+(((x509)*(x519))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x511)*(x514)))+(((x507)*(x511)))+(((r02)*(x522)))+(((IkReal(0.0300000000000000))*(x501)))+(((x501)*(x518)))+(((x515)*(x521)))+(((x515)*(x523)))+(((IkReal(0.0135000000000000))*(x503)))+(((IkReal(-1.00000000000000))*(x507)*(x508)))+(((IkReal(-1.00000000000000))*(x503)*(x506)))+(((r01)*(x505)))+(((IkReal(-1.00000000000000))*(px)))+(((IkReal(-0.0270000000000000))*(x508)))+(((cj5)*(x506)*(x511)))+(((IkReal(-1.00000000000000))*(cj5)*(x506)*(x508)))+(((x508)*(x514)))+(((IkReal(0.246500000000000))*(x502))));
evalcond[3]=((((IkReal(-1.00000000000000))*(cj5)*(x506)*(x513)))+(((IkReal(-0.246500000000000))*(x501)))+(((IkReal(-0.0270000000000000))*(x513)))+(((IkReal(0.0300000000000000))*(x502)))+(((x502)*(x518)))+(((r12)*(x522)))+(((x507)*(x509)))+(((x513)*(x514)))+(((IkReal(-1.00000000000000))*(py)))+(((r11)*(x505)))+(((x515)*(x516)))+(((x515)*(x517)))+(((IkReal(-1.00000000000000))*(x506)*(x510)))+(((IkReal(-1.00000000000000))*(x509)*(x514)))+(((cj5)*(x506)*(x509)))+(((IkReal(-1.00000000000000))*(x507)*(x513)))+(((IkReal(0.0135000000000000))*(x510))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst2;
gconst2=IKsign(sj2);
dummyeval[0]=sj2;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[2];
IkReal x525=(cj1)*(cj1);
IkReal x526=(sj1)*(sj1);
dummyeval[0]=((x526)+(x525));
dummyeval[1]=((((cj2)*(x525)))+(((cj2)*(x526))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  || IKabs(dummyeval[1]) < 0.0000010000000000  )
{
{
IkReal dummyeval[2];
dummyeval[0]=cj1;
dummyeval[1]=sj2;
if( IKabs(dummyeval[0]) < 0.0000010000000000  || IKabs(dummyeval[1]) < 0.0000010000000000  )
{
{
IkReal evalcond[9];
IkReal x527=((r02)*(sj5));
IkReal x528=((cj5)*(sj6));
IkReal x529=((r21)*(sj4));
IkReal x530=((IkReal(0.0405000000000000))*(cj4));
IkReal x531=((IkReal(0.0405000000000000))*(sj4));
IkReal x532=((cj6)*(r11));
IkReal x533=((IkReal(0.265000000000000))*(sj5));
IkReal x534=((r21)*(sj6));
IkReal x535=((IkReal(0.265000000000000))*(cj5));
IkReal x536=((r11)*(sj6));
IkReal x537=((cj6)*(r00));
IkReal x538=((r12)*(sj5));
IkReal x539=((IkReal(1.00000000000000))*(sj4));
IkReal x540=((r20)*(sj6));
IkReal x541=((IkReal(1.00000000000000))*(cj4));
IkReal x542=((cj6)*(r20));
IkReal x543=((r10)*(sj6));
IkReal x544=((r22)*(sj5));
IkReal x545=((cj6)*(r10));
IkReal x546=((r01)*(sj6));
IkReal x547=((r00)*(sj6));
IkReal x548=((cj6)*(r01));
IkReal x549=((IkReal(0.0135000000000000))*(cj5)*(cj6));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.57079632679490))+(j1)), IkReal(6.28318530717959))));
evalcond[1]=((cj2)+(((IkReal(-1.00000000000000))*(x539)*(x544)))+(((IkReal(-1.00000000000000))*(x540)*(x541)))+(((IkReal(-1.00000000000000))*(cj6)*(r21)*(x541)))+(((x528)*(x529)))+(((IkReal(-1.00000000000000))*(cj5)*(x539)*(x542))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x541)*(x548)))+(((IkReal(-1.00000000000000))*(x541)*(x547)))+(((r01)*(sj4)*(x528)))+(((IkReal(-1.00000000000000))*(x527)*(x539)))+(((IkReal(-1.00000000000000))*(cj5)*(x537)*(x539))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x541)*(x543)))+(((IkReal(-1.00000000000000))*(x532)*(x541)))+(((IkReal(-1.00000000000000))*(sj2)))+(((IkReal(-1.00000000000000))*(x538)*(x539)))+(((r11)*(sj4)*(x528)))+(((IkReal(-1.00000000000000))*(cj5)*(x539)*(x545))));
evalcond[4]=((((IkReal(0.0405000000000000))*(sj2)))+(((IkReal(-0.0270000000000000))*(x542)))+(((IkReal(-0.0135000000000000))*(r21)*(x528)))+(((IkReal(-1.00000000000000))*(x530)*(x544)))+(((IkReal(-1.00000000000000))*(x533)*(x542)))+(((r21)*(x528)*(x530)))+(((x531)*(x540)))+(((IkReal(-1.00000000000000))*(pz)))+(((IkReal(0.0135000000000000))*(cj5)*(x542)))+(((r22)*(x535)))+(((IkReal(0.0135000000000000))*(x544)))+(((IkReal(0.0270000000000000))*(x534)))+(((IkReal(-1.00000000000000))*(cj5)*(x530)*(x542)))+(((x533)*(x534)))+(((IkReal(0.0405000000000000))*(cj6)*(x529))));
evalcond[5]=((IkReal(0.246500000000000))+(((r02)*(x535)))+(((IkReal(-0.0270000000000000))*(x537)))+(((IkReal(-1.00000000000000))*(x533)*(x537)))+(((IkReal(-1.00000000000000))*(x527)*(x530)))+(((IkReal(0.0135000000000000))*(x527)))+(((x531)*(x548)))+(((x531)*(x547)))+(((IkReal(0.0135000000000000))*(cj5)*(x537)))+(((IkReal(-1.00000000000000))*(px)))+(((IkReal(-0.0135000000000000))*(r01)*(x528)))+(((IkReal(-1.00000000000000))*(cj5)*(x530)*(x537)))+(((IkReal(0.0270000000000000))*(x546)))+(((x533)*(x546)))+(((r01)*(x528)*(x530))));
evalcond[6]=((IkReal(0.0300000000000000))+(((IkReal(-0.0270000000000000))*(x545)))+(((IkReal(-0.0135000000000000))*(r11)*(x528)))+(((IkReal(-1.00000000000000))*(x530)*(x538)))+(((IkReal(-1.00000000000000))*(x533)*(x545)))+(((r12)*(x535)))+(((x531)*(x532)))+(((r11)*(x528)*(x530)))+(((x531)*(x543)))+(((IkReal(0.0135000000000000))*(x538)))+(((IkReal(-1.00000000000000))*(py)))+(((IkReal(0.0135000000000000))*(cj5)*(x545)))+(((IkReal(0.0270000000000000))*(x536)))+(((IkReal(0.0405000000000000))*(cj2)))+(((IkReal(-1.00000000000000))*(cj5)*(x530)*(x545)))+(((x533)*(x536))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x550=((IkReal(1.00000000000000))*(sj5));
IkReal x551=((r01)*(sj6));
IkReal x552=((IkReal(1.00000000000000))*(cj5));
IkReal x553=((cj6)*(r00));
if( IKabs(((((sj5)*(x553)))+(((IkReal(-1.00000000000000))*(r02)*(x552)))+(((IkReal(-1.00000000000000))*(x550)*(x551))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((r00)*(sj4)*(sj6)))+(((cj6)*(r01)*(sj4)))+(((IkReal(-1.00000000000000))*(cj4)*(x552)*(x553)))+(((IkReal(-1.00000000000000))*(cj4)*(r02)*(x550)))+(((cj4)*(cj5)*(x551))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((sj5)*(x553)))+(((IkReal(-1.00000000000000))*(r02)*(x552)))+(((IkReal(-1.00000000000000))*(x550)*(x551)))))+IKsqr(((((r00)*(sj4)*(sj6)))+(((cj6)*(r01)*(sj4)))+(((IkReal(-1.00000000000000))*(cj4)*(x552)*(x553)))+(((IkReal(-1.00000000000000))*(cj4)*(r02)*(x550)))+(((cj4)*(cj5)*(x551)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j3array[0]=IKatan2(((((sj5)*(x553)))+(((IkReal(-1.00000000000000))*(r02)*(x552)))+(((IkReal(-1.00000000000000))*(x550)*(x551)))), ((((r00)*(sj4)*(sj6)))+(((cj6)*(r01)*(sj4)))+(((IkReal(-1.00000000000000))*(cj4)*(x552)*(x553)))+(((IkReal(-1.00000000000000))*(cj4)*(r02)*(x550)))+(((cj4)*(cj5)*(x551)))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[6];
IkReal x554=IKcos(j3);
IkReal x555=IKsin(j3);
IkReal x556=((sj4)*(sj6));
IkReal x557=((IkReal(1.00000000000000))*(cj5));
IkReal x558=((cj4)*(cj6));
IkReal x559=((r11)*(sj6));
IkReal x560=((IkReal(1.00000000000000))*(sj5));
IkReal x561=((cj6)*(sj4));
IkReal x562=((cj4)*(cj5));
IkReal x563=((r01)*(sj6));
IkReal x564=((r21)*(sj6));
IkReal x565=((cj6)*(sj5));
IkReal x566=((IkReal(1.00000000000000))*(x555));
evalcond[0]=((((IkReal(-1.00000000000000))*(r22)*(x557)))+(((sj2)*(x554)))+(((IkReal(-1.00000000000000))*(x560)*(x564)))+(((r20)*(x565))));
evalcond[1]=((((IkReal(-1.00000000000000))*(r12)*(x557)))+(((IkReal(-1.00000000000000))*(x559)*(x560)))+(((r10)*(x565)))+(((cj2)*(x554))));
evalcond[2]=((((r00)*(x565)))+(((IkReal(-1.00000000000000))*(r02)*(x557)))+(((IkReal(-1.00000000000000))*(x560)*(x563)))+(((IkReal(-1.00000000000000))*(x566))));
evalcond[3]=((((r21)*(x561)))+(((r20)*(x556)))+(((x562)*(x564)))+(((IkReal(-1.00000000000000))*(r20)*(x557)*(x558)))+(((IkReal(-1.00000000000000))*(sj2)*(x566)))+(((IkReal(-1.00000000000000))*(cj4)*(r22)*(x560))));
evalcond[4]=((((IkReal(-1.00000000000000))*(r10)*(x557)*(x558)))+(((IkReal(-1.00000000000000))*(cj4)*(r12)*(x560)))+(((r10)*(x556)))+(((r11)*(x561)))+(((x559)*(x562)))+(((IkReal(-1.00000000000000))*(cj2)*(x566))));
evalcond[5]=((((IkReal(-1.00000000000000))*(x554)))+(((r01)*(x561)))+(((x562)*(x563)))+(((IkReal(-1.00000000000000))*(r00)*(x557)*(x558)))+(((r00)*(x556)))+(((IkReal(-1.00000000000000))*(cj4)*(r02)*(x560))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
IkReal x567=((r02)*(sj5));
IkReal x568=((cj5)*(sj6));
IkReal x569=((r21)*(sj4));
IkReal x570=((IkReal(0.0405000000000000))*(cj4));
IkReal x571=((IkReal(0.0405000000000000))*(sj4));
IkReal x572=((cj6)*(r11));
IkReal x573=((IkReal(0.265000000000000))*(sj5));
IkReal x574=((r21)*(sj6));
IkReal x575=((IkReal(0.265000000000000))*(cj5));
IkReal x576=((r11)*(sj6));
IkReal x577=((cj6)*(r00));
IkReal x578=((r12)*(sj5));
IkReal x579=((IkReal(1.00000000000000))*(sj4));
IkReal x580=((r20)*(sj6));
IkReal x581=((IkReal(1.00000000000000))*(cj4));
IkReal x582=((cj6)*(r20));
IkReal x583=((r10)*(sj6));
IkReal x584=((r22)*(sj5));
IkReal x585=((cj6)*(r10));
IkReal x586=((r01)*(sj6));
IkReal x587=((r00)*(sj6));
IkReal x588=((cj6)*(r01));
IkReal x589=((IkReal(0.0135000000000000))*(cj5)*(cj6));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(4.71238898038469))+(j1)), IkReal(6.28318530717959))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x580)*(x581)))+(cj2)+(((IkReal(-1.00000000000000))*(x579)*(x584)))+(((IkReal(-1.00000000000000))*(cj5)*(x579)*(x582)))+(((IkReal(-1.00000000000000))*(cj6)*(r21)*(x581)))+(((x568)*(x569))));
evalcond[2]=((((IkReal(-1.00000000000000))*(cj5)*(x577)*(x579)))+(((r01)*(sj4)*(x568)))+(((IkReal(-1.00000000000000))*(x567)*(x579)))+(((IkReal(-1.00000000000000))*(x581)*(x588)))+(((IkReal(-1.00000000000000))*(x581)*(x587))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x578)*(x579)))+(sj2)+(((IkReal(-1.00000000000000))*(x572)*(x581)))+(((r11)*(sj4)*(x568)))+(((IkReal(-1.00000000000000))*(cj5)*(x579)*(x585)))+(((IkReal(-1.00000000000000))*(x581)*(x583))));
evalcond[4]=((((IkReal(0.0405000000000000))*(sj2)))+(((r21)*(x568)*(x570)))+(((IkReal(0.0135000000000000))*(cj5)*(x582)))+(((IkReal(-0.0270000000000000))*(x582)))+(((IkReal(-1.00000000000000))*(x573)*(x582)))+(((IkReal(-0.0135000000000000))*(r21)*(x568)))+(((x573)*(x574)))+(((IkReal(-1.00000000000000))*(x570)*(x584)))+(((IkReal(0.0405000000000000))*(cj6)*(x569)))+(((IkReal(-1.00000000000000))*(pz)))+(((IkReal(0.0270000000000000))*(x574)))+(((x571)*(x580)))+(((r22)*(x575)))+(((IkReal(0.0135000000000000))*(x584)))+(((IkReal(-1.00000000000000))*(cj5)*(x570)*(x582))));
evalcond[5]=((IkReal(-0.246500000000000))+(((IkReal(-0.0270000000000000))*(x577)))+(((IkReal(-1.00000000000000))*(x573)*(x577)))+(((IkReal(0.0135000000000000))*(x567)))+(((r02)*(x575)))+(((IkReal(-0.0135000000000000))*(r01)*(x568)))+(((IkReal(-1.00000000000000))*(px)))+(((IkReal(-1.00000000000000))*(cj5)*(x570)*(x577)))+(((x573)*(x586)))+(((IkReal(-1.00000000000000))*(x567)*(x570)))+(((IkReal(0.0135000000000000))*(cj5)*(x577)))+(((x571)*(x587)))+(((x571)*(x588)))+(((r01)*(x568)*(x570)))+(((IkReal(0.0270000000000000))*(x586))));
evalcond[6]=((IkReal(-0.0300000000000000))+(((x571)*(x572)))+(((r12)*(x575)))+(((IkReal(0.0135000000000000))*(cj5)*(x585)))+(((IkReal(-1.00000000000000))*(x570)*(x578)))+(((IkReal(-0.0270000000000000))*(x585)))+(((IkReal(-0.0135000000000000))*(r11)*(x568)))+(((IkReal(-1.00000000000000))*(x573)*(x585)))+(((x573)*(x576)))+(((IkReal(-1.00000000000000))*(py)))+(((IkReal(-0.0405000000000000))*(cj2)))+(((IkReal(0.0135000000000000))*(x578)))+(((IkReal(0.0270000000000000))*(x576)))+(((x571)*(x583)))+(((r11)*(x568)*(x570)))+(((IkReal(-1.00000000000000))*(cj5)*(x570)*(x585))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x590=((IkReal(1.00000000000000))*(cj6));
IkReal x591=((IkReal(1.00000000000000))*(sj6));
IkReal x592=((cj4)*(cj5));
if( IKabs(((((r01)*(sj5)*(sj6)))+(((IkReal(-1.00000000000000))*(r00)*(sj5)*(x590)))+(((cj5)*(r02))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(-1.00000000000000))*(r01)*(x591)*(x592)))+(((IkReal(-1.00000000000000))*(r00)*(sj4)*(x591)))+(((cj6)*(r00)*(x592)))+(((IkReal(-1.00000000000000))*(r01)*(sj4)*(x590)))+(((cj4)*(r02)*(sj5))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((r01)*(sj5)*(sj6)))+(((IkReal(-1.00000000000000))*(r00)*(sj5)*(x590)))+(((cj5)*(r02)))))+IKsqr(((((IkReal(-1.00000000000000))*(r01)*(x591)*(x592)))+(((IkReal(-1.00000000000000))*(r00)*(sj4)*(x591)))+(((cj6)*(r00)*(x592)))+(((IkReal(-1.00000000000000))*(r01)*(sj4)*(x590)))+(((cj4)*(r02)*(sj5)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j3array[0]=IKatan2(((((r01)*(sj5)*(sj6)))+(((IkReal(-1.00000000000000))*(r00)*(sj5)*(x590)))+(((cj5)*(r02)))), ((((IkReal(-1.00000000000000))*(r01)*(x591)*(x592)))+(((IkReal(-1.00000000000000))*(r00)*(sj4)*(x591)))+(((cj6)*(r00)*(x592)))+(((IkReal(-1.00000000000000))*(r01)*(sj4)*(x590)))+(((cj4)*(r02)*(sj5)))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[6];
IkReal x593=IKcos(j3);
IkReal x594=IKsin(j3);
IkReal x595=((sj4)*(sj6));
IkReal x596=((IkReal(1.00000000000000))*(cj5));
IkReal x597=((cj4)*(cj6));
IkReal x598=((r11)*(sj6));
IkReal x599=((IkReal(1.00000000000000))*(sj5));
IkReal x600=((cj6)*(sj4));
IkReal x601=((cj4)*(cj5));
IkReal x602=((r01)*(sj6));
IkReal x603=((r21)*(sj6));
IkReal x604=((cj6)*(sj5));
evalcond[0]=((((r20)*(x604)))+(((IkReal(-1.00000000000000))*(x599)*(x603)))+(((IkReal(-1.00000000000000))*(r22)*(x596)))+(((sj2)*(x593))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x598)*(x599)))+(((IkReal(-1.00000000000000))*(r12)*(x596)))+(((IkReal(-1.00000000000000))*(cj2)*(x593)))+(((r10)*(x604))));
evalcond[2]=((((r00)*(x604)))+(((IkReal(-1.00000000000000))*(x599)*(x602)))+(x594)+(((IkReal(-1.00000000000000))*(r02)*(x596))));
evalcond[3]=((((x601)*(x603)))+(((IkReal(-1.00000000000000))*(cj4)*(r22)*(x599)))+(((IkReal(-1.00000000000000))*(sj2)*(x594)))+(((r21)*(x600)))+(((IkReal(-1.00000000000000))*(r20)*(x596)*(x597)))+(((r20)*(x595))));
evalcond[4]=((((IkReal(-1.00000000000000))*(r10)*(x596)*(x597)))+(((r11)*(x600)))+(((cj2)*(x594)))+(((r10)*(x595)))+(((IkReal(-1.00000000000000))*(cj4)*(r12)*(x599)))+(((x598)*(x601))));
evalcond[5]=((((x601)*(x602)))+(((IkReal(-1.00000000000000))*(r00)*(x596)*(x597)))+(((r00)*(x595)))+(x593)+(((IkReal(-1.00000000000000))*(cj4)*(r02)*(x599)))+(((r01)*(x600))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
IkReal x605=((r02)*(sj5));
IkReal x606=((r21)*(sj6));
IkReal x607=((cj5)*(sj4));
IkReal x608=((cj4)*(cj5));
IkReal x609=((cj6)*(r20));
IkReal x610=((IkReal(0.0405000000000000))*(r11));
IkReal x611=((cj6)*(sj4));
IkReal x612=((IkReal(0.265000000000000))*(sj5));
IkReal x613=((cj5)*(r22));
IkReal x614=((r11)*(sj6));
IkReal x615=((IkReal(0.0405000000000000))*(cj4));
IkReal x616=((cj6)*(r00));
IkReal x617=((r12)*(sj5));
IkReal x618=((IkReal(1.00000000000000))*(sj4));
IkReal x619=((r20)*(sj6));
IkReal x620=((IkReal(1.00000000000000))*(cj4));
IkReal x621=((IkReal(0.0135000000000000))*(cj5));
IkReal x622=((cj6)*(r10));
IkReal x623=((r01)*(sj6));
IkReal x624=((IkReal(0.0405000000000000))*(sj4));
IkReal x625=((r22)*(sj5));
IkReal x626=((r10)*(sj6));
IkReal x627=((IkReal(0.265000000000000))*(cj5));
IkReal x628=((r00)*(sj6));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(3.14159265358979))+(j2)), IkReal(6.28318530717959))));
evalcond[1]=((((IkReal(-1.00000000000000))*(sj5)*(x606)))+(((IkReal(-1.00000000000000))*(x613)))+(((sj5)*(x609))));
evalcond[2]=((IkReal(1.00000000000000))+(((IkReal(-1.00000000000000))*(x607)*(x609)))+(((IkReal(-1.00000000000000))*(cj6)*(r21)*(x620)))+(((x606)*(x607)))+(((IkReal(-1.00000000000000))*(x619)*(x620)))+(((IkReal(-1.00000000000000))*(x618)*(x625))));
evalcond[3]=((((sj4)*(x619)))+(((IkReal(-1.00000000000000))*(x608)*(x609)))+(((IkReal(-1.00000000000000))*(x620)*(x625)))+(((x606)*(x608)))+(((r21)*(x611))));
evalcond[4]=((((IkReal(-1.00000000000000))*(x607)*(x616)))+(((IkReal(-1.00000000000000))*(x620)*(x628)))+(((IkReal(-1.00000000000000))*(x605)*(x618)))+(((IkReal(-1.00000000000000))*(cj6)*(r01)*(x620)))+(((x607)*(x623))));
evalcond[5]=((((IkReal(-1.00000000000000))*(x607)*(x622)))+(((IkReal(-1.00000000000000))*(cj6)*(r11)*(x620)))+(((IkReal(-1.00000000000000))*(x620)*(x626)))+(((IkReal(-1.00000000000000))*(x617)*(x618)))+(((x607)*(x614))));
evalcond[6]=((((IkReal(0.0135000000000000))*(x625)))+(((IkReal(0.0270000000000000))*(x606)))+(((IkReal(-1.00000000000000))*(x609)*(x612)))+(((IkReal(-0.0405000000000000))*(x608)*(x609)))+(((x619)*(x624)))+(((IkReal(-1.00000000000000))*(x606)*(x621)))+(((IkReal(-0.0270000000000000))*(x609)))+(((IkReal(-1.00000000000000))*(pz)))+(((x609)*(x621)))+(((x606)*(x612)))+(((IkReal(0.265000000000000))*(x613)))+(((IkReal(-1.00000000000000))*(x615)*(x625)))+(((IkReal(0.0405000000000000))*(r21)*(x611)))+(((IkReal(0.0405000000000000))*(x606)*(x608))));
evalcond[7]=((((IkReal(-1.00000000000000))*(x612)*(x616)))+(((r02)*(x627)))+(((IkReal(0.0705000000000000))*(cj1)))+(((IkReal(-1.00000000000000))*(x621)*(x623)))+(((IkReal(-0.0270000000000000))*(x616)))+(((IkReal(-0.0405000000000000))*(x608)*(x616)))+(((x616)*(x621)))+(((IkReal(-1.00000000000000))*(x605)*(x615)))+(((IkReal(-1.00000000000000))*(px)))+(((x612)*(x623)))+(((IkReal(0.0405000000000000))*(x608)*(x623)))+(((IkReal(0.0270000000000000))*(x623)))+(((IkReal(0.246500000000000))*(sj1)))+(((IkReal(0.0135000000000000))*(x605)))+(((x624)*(x628)))+(((IkReal(0.0405000000000000))*(r01)*(x611))));
evalcond[8]=((((IkReal(0.0270000000000000))*(x614)))+(((IkReal(-0.246500000000000))*(cj1)))+(((x612)*(x614)))+(((IkReal(-1.00000000000000))*(py)))+(((sj6)*(x608)*(x610)))+(((IkReal(0.0135000000000000))*(x617)))+(((IkReal(-1.00000000000000))*(x614)*(x621)))+(((IkReal(0.0705000000000000))*(sj1)))+(((IkReal(-1.00000000000000))*(x612)*(x622)))+(((IkReal(-0.0270000000000000))*(x622)))+(((x624)*(x626)))+(((x621)*(x622)))+(((r12)*(x627)))+(((IkReal(-0.0405000000000000))*(x608)*(x622)))+(((IkReal(-1.00000000000000))*(x615)*(x617)))+(((x610)*(x611))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst3;
gconst3=IKsign((((sj1)*(sj1))+((cj1)*(cj1))));
dummyeval[0]=(((sj1)*(sj1))+((cj1)*(cj1)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst4;
gconst4=IKsign((((sj1)*(sj1))+((cj1)*(cj1))));
dummyeval[0]=(((sj1)*(sj1))+((cj1)*(cj1)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x629=((cj1)*(r12));
IkReal x630=((cj4)*(cj5));
IkReal x631=((cj4)*(sj5));
IkReal x632=((cj6)*(r10));
IkReal x633=((IkReal(1.00000000000000))*(sj1));
IkReal x634=((r10)*(sj6));
IkReal x635=((cj6)*(r11));
IkReal x636=((sj1)*(sj4));
IkReal x637=((cj1)*(sj5));
IkReal x638=((r11)*(sj6));
IkReal x639=((sj1)*(x638));
IkReal x640=((IkReal(1.00000000000000))*(cj1)*(sj4));
if( IKabs(((gconst4)*(((((x634)*(x636)))+(((IkReal(-1.00000000000000))*(x630)*(x632)*(x633)))+(((x635)*(x636)))+(((cj5)*(x629)))+(((IkReal(-1.00000000000000))*(x632)*(x637)))+(((IkReal(-1.00000000000000))*(r12)*(x631)*(x633)))+(((x630)*(x639)))+(((x637)*(x638))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst4)*(((((cj5)*(r12)*(sj1)))+(((IkReal(-1.00000000000000))*(cj1)*(x630)*(x638)))+(((cj1)*(x630)*(x632)))+(((sj5)*(x639)))+(((x629)*(x631)))+(((IkReal(-1.00000000000000))*(x635)*(x640)))+(((IkReal(-1.00000000000000))*(sj5)*(x632)*(x633)))+(((IkReal(-1.00000000000000))*(x634)*(x640))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j3array[0]=IKatan2(((gconst4)*(((((x634)*(x636)))+(((IkReal(-1.00000000000000))*(x630)*(x632)*(x633)))+(((x635)*(x636)))+(((cj5)*(x629)))+(((IkReal(-1.00000000000000))*(x632)*(x637)))+(((IkReal(-1.00000000000000))*(r12)*(x631)*(x633)))+(((x630)*(x639)))+(((x637)*(x638)))))), ((gconst4)*(((((cj5)*(r12)*(sj1)))+(((IkReal(-1.00000000000000))*(cj1)*(x630)*(x638)))+(((cj1)*(x630)*(x632)))+(((sj5)*(x639)))+(((x629)*(x631)))+(((IkReal(-1.00000000000000))*(x635)*(x640)))+(((IkReal(-1.00000000000000))*(sj5)*(x632)*(x633)))+(((IkReal(-1.00000000000000))*(x634)*(x640)))))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[4];
IkReal x641=IKcos(j3);
IkReal x642=IKsin(j3);
IkReal x643=((r11)*(sj6));
IkReal x644=((IkReal(1.00000000000000))*(sj5));
IkReal x645=((sj4)*(sj6));
IkReal x646=((cj6)*(sj4));
IkReal x647=((cj4)*(cj5));
IkReal x648=((r01)*(sj6));
IkReal x649=((IkReal(1.00000000000000))*(cj5));
IkReal x650=((cj6)*(sj5));
IkReal x651=((cj1)*(x641));
IkReal x652=((cj1)*(x642));
IkReal x653=((sj1)*(x641));
IkReal x654=((IkReal(1.00000000000000))*(sj1)*(x642));
IkReal x655=((IkReal(1.00000000000000))*(cj6)*(x647));
evalcond[0]=((((IkReal(-1.00000000000000))*(r12)*(x649)))+(((IkReal(-1.00000000000000))*(x643)*(x644)))+(x652)+(x653)+(((r10)*(x650))));
evalcond[1]=((((IkReal(-1.00000000000000))*(r02)*(x649)))+(((IkReal(-1.00000000000000))*(x654)))+(((IkReal(-1.00000000000000))*(x644)*(x648)))+(x651)+(((r00)*(x650))));
evalcond[2]=((((x643)*(x647)))+(((IkReal(-1.00000000000000))*(x654)))+(((IkReal(-1.00000000000000))*(r10)*(x655)))+(((r10)*(x645)))+(x651)+(((r11)*(x646)))+(((IkReal(-1.00000000000000))*(cj4)*(r12)*(x644))));
evalcond[3]=((((IkReal(-1.00000000000000))*(cj4)*(r02)*(x644)))+(((IkReal(-1.00000000000000))*(x652)))+(((IkReal(-1.00000000000000))*(x653)))+(((IkReal(-1.00000000000000))*(r00)*(x655)))+(((r01)*(x646)))+(((r00)*(x645)))+(((x647)*(x648))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x656=((cj5)*(r12));
IkReal x657=((IkReal(1.00000000000000))*(sj1));
IkReal x658=((sj1)*(sj5));
IkReal x659=((cj6)*(r00));
IkReal x660=((cj5)*(r02));
IkReal x661=((r11)*(sj6));
IkReal x662=((cj1)*(sj5));
IkReal x663=((r01)*(sj5)*(sj6));
IkReal x664=((cj6)*(r10)*(sj5));
if( IKabs(((gconst3)*(((((cj1)*(x656)))+(((IkReal(-1.00000000000000))*(cj6)*(r10)*(x662)))+(((IkReal(-1.00000000000000))*(x657)*(x663)))+(((IkReal(-1.00000000000000))*(x657)*(x660)))+(((x661)*(x662)))+(((x658)*(x659))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst3)*(((((sj1)*(x656)))+(((r01)*(sj6)*(x662)))+(((IkReal(-1.00000000000000))*(x657)*(x664)))+(((IkReal(-1.00000000000000))*(x659)*(x662)))+(((cj1)*(x660)))+(((x658)*(x661))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j3array[0]=IKatan2(((gconst3)*(((((cj1)*(x656)))+(((IkReal(-1.00000000000000))*(cj6)*(r10)*(x662)))+(((IkReal(-1.00000000000000))*(x657)*(x663)))+(((IkReal(-1.00000000000000))*(x657)*(x660)))+(((x661)*(x662)))+(((x658)*(x659)))))), ((gconst3)*(((((sj1)*(x656)))+(((r01)*(sj6)*(x662)))+(((IkReal(-1.00000000000000))*(x657)*(x664)))+(((IkReal(-1.00000000000000))*(x659)*(x662)))+(((cj1)*(x660)))+(((x658)*(x661)))))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[4];
IkReal x665=IKcos(j3);
IkReal x666=IKsin(j3);
IkReal x667=((r11)*(sj6));
IkReal x668=((IkReal(1.00000000000000))*(sj5));
IkReal x669=((sj4)*(sj6));
IkReal x670=((cj6)*(sj4));
IkReal x671=((cj4)*(cj5));
IkReal x672=((r01)*(sj6));
IkReal x673=((IkReal(1.00000000000000))*(cj5));
IkReal x674=((cj6)*(sj5));
IkReal x675=((cj1)*(x665));
IkReal x676=((cj1)*(x666));
IkReal x677=((sj1)*(x665));
IkReal x678=((IkReal(1.00000000000000))*(sj1)*(x666));
IkReal x679=((IkReal(1.00000000000000))*(cj6)*(x671));
evalcond[0]=((((r10)*(x674)))+(x676)+(x677)+(((IkReal(-1.00000000000000))*(x667)*(x668)))+(((IkReal(-1.00000000000000))*(r12)*(x673))));
evalcond[1]=((((IkReal(-1.00000000000000))*(r02)*(x673)))+(((r00)*(x674)))+(((IkReal(-1.00000000000000))*(x668)*(x672)))+(x675)+(((IkReal(-1.00000000000000))*(x678))));
evalcond[2]=((((r11)*(x670)))+(((x667)*(x671)))+(((IkReal(-1.00000000000000))*(cj4)*(r12)*(x668)))+(x675)+(((IkReal(-1.00000000000000))*(r10)*(x679)))+(((IkReal(-1.00000000000000))*(x678)))+(((r10)*(x669))));
evalcond[3]=((((IkReal(-1.00000000000000))*(cj4)*(r02)*(x668)))+(((r00)*(x669)))+(((x671)*(x672)))+(((r01)*(x670)))+(((IkReal(-1.00000000000000))*(x676)))+(((IkReal(-1.00000000000000))*(x677)))+(((IkReal(-1.00000000000000))*(r00)*(x679))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
IkReal x680=((r02)*(sj5));
IkReal x681=((r21)*(sj6));
IkReal x682=((cj5)*(sj4));
IkReal x683=((cj4)*(cj5));
IkReal x684=((cj6)*(r20));
IkReal x685=((IkReal(0.0405000000000000))*(r11));
IkReal x686=((cj6)*(sj4));
IkReal x687=((IkReal(0.265000000000000))*(sj5));
IkReal x688=((cj5)*(r22));
IkReal x689=((r11)*(sj6));
IkReal x690=((IkReal(0.0405000000000000))*(cj4));
IkReal x691=((cj6)*(r00));
IkReal x692=((r12)*(sj5));
IkReal x693=((IkReal(1.00000000000000))*(sj4));
IkReal x694=((r20)*(sj6));
IkReal x695=((IkReal(1.00000000000000))*(cj4));
IkReal x696=((IkReal(0.0135000000000000))*(cj5));
IkReal x697=((cj6)*(r10));
IkReal x698=((r01)*(sj6));
IkReal x699=((IkReal(0.0405000000000000))*(sj4));
IkReal x700=((r22)*(sj5));
IkReal x701=((r10)*(sj6));
IkReal x702=((IkReal(0.265000000000000))*(cj5));
IkReal x703=((r00)*(sj6));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.11022302462516e-16))+(j2)), IkReal(6.28318530717959))));
evalcond[1]=((((sj5)*(x684)))+(((IkReal(-1.00000000000000))*(sj5)*(x681)))+(((IkReal(-1.00000000000000))*(x688))));
evalcond[2]=((IkReal(-1.00000000000000))+(((IkReal(-1.00000000000000))*(x693)*(x700)))+(((x681)*(x682)))+(((IkReal(-1.00000000000000))*(cj6)*(r21)*(x695)))+(((IkReal(-1.00000000000000))*(x694)*(x695)))+(((IkReal(-1.00000000000000))*(x682)*(x684))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x683)*(x684)))+(((r21)*(x686)))+(((sj4)*(x694)))+(((IkReal(-1.00000000000000))*(x695)*(x700)))+(((x681)*(x683))));
evalcond[4]=((((x682)*(x698)))+(((IkReal(-1.00000000000000))*(x682)*(x691)))+(((IkReal(-1.00000000000000))*(x695)*(x703)))+(((IkReal(-1.00000000000000))*(cj6)*(r01)*(x695)))+(((IkReal(-1.00000000000000))*(x680)*(x693))));
evalcond[5]=((((IkReal(-1.00000000000000))*(x682)*(x697)))+(((x682)*(x689)))+(((IkReal(-1.00000000000000))*(x695)*(x701)))+(((IkReal(-1.00000000000000))*(x692)*(x693)))+(((IkReal(-1.00000000000000))*(cj6)*(r11)*(x695))));
evalcond[6]=((((IkReal(0.265000000000000))*(x688)))+(((IkReal(-0.0405000000000000))*(x683)*(x684)))+(((x694)*(x699)))+(((IkReal(0.0405000000000000))*(r21)*(x686)))+(((x684)*(x696)))+(((IkReal(-1.00000000000000))*(x690)*(x700)))+(((IkReal(0.0405000000000000))*(x681)*(x683)))+(((IkReal(0.0270000000000000))*(x681)))+(((IkReal(-1.00000000000000))*(pz)))+(((IkReal(0.0135000000000000))*(x700)))+(((IkReal(-0.0270000000000000))*(x684)))+(((IkReal(-1.00000000000000))*(x684)*(x687)))+(((x681)*(x687)))+(((IkReal(-1.00000000000000))*(x681)*(x696))));
evalcond[7]=((((IkReal(-1.00000000000000))*(x687)*(x691)))+(((IkReal(0.0405000000000000))*(r01)*(x686)))+(((IkReal(-1.00000000000000))*(x696)*(x698)))+(((x687)*(x698)))+(((IkReal(0.0405000000000000))*(x683)*(x698)))+(((IkReal(-0.0270000000000000))*(x691)))+(((x691)*(x696)))+(((IkReal(-0.0105000000000000))*(cj1)))+(((IkReal(-0.0405000000000000))*(x683)*(x691)))+(((IkReal(-1.00000000000000))*(px)))+(((IkReal(0.246500000000000))*(sj1)))+(((r02)*(x702)))+(((IkReal(0.0135000000000000))*(x680)))+(((IkReal(-1.00000000000000))*(x680)*(x690)))+(((IkReal(0.0270000000000000))*(x698)))+(((x699)*(x703))));
evalcond[8]=((((IkReal(-1.00000000000000))*(x687)*(x697)))+(((x687)*(x689)))+(((x696)*(x697)))+(((IkReal(-0.246500000000000))*(cj1)))+(((x685)*(x686)))+(((IkReal(-0.0270000000000000))*(x697)))+(((IkReal(0.0135000000000000))*(x692)))+(((IkReal(0.0270000000000000))*(x689)))+(((IkReal(-0.0405000000000000))*(x683)*(x697)))+(((IkReal(-1.00000000000000))*(py)))+(((IkReal(-1.00000000000000))*(x690)*(x692)))+(((sj6)*(x683)*(x685)))+(((r12)*(x702)))+(((IkReal(-1.00000000000000))*(x689)*(x696)))+(((IkReal(-0.0105000000000000))*(sj1)))+(((x699)*(x701))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst5;
gconst5=IKsign((((sj1)*(sj1))+((cj1)*(cj1))));
dummyeval[0]=(((sj1)*(sj1))+((cj1)*(cj1)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst6;
gconst6=IKsign(((((IkReal(-1.00000000000000))*((sj1)*(sj1))))+(((IkReal(-1.00000000000000))*((cj1)*(cj1))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((sj1)*(sj1))))+(((IkReal(-1.00000000000000))*((cj1)*(cj1)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x704=((cj4)*(cj5));
IkReal x705=((r11)*(sj6));
IkReal x706=((sj1)*(sj5));
IkReal x707=((cj1)*(r10));
IkReal x708=((sj4)*(sj6));
IkReal x709=((cj5)*(r12));
IkReal x710=((IkReal(1.00000000000000))*(cj1));
IkReal x711=((IkReal(1.00000000000000))*(cj6)*(r10));
IkReal x712=((IkReal(1.00000000000000))*(cj4)*(r12));
IkReal x713=((cj6)*(r11)*(sj4));
if( IKabs(((gconst6)*(((((r10)*(sj1)*(x708)))+(((IkReal(-1.00000000000000))*(x706)*(x712)))+(((cj6)*(sj5)*(x707)))+(((sj1)*(x704)*(x705)))+(((IkReal(-1.00000000000000))*(x709)*(x710)))+(((IkReal(-1.00000000000000))*(sj1)*(x704)*(x711)))+(((sj1)*(x713)))+(((IkReal(-1.00000000000000))*(sj5)*(x705)*(x710))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst6)*(((((IkReal(-1.00000000000000))*(cj4)*(r12)*(sj5)*(x710)))+(((IkReal(-1.00000000000000))*(x706)*(x711)))+(((IkReal(-1.00000000000000))*(cj6)*(x704)*(x707)))+(((x707)*(x708)))+(((sj1)*(x709)))+(((cj1)*(x704)*(x705)))+(((x705)*(x706)))+(((cj1)*(x713))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j3array[0]=IKatan2(((gconst6)*(((((r10)*(sj1)*(x708)))+(((IkReal(-1.00000000000000))*(x706)*(x712)))+(((cj6)*(sj5)*(x707)))+(((sj1)*(x704)*(x705)))+(((IkReal(-1.00000000000000))*(x709)*(x710)))+(((IkReal(-1.00000000000000))*(sj1)*(x704)*(x711)))+(((sj1)*(x713)))+(((IkReal(-1.00000000000000))*(sj5)*(x705)*(x710)))))), ((gconst6)*(((((IkReal(-1.00000000000000))*(cj4)*(r12)*(sj5)*(x710)))+(((IkReal(-1.00000000000000))*(x706)*(x711)))+(((IkReal(-1.00000000000000))*(cj6)*(x704)*(x707)))+(((x707)*(x708)))+(((sj1)*(x709)))+(((cj1)*(x704)*(x705)))+(((x705)*(x706)))+(((cj1)*(x713)))))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[4];
IkReal x714=IKcos(j3);
IkReal x715=IKsin(j3);
IkReal x716=((r11)*(sj6));
IkReal x717=((IkReal(1.00000000000000))*(sj5));
IkReal x718=((sj4)*(sj6));
IkReal x719=((cj6)*(sj4));
IkReal x720=((cj4)*(cj5));
IkReal x721=((r01)*(sj6));
IkReal x722=((IkReal(1.00000000000000))*(cj5));
IkReal x723=((cj6)*(sj5));
IkReal x724=((cj1)*(x715));
IkReal x725=((sj1)*(x715));
IkReal x726=((cj1)*(x714));
IkReal x727=((IkReal(1.00000000000000))*(sj1)*(x714));
IkReal x728=((IkReal(1.00000000000000))*(cj6)*(x720));
evalcond[0]=((((IkReal(-1.00000000000000))*(r12)*(x722)))+(((r10)*(x723)))+(((IkReal(-1.00000000000000))*(x727)))+(((IkReal(-1.00000000000000))*(x716)*(x717)))+(x724));
evalcond[1]=((((IkReal(-1.00000000000000))*(r02)*(x722)))+(((IkReal(-1.00000000000000))*(x717)*(x721)))+(((r00)*(x723)))+(((IkReal(-1.00000000000000))*(x726)))+(((IkReal(-1.00000000000000))*(x725))));
evalcond[2]=((((r11)*(x719)))+(((IkReal(-1.00000000000000))*(cj4)*(r12)*(x717)))+(((IkReal(-1.00000000000000))*(r10)*(x728)))+(x725)+(x726)+(((r10)*(x718)))+(((x716)*(x720))));
evalcond[3]=((((IkReal(-1.00000000000000))*(r00)*(x728)))+(((x720)*(x721)))+(((r01)*(x719)))+(((r00)*(x718)))+(((IkReal(-1.00000000000000))*(x727)))+(x724)+(((IkReal(-1.00000000000000))*(cj4)*(r02)*(x717))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x729=((cj5)*(r12));
IkReal x730=((IkReal(1.00000000000000))*(sj1));
IkReal x731=((cj5)*(r02));
IkReal x732=((IkReal(1.00000000000000))*(cj1));
IkReal x733=((cj6)*(sj5));
IkReal x734=((r01)*(sj5)*(sj6));
IkReal x735=((sj1)*(x733));
IkReal x736=((r11)*(sj5)*(sj6));
if( IKabs(((gconst5)*(((((cj1)*(x729)))+(((IkReal(-1.00000000000000))*(r10)*(x732)*(x733)))+(((r00)*(x735)))+(((IkReal(-1.00000000000000))*(x730)*(x734)))+(((IkReal(-1.00000000000000))*(x730)*(x731)))+(((cj1)*(x736))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst5)*(((((r10)*(x735)))+(((cj1)*(r00)*(x733)))+(((IkReal(-1.00000000000000))*(x732)*(x734)))+(((IkReal(-1.00000000000000))*(x731)*(x732)))+(((IkReal(-1.00000000000000))*(x730)*(x736)))+(((IkReal(-1.00000000000000))*(x729)*(x730))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j3array[0]=IKatan2(((gconst5)*(((((cj1)*(x729)))+(((IkReal(-1.00000000000000))*(r10)*(x732)*(x733)))+(((r00)*(x735)))+(((IkReal(-1.00000000000000))*(x730)*(x734)))+(((IkReal(-1.00000000000000))*(x730)*(x731)))+(((cj1)*(x736)))))), ((gconst5)*(((((r10)*(x735)))+(((cj1)*(r00)*(x733)))+(((IkReal(-1.00000000000000))*(x732)*(x734)))+(((IkReal(-1.00000000000000))*(x731)*(x732)))+(((IkReal(-1.00000000000000))*(x730)*(x736)))+(((IkReal(-1.00000000000000))*(x729)*(x730)))))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[4];
IkReal x737=IKcos(j3);
IkReal x738=IKsin(j3);
IkReal x739=((r11)*(sj6));
IkReal x740=((IkReal(1.00000000000000))*(sj5));
IkReal x741=((sj4)*(sj6));
IkReal x742=((cj6)*(sj4));
IkReal x743=((cj4)*(cj5));
IkReal x744=((r01)*(sj6));
IkReal x745=((IkReal(1.00000000000000))*(cj5));
IkReal x746=((cj6)*(sj5));
IkReal x747=((cj1)*(x738));
IkReal x748=((sj1)*(x738));
IkReal x749=((cj1)*(x737));
IkReal x750=((IkReal(1.00000000000000))*(sj1)*(x737));
IkReal x751=((IkReal(1.00000000000000))*(cj6)*(x743));
evalcond[0]=((((IkReal(-1.00000000000000))*(r12)*(x745)))+(((r10)*(x746)))+(x747)+(((IkReal(-1.00000000000000))*(x739)*(x740)))+(((IkReal(-1.00000000000000))*(x750))));
evalcond[1]=((((IkReal(-1.00000000000000))*(r02)*(x745)))+(((r00)*(x746)))+(((IkReal(-1.00000000000000))*(x740)*(x744)))+(((IkReal(-1.00000000000000))*(x748)))+(((IkReal(-1.00000000000000))*(x749))));
evalcond[2]=((((IkReal(-1.00000000000000))*(r10)*(x751)))+(((r10)*(x741)))+(((x739)*(x743)))+(((r11)*(x742)))+(x748)+(x749)+(((IkReal(-1.00000000000000))*(cj4)*(r12)*(x740))));
evalcond[3]=((((IkReal(-1.00000000000000))*(cj4)*(r02)*(x740)))+(((IkReal(-1.00000000000000))*(r00)*(x751)))+(((r00)*(x741)))+(((x743)*(x744)))+(((r01)*(x742)))+(x747)+(((IkReal(-1.00000000000000))*(x750))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
IkReal x752=((r02)*(sj5));
IkReal x753=((cj5)*(sj6));
IkReal x754=((r21)*(sj4));
IkReal x755=((IkReal(0.0405000000000000))*(cj4));
IkReal x756=((IkReal(0.0405000000000000))*(sj4));
IkReal x757=((cj6)*(r11));
IkReal x758=((IkReal(0.265000000000000))*(sj5));
IkReal x759=((r21)*(sj6));
IkReal x760=((cj6)*(r10));
IkReal x761=((IkReal(0.265000000000000))*(cj5));
IkReal x762=((r11)*(sj6));
IkReal x763=((cj6)*(r00));
IkReal x764=((r12)*(sj5));
IkReal x765=((r20)*(sj6));
IkReal x766=((IkReal(1.00000000000000))*(cj4));
IkReal x767=((IkReal(0.0135000000000000))*(cj5));
IkReal x768=((cj6)*(r20));
IkReal x769=((r10)*(sj6));
IkReal x770=((IkReal(1.00000000000000))*(sj4));
IkReal x771=((r22)*(sj5));
IkReal x772=((r01)*(sj6));
IkReal x773=((r00)*(sj6));
IkReal x774=((cj6)*(r01));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.57079632679490))+(j2)), IkReal(6.28318530717959))));
evalcond[1]=((((IkReal(-1.00000000000000))*(cj5)*(x768)*(x770)))+(((IkReal(-1.00000000000000))*(x765)*(x766)))+(((IkReal(-1.00000000000000))*(cj6)*(r21)*(x766)))+(((x753)*(x754)))+(((IkReal(-1.00000000000000))*(x770)*(x771))));
evalcond[2]=((((IkReal(-1.00000000000000))*(cj5)*(x763)*(x770)))+(((r01)*(sj4)*(x753)))+(((IkReal(-1.00000000000000))*(x752)*(x770)))+(((IkReal(-1.00000000000000))*(x766)*(x773)))+(((IkReal(-1.00000000000000))*(x766)*(x774)))+(((IkReal(-1.00000000000000))*(cj1))));
evalcond[3]=((((IkReal(-1.00000000000000))*(sj1)))+(((r11)*(sj4)*(x753)))+(((IkReal(-1.00000000000000))*(x766)*(x769)))+(((IkReal(-1.00000000000000))*(x764)*(x770)))+(((IkReal(-1.00000000000000))*(x757)*(x766)))+(((IkReal(-1.00000000000000))*(cj5)*(x760)*(x770))));
evalcond[4]=((IkReal(0.0405000000000000))+(((IkReal(-1.00000000000000))*(x758)*(x768)))+(((IkReal(-0.0270000000000000))*(x768)))+(((r21)*(x753)*(x755)))+(((IkReal(0.0270000000000000))*(x759)))+(((IkReal(-1.00000000000000))*(x755)*(x771)))+(((x758)*(x759)))+(((IkReal(-1.00000000000000))*(pz)))+(((x756)*(x765)))+(((IkReal(0.0135000000000000))*(x771)))+(((IkReal(-0.0135000000000000))*(r21)*(x753)))+(((r22)*(x761)))+(((x767)*(x768)))+(((IkReal(-1.00000000000000))*(cj5)*(x755)*(x768)))+(((IkReal(0.0405000000000000))*(cj6)*(x754))));
evalcond[5]=((((IkReal(0.0270000000000000))*(x772)))+(((IkReal(-1.00000000000000))*(x758)*(x763)))+(((IkReal(-0.0270000000000000))*(x763)))+(((x756)*(x773)))+(((x756)*(x774)))+(((IkReal(-0.0135000000000000))*(r01)*(x753)))+(((x758)*(x772)))+(((IkReal(0.0300000000000000))*(cj1)))+(((x763)*(x767)))+(((IkReal(-1.00000000000000))*(px)))+(((IkReal(0.246500000000000))*(sj1)))+(((r02)*(x761)))+(((IkReal(-1.00000000000000))*(x752)*(x755)))+(((IkReal(0.0135000000000000))*(x752)))+(((IkReal(-1.00000000000000))*(cj5)*(x755)*(x763)))+(((r01)*(x753)*(x755))));
evalcond[6]=((((x756)*(x757)))+(((IkReal(-1.00000000000000))*(x758)*(x760)))+(((IkReal(-0.0270000000000000))*(x760)))+(((IkReal(-0.0135000000000000))*(r11)*(x753)))+(((IkReal(0.0300000000000000))*(sj1)))+(((r11)*(x753)*(x755)))+(((IkReal(-0.246500000000000))*(cj1)))+(((x760)*(x767)))+(((IkReal(0.0135000000000000))*(x764)))+(((IkReal(-1.00000000000000))*(x755)*(x764)))+(((x758)*(x762)))+(((IkReal(-1.00000000000000))*(py)))+(((x756)*(x769)))+(((r12)*(x761)))+(((IkReal(0.0270000000000000))*(x762)))+(((IkReal(-1.00000000000000))*(cj5)*(x755)*(x760))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x775=((r21)*(sj6));
IkReal x776=((cj4)*(cj5));
IkReal x777=((IkReal(1.00000000000000))*(cj6)*(r20));
if( IKabs(((((IkReal(-1.00000000000000))*(cj4)*(r22)*(sj5)))+(((cj6)*(r21)*(sj4)))+(((IkReal(-1.00000000000000))*(x776)*(x777)))+(((r20)*(sj4)*(sj6)))+(((x775)*(x776))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((cj5)*(r22)))+(((IkReal(-1.00000000000000))*(sj5)*(x777)))+(((sj5)*(x775))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IkReal(-1.00000000000000))*(cj4)*(r22)*(sj5)))+(((cj6)*(r21)*(sj4)))+(((IkReal(-1.00000000000000))*(x776)*(x777)))+(((r20)*(sj4)*(sj6)))+(((x775)*(x776)))))+IKsqr(((((cj5)*(r22)))+(((IkReal(-1.00000000000000))*(sj5)*(x777)))+(((sj5)*(x775)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j3array[0]=IKatan2(((((IkReal(-1.00000000000000))*(cj4)*(r22)*(sj5)))+(((cj6)*(r21)*(sj4)))+(((IkReal(-1.00000000000000))*(x776)*(x777)))+(((r20)*(sj4)*(sj6)))+(((x775)*(x776)))), ((((cj5)*(r22)))+(((IkReal(-1.00000000000000))*(sj5)*(x777)))+(((sj5)*(x775)))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[6];
IkReal x778=IKsin(j3);
IkReal x779=IKcos(j3);
IkReal x780=((sj4)*(sj6));
IkReal x781=((IkReal(1.00000000000000))*(cj5));
IkReal x782=((r11)*(sj6));
IkReal x783=((IkReal(1.00000000000000))*(sj5));
IkReal x784=((cj4)*(cj6));
IkReal x785=((cj4)*(cj5));
IkReal x786=((r21)*(sj6));
IkReal x787=((cj6)*(sj4));
IkReal x788=((r01)*(sj6));
IkReal x789=((cj6)*(sj5));
IkReal x790=((IkReal(1.00000000000000))*(x778));
evalcond[0]=((((r20)*(x789)))+(((IkReal(-1.00000000000000))*(r22)*(x781)))+(x779)+(((IkReal(-1.00000000000000))*(x783)*(x786))));
evalcond[1]=((((r10)*(x789)))+(((cj1)*(x778)))+(((IkReal(-1.00000000000000))*(r12)*(x781)))+(((IkReal(-1.00000000000000))*(x782)*(x783))));
evalcond[2]=((((r00)*(x789)))+(((IkReal(-1.00000000000000))*(r02)*(x781)))+(((IkReal(-1.00000000000000))*(sj1)*(x790)))+(((IkReal(-1.00000000000000))*(x783)*(x788))));
evalcond[3]=((((r20)*(x780)))+(((IkReal(-1.00000000000000))*(x790)))+(((IkReal(-1.00000000000000))*(cj4)*(r22)*(x783)))+(((x785)*(x786)))+(((IkReal(-1.00000000000000))*(r20)*(x781)*(x784)))+(((r21)*(x787))));
evalcond[4]=((((IkReal(-1.00000000000000))*(r10)*(x781)*(x784)))+(((r10)*(x780)))+(((cj1)*(x779)))+(((x782)*(x785)))+(((r11)*(x787)))+(((IkReal(-1.00000000000000))*(cj4)*(r12)*(x783))));
evalcond[5]=((((r00)*(x780)))+(((r01)*(x787)))+(((x785)*(x788)))+(((IkReal(-1.00000000000000))*(sj1)*(x779)))+(((IkReal(-1.00000000000000))*(r00)*(x781)*(x784)))+(((IkReal(-1.00000000000000))*(cj4)*(r02)*(x783))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
IkReal x791=((r02)*(sj5));
IkReal x792=((cj5)*(sj6));
IkReal x793=((r21)*(sj4));
IkReal x794=((IkReal(0.0405000000000000))*(cj4));
IkReal x795=((IkReal(0.0405000000000000))*(sj4));
IkReal x796=((cj6)*(r11));
IkReal x797=((IkReal(0.265000000000000))*(sj5));
IkReal x798=((r21)*(sj6));
IkReal x799=((cj6)*(r10));
IkReal x800=((IkReal(0.265000000000000))*(cj5));
IkReal x801=((r11)*(sj6));
IkReal x802=((cj6)*(r00));
IkReal x803=((r12)*(sj5));
IkReal x804=((IkReal(1.00000000000000))*(sj4));
IkReal x805=((r20)*(sj6));
IkReal x806=((IkReal(1.00000000000000))*(cj4));
IkReal x807=((IkReal(0.0135000000000000))*(cj5));
IkReal x808=((cj6)*(r20));
IkReal x809=((r10)*(sj6));
IkReal x810=((r22)*(sj5));
IkReal x811=((r01)*(sj6));
IkReal x812=((r00)*(sj6));
IkReal x813=((cj6)*(r01));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(4.71238898038469))+(j2)), IkReal(6.28318530717959))));
evalcond[1]=((((IkReal(-1.00000000000000))*(cj6)*(r21)*(x806)))+(((IkReal(-1.00000000000000))*(x805)*(x806)))+(((IkReal(-1.00000000000000))*(cj5)*(x804)*(x808)))+(((x792)*(x793)))+(((IkReal(-1.00000000000000))*(x804)*(x810))));
evalcond[2]=((((r01)*(sj4)*(x792)))+(cj1)+(((IkReal(-1.00000000000000))*(x791)*(x804)))+(((IkReal(-1.00000000000000))*(cj5)*(x802)*(x804)))+(((IkReal(-1.00000000000000))*(x806)*(x813)))+(((IkReal(-1.00000000000000))*(x806)*(x812))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x796)*(x806)))+(sj1)+(((IkReal(-1.00000000000000))*(x806)*(x809)))+(((IkReal(-1.00000000000000))*(cj5)*(x799)*(x804)))+(((r11)*(sj4)*(x792)))+(((IkReal(-1.00000000000000))*(x803)*(x804))));
evalcond[4]=((IkReal(-0.0405000000000000))+(((IkReal(-1.00000000000000))*(x794)*(x810)))+(((IkReal(-1.00000000000000))*(cj5)*(x794)*(x808)))+(((IkReal(-1.00000000000000))*(x797)*(x808)))+(((r22)*(x800)))+(((IkReal(0.0405000000000000))*(cj6)*(x793)))+(((x795)*(x805)))+(((IkReal(-0.0270000000000000))*(x808)))+(((IkReal(-1.00000000000000))*(pz)))+(((IkReal(0.0135000000000000))*(x810)))+(((r21)*(x792)*(x794)))+(((IkReal(-0.0135000000000000))*(r21)*(x792)))+(((IkReal(0.0270000000000000))*(x798)))+(((x797)*(x798)))+(((x807)*(x808))));
evalcond[5]=((((IkReal(-0.0135000000000000))*(r01)*(x792)))+(((x797)*(x811)))+(((IkReal(-1.00000000000000))*(cj5)*(x794)*(x802)))+(((IkReal(0.0135000000000000))*(x791)))+(((IkReal(-1.00000000000000))*(x797)*(x802)))+(((IkReal(0.0300000000000000))*(cj1)))+(((IkReal(-0.0270000000000000))*(x802)))+(((IkReal(-1.00000000000000))*(x791)*(x794)))+(((IkReal(-1.00000000000000))*(px)))+(((r01)*(x792)*(x794)))+(((r02)*(x800)))+(((IkReal(0.246500000000000))*(sj1)))+(((IkReal(0.0270000000000000))*(x811)))+(((x802)*(x807)))+(((x795)*(x812)))+(((x795)*(x813))));
evalcond[6]=((((IkReal(-0.0135000000000000))*(r11)*(x792)))+(((IkReal(0.0135000000000000))*(x803)))+(((IkReal(0.0270000000000000))*(x801)))+(((IkReal(0.0300000000000000))*(sj1)))+(((IkReal(-0.246500000000000))*(cj1)))+(((r11)*(x792)*(x794)))+(((IkReal(-1.00000000000000))*(cj5)*(x794)*(x799)))+(((r12)*(x800)))+(((x795)*(x809)))+(((x797)*(x801)))+(((IkReal(-1.00000000000000))*(x797)*(x799)))+(((IkReal(-1.00000000000000))*(py)))+(((x799)*(x807)))+(((IkReal(-1.00000000000000))*(x794)*(x803)))+(((IkReal(-0.0270000000000000))*(x799)))+(((x795)*(x796))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x814=((cj4)*(cj5));
IkReal x815=((IkReal(1.00000000000000))*(sj6));
IkReal x816=((cj6)*(r20));
if( IKabs(((((IkReal(-1.00000000000000))*(cj6)*(r21)*(sj4)))+(((IkReal(-1.00000000000000))*(r21)*(x814)*(x815)))+(((cj4)*(r22)*(sj5)))+(((IkReal(-1.00000000000000))*(r20)*(sj4)*(x815)))+(((x814)*(x816))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(-1.00000000000000))*(r21)*(sj5)*(x815)))+(((sj5)*(x816)))+(((IkReal(-1.00000000000000))*(cj5)*(r22))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IkReal(-1.00000000000000))*(cj6)*(r21)*(sj4)))+(((IkReal(-1.00000000000000))*(r21)*(x814)*(x815)))+(((cj4)*(r22)*(sj5)))+(((IkReal(-1.00000000000000))*(r20)*(sj4)*(x815)))+(((x814)*(x816)))))+IKsqr(((((IkReal(-1.00000000000000))*(r21)*(sj5)*(x815)))+(((sj5)*(x816)))+(((IkReal(-1.00000000000000))*(cj5)*(r22)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j3array[0]=IKatan2(((((IkReal(-1.00000000000000))*(cj6)*(r21)*(sj4)))+(((IkReal(-1.00000000000000))*(r21)*(x814)*(x815)))+(((cj4)*(r22)*(sj5)))+(((IkReal(-1.00000000000000))*(r20)*(sj4)*(x815)))+(((x814)*(x816)))), ((((IkReal(-1.00000000000000))*(r21)*(sj5)*(x815)))+(((sj5)*(x816)))+(((IkReal(-1.00000000000000))*(cj5)*(r22)))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[6];
IkReal x817=IKsin(j3);
IkReal x818=IKcos(j3);
IkReal x819=((sj4)*(sj6));
IkReal x820=((IkReal(1.00000000000000))*(cj5));
IkReal x821=((cj4)*(cj6));
IkReal x822=((r11)*(sj6));
IkReal x823=((IkReal(1.00000000000000))*(sj5));
IkReal x824=((cj6)*(sj4));
IkReal x825=((cj4)*(cj5));
IkReal x826=((r21)*(sj6));
IkReal x827=((r01)*(sj6));
IkReal x828=((cj6)*(sj5));
IkReal x829=((IkReal(1.00000000000000))*(x818));
evalcond[0]=((((r20)*(x828)))+(((IkReal(-1.00000000000000))*(x829)))+(((IkReal(-1.00000000000000))*(x823)*(x826)))+(((IkReal(-1.00000000000000))*(r22)*(x820))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x822)*(x823)))+(((IkReal(-1.00000000000000))*(r12)*(x820)))+(((r10)*(x828)))+(((cj1)*(x817))));
evalcond[2]=((((IkReal(-1.00000000000000))*(r02)*(x820)))+(((IkReal(-1.00000000000000))*(x823)*(x827)))+(((IkReal(-1.00000000000000))*(sj1)*(x817)))+(((r00)*(x828))));
evalcond[3]=((((r21)*(x824)))+(((IkReal(-1.00000000000000))*(cj4)*(r22)*(x823)))+(((r20)*(x819)))+(((IkReal(-1.00000000000000))*(r20)*(x820)*(x821)))+(((x825)*(x826)))+(x817));
evalcond[4]=((((r10)*(x819)))+(((x822)*(x825)))+(((IkReal(-1.00000000000000))*(cj4)*(r12)*(x823)))+(((cj1)*(x818)))+(((r11)*(x824)))+(((IkReal(-1.00000000000000))*(r10)*(x820)*(x821))));
evalcond[5]=((((r00)*(x819)))+(((x825)*(x827)))+(((r01)*(x824)))+(((IkReal(-1.00000000000000))*(r00)*(x820)*(x821)))+(((IkReal(-1.00000000000000))*(cj4)*(r02)*(x823)))+(((IkReal(-1.00000000000000))*(sj1)*(x829))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}
}
}
}
}
}

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x830=((IKabs(sj2) != 0)?((IkReal)1/(sj2)):(IkReal)1.0e30);
IkReal x831=((cj5)*(r22));
IkReal x832=((IkReal(1.00000000000000))*(sj5));
IkReal x833=((r21)*(sj6));
IkReal x834=((cj2)*(sj1));
IkReal x835=((cj6)*(r20));
if( IKabs(((x830)*(((IKabs(cj1) != 0)?((IkReal)1/(cj1)):(IkReal)1.0e30))*(((((cj5)*(r12)*(sj2)))+(((IkReal(-1.00000000000000))*(cj6)*(r10)*(sj2)*(x832)))+(((sj5)*(x834)*(x835)))+(((r11)*(sj2)*(sj5)*(sj6)))+(((IkReal(-1.00000000000000))*(x831)*(x834)))+(((IkReal(-1.00000000000000))*(x832)*(x833)*(x834))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((x830)*(((((IkReal(-1.00000000000000))*(x832)*(x835)))+(((sj5)*(x833)))+(x831))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((x830)*(((IKabs(cj1) != 0)?((IkReal)1/(cj1)):(IkReal)1.0e30))*(((((cj5)*(r12)*(sj2)))+(((IkReal(-1.00000000000000))*(cj6)*(r10)*(sj2)*(x832)))+(((sj5)*(x834)*(x835)))+(((r11)*(sj2)*(sj5)*(sj6)))+(((IkReal(-1.00000000000000))*(x831)*(x834)))+(((IkReal(-1.00000000000000))*(x832)*(x833)*(x834)))))))+IKsqr(((x830)*(((((IkReal(-1.00000000000000))*(x832)*(x835)))+(((sj5)*(x833)))+(x831)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j3array[0]=IKatan2(((x830)*(((IKabs(cj1) != 0)?((IkReal)1/(cj1)):(IkReal)1.0e30))*(((((cj5)*(r12)*(sj2)))+(((IkReal(-1.00000000000000))*(cj6)*(r10)*(sj2)*(x832)))+(((sj5)*(x834)*(x835)))+(((r11)*(sj2)*(sj5)*(sj6)))+(((IkReal(-1.00000000000000))*(x831)*(x834)))+(((IkReal(-1.00000000000000))*(x832)*(x833)*(x834)))))), ((x830)*(((((IkReal(-1.00000000000000))*(x832)*(x835)))+(((sj5)*(x833)))+(x831)))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[6];
IkReal x836=IKcos(j3);
IkReal x837=IKsin(j3);
IkReal x838=((IkReal(1.00000000000000))*(cj5));
IkReal x839=((r11)*(sj6));
IkReal x840=((IkReal(1.00000000000000))*(sj5));
IkReal x841=((sj4)*(sj6));
IkReal x842=((cj2)*(sj1));
IkReal x843=((cj6)*(sj4));
IkReal x844=((cj4)*(cj5));
IkReal x845=((r01)*(sj6));
IkReal x846=((r21)*(sj6));
IkReal x847=((cj6)*(sj5));
IkReal x848=((cj1)*(x836));
IkReal x849=((cj1)*(x837));
IkReal x850=((IkReal(1.00000000000000))*(x837));
IkReal x851=((cj4)*(cj6)*(x838));
evalcond[0]=((((IkReal(-1.00000000000000))*(x840)*(x846)))+(((r20)*(x847)))+(((IkReal(-1.00000000000000))*(r22)*(x838)))+(((sj2)*(x836))));
evalcond[1]=((((x836)*(x842)))+(((r10)*(x847)))+(((IkReal(-1.00000000000000))*(r12)*(x838)))+(((IkReal(-1.00000000000000))*(x839)*(x840)))+(x849));
evalcond[2]=((((IkReal(-1.00000000000000))*(r02)*(x838)))+(((IkReal(-1.00000000000000))*(x840)*(x845)))+(((r00)*(x847)))+(((IkReal(-1.00000000000000))*(sj1)*(x850)))+(((cj2)*(x848))));
evalcond[3]=((((r20)*(x841)))+(((r21)*(x843)))+(((IkReal(-1.00000000000000))*(cj4)*(r22)*(x840)))+(((IkReal(-1.00000000000000))*(sj2)*(x850)))+(((IkReal(-1.00000000000000))*(r20)*(x851)))+(((x844)*(x846))));
evalcond[4]=((((IkReal(-1.00000000000000))*(x842)*(x850)))+(((x839)*(x844)))+(((IkReal(-1.00000000000000))*(cj4)*(r12)*(x840)))+(((r10)*(x841)))+(x848)+(((IkReal(-1.00000000000000))*(r10)*(x851)))+(((r11)*(x843))));
evalcond[5]=((((IkReal(-1.00000000000000))*(r00)*(x851)))+(((IkReal(-1.00000000000000))*(cj4)*(r02)*(x840)))+(((r01)*(x843)))+(((r00)*(x841)))+(((IkReal(-1.00000000000000))*(cj2)*(x849)))+(((IkReal(-1.00000000000000))*(sj1)*(x836)))+(((x844)*(x845))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x852=(cj1)*(cj1);
IkReal x853=(sj1)*(sj1);
IkReal x854=((cj5)*(r12));
IkReal x855=((IkReal(1.00000000000000))*(sj1));
IkReal x856=((sj1)*(sj5));
IkReal x857=((cj6)*(r00));
IkReal x858=((cj5)*(r02));
IkReal x859=((r11)*(sj6));
IkReal x860=((cj1)*(sj5));
IkReal x861=((r01)*(sj5)*(sj6));
IkReal x862=((cj6)*(r10)*(sj5));
if( IKabs(((((IKabs(((x852)+(x853))) != 0)?((IkReal)1/(((x852)+(x853)))):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(cj6)*(r10)*(x860)))+(((cj1)*(x854)))+(((x856)*(x857)))+(((x859)*(x860)))+(((IkReal(-1.00000000000000))*(x855)*(x858)))+(((IkReal(-1.00000000000000))*(x855)*(x861))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IKabs(((((cj2)*(x852)))+(((cj2)*(x853))))) != 0)?((IkReal)1/(((((cj2)*(x852)))+(((cj2)*(x853)))))):(IkReal)1.0e30))*(((((r01)*(sj6)*(x860)))+(((IkReal(-1.00000000000000))*(x857)*(x860)))+(((sj1)*(x854)))+(((cj1)*(x858)))+(((x856)*(x859)))+(((IkReal(-1.00000000000000))*(x855)*(x862))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IKabs(((x852)+(x853))) != 0)?((IkReal)1/(((x852)+(x853)))):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(cj6)*(r10)*(x860)))+(((cj1)*(x854)))+(((x856)*(x857)))+(((x859)*(x860)))+(((IkReal(-1.00000000000000))*(x855)*(x858)))+(((IkReal(-1.00000000000000))*(x855)*(x861)))))))+IKsqr(((((IKabs(((((cj2)*(x852)))+(((cj2)*(x853))))) != 0)?((IkReal)1/(((((cj2)*(x852)))+(((cj2)*(x853)))))):(IkReal)1.0e30))*(((((r01)*(sj6)*(x860)))+(((IkReal(-1.00000000000000))*(x857)*(x860)))+(((sj1)*(x854)))+(((cj1)*(x858)))+(((x856)*(x859)))+(((IkReal(-1.00000000000000))*(x855)*(x862)))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j3array[0]=IKatan2(((((IKabs(((x852)+(x853))) != 0)?((IkReal)1/(((x852)+(x853)))):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(cj6)*(r10)*(x860)))+(((cj1)*(x854)))+(((x856)*(x857)))+(((x859)*(x860)))+(((IkReal(-1.00000000000000))*(x855)*(x858)))+(((IkReal(-1.00000000000000))*(x855)*(x861)))))), ((((IKabs(((((cj2)*(x852)))+(((cj2)*(x853))))) != 0)?((IkReal)1/(((((cj2)*(x852)))+(((cj2)*(x853)))))):(IkReal)1.0e30))*(((((r01)*(sj6)*(x860)))+(((IkReal(-1.00000000000000))*(x857)*(x860)))+(((sj1)*(x854)))+(((cj1)*(x858)))+(((x856)*(x859)))+(((IkReal(-1.00000000000000))*(x855)*(x862)))))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[6];
IkReal x863=IKcos(j3);
IkReal x864=IKsin(j3);
IkReal x865=((IkReal(1.00000000000000))*(cj5));
IkReal x866=((r11)*(sj6));
IkReal x867=((IkReal(1.00000000000000))*(sj5));
IkReal x868=((sj4)*(sj6));
IkReal x869=((cj2)*(sj1));
IkReal x870=((cj6)*(sj4));
IkReal x871=((cj4)*(cj5));
IkReal x872=((r01)*(sj6));
IkReal x873=((r21)*(sj6));
IkReal x874=((cj6)*(sj5));
IkReal x875=((cj1)*(x863));
IkReal x876=((cj1)*(x864));
IkReal x877=((IkReal(1.00000000000000))*(x864));
IkReal x878=((cj4)*(cj6)*(x865));
evalcond[0]=((((sj2)*(x863)))+(((IkReal(-1.00000000000000))*(x867)*(x873)))+(((r20)*(x874)))+(((IkReal(-1.00000000000000))*(r22)*(x865))));
evalcond[1]=((((r10)*(x874)))+(((IkReal(-1.00000000000000))*(x866)*(x867)))+(((x863)*(x869)))+(x876)+(((IkReal(-1.00000000000000))*(r12)*(x865))));
evalcond[2]=((((cj2)*(x875)))+(((r00)*(x874)))+(((IkReal(-1.00000000000000))*(sj1)*(x877)))+(((IkReal(-1.00000000000000))*(r02)*(x865)))+(((IkReal(-1.00000000000000))*(x867)*(x872))));
evalcond[3]=((((x871)*(x873)))+(((r21)*(x870)))+(((IkReal(-1.00000000000000))*(cj4)*(r22)*(x867)))+(((IkReal(-1.00000000000000))*(sj2)*(x877)))+(((IkReal(-1.00000000000000))*(r20)*(x878)))+(((r20)*(x868))));
evalcond[4]=((((r10)*(x868)))+(((r11)*(x870)))+(((IkReal(-1.00000000000000))*(x869)*(x877)))+(((x866)*(x871)))+(x875)+(((IkReal(-1.00000000000000))*(r10)*(x878)))+(((IkReal(-1.00000000000000))*(cj4)*(r12)*(x867))));
evalcond[5]=((((IkReal(-1.00000000000000))*(cj4)*(r02)*(x867)))+(((IkReal(-1.00000000000000))*(sj1)*(x863)))+(((x871)*(x872)))+(((r01)*(x870)))+(((r00)*(x868)))+(((IkReal(-1.00000000000000))*(r00)*(x878)))+(((IkReal(-1.00000000000000))*(cj2)*(x876))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x879=((r21)*(sj6));
IkReal x880=((cj4)*(cj5));
IkReal x881=((IkReal(1.00000000000000))*(cj6)*(r20));
if( IKabs(((gconst2)*(((((x879)*(x880)))+(((IkReal(-1.00000000000000))*(cj4)*(r22)*(sj5)))+(((cj6)*(r21)*(sj4)))+(((r20)*(sj4)*(sj6)))+(((IkReal(-1.00000000000000))*(x880)*(x881))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst2)*(((((cj5)*(r22)))+(((sj5)*(x879)))+(((IkReal(-1.00000000000000))*(sj5)*(x881))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j3array[0]=IKatan2(((gconst2)*(((((x879)*(x880)))+(((IkReal(-1.00000000000000))*(cj4)*(r22)*(sj5)))+(((cj6)*(r21)*(sj4)))+(((r20)*(sj4)*(sj6)))+(((IkReal(-1.00000000000000))*(x880)*(x881)))))), ((gconst2)*(((((cj5)*(r22)))+(((sj5)*(x879)))+(((IkReal(-1.00000000000000))*(sj5)*(x881)))))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[6];
IkReal x882=IKcos(j3);
IkReal x883=IKsin(j3);
IkReal x884=((IkReal(1.00000000000000))*(cj5));
IkReal x885=((r11)*(sj6));
IkReal x886=((IkReal(1.00000000000000))*(sj5));
IkReal x887=((sj4)*(sj6));
IkReal x888=((cj2)*(sj1));
IkReal x889=((cj6)*(sj4));
IkReal x890=((cj4)*(cj5));
IkReal x891=((r01)*(sj6));
IkReal x892=((r21)*(sj6));
IkReal x893=((cj6)*(sj5));
IkReal x894=((cj1)*(x882));
IkReal x895=((cj1)*(x883));
IkReal x896=((IkReal(1.00000000000000))*(x883));
IkReal x897=((cj4)*(cj6)*(x884));
evalcond[0]=((((r20)*(x893)))+(((sj2)*(x882)))+(((IkReal(-1.00000000000000))*(r22)*(x884)))+(((IkReal(-1.00000000000000))*(x886)*(x892))));
evalcond[1]=((((r10)*(x893)))+(((x882)*(x888)))+(((IkReal(-1.00000000000000))*(r12)*(x884)))+(x895)+(((IkReal(-1.00000000000000))*(x885)*(x886))));
evalcond[2]=((((cj2)*(x894)))+(((r00)*(x893)))+(((IkReal(-1.00000000000000))*(r02)*(x884)))+(((IkReal(-1.00000000000000))*(sj1)*(x896)))+(((IkReal(-1.00000000000000))*(x886)*(x891))));
evalcond[3]=((((r20)*(x887)))+(((x890)*(x892)))+(((r21)*(x889)))+(((IkReal(-1.00000000000000))*(sj2)*(x896)))+(((IkReal(-1.00000000000000))*(cj4)*(r22)*(x886)))+(((IkReal(-1.00000000000000))*(r20)*(x897))));
evalcond[4]=((((r11)*(x889)))+(((r10)*(x887)))+(((IkReal(-1.00000000000000))*(r10)*(x897)))+(((IkReal(-1.00000000000000))*(x888)*(x896)))+(((IkReal(-1.00000000000000))*(cj4)*(r12)*(x886)))+(x894)+(((x885)*(x890))));
evalcond[5]=((((r00)*(x887)))+(((IkReal(-1.00000000000000))*(cj2)*(x895)))+(((r01)*(x889)))+(((IkReal(-1.00000000000000))*(cj4)*(r02)*(x886)))+(((IkReal(-1.00000000000000))*(sj1)*(x882)))+(((x890)*(x891)))+(((IkReal(-1.00000000000000))*(r00)*(x897))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}

} else
{
{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x898=((IkReal(1.00000000000000))*(cj4));
IkReal x899=((IkReal(1.00000000000000))*(sj4));
IkReal x900=((cj5)*(cj6));
IkReal x901=((cj5)*(sj4)*(sj6));
if( IKabs(((gconst0)*(((((r11)*(x901)))+(((IkReal(-1.00000000000000))*(r10)*(x899)*(x900)))+(((IkReal(-1.00000000000000))*(cj6)*(r11)*(x898)))+(((IkReal(-1.00000000000000))*(r10)*(sj6)*(x898)))+(((IkReal(-1.00000000000000))*(r12)*(sj5)*(x899))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst0)*(((((r01)*(x901)))+(((IkReal(-1.00000000000000))*(r00)*(x899)*(x900)))+(((IkReal(-1.00000000000000))*(r00)*(sj6)*(x898)))+(((IkReal(-1.00000000000000))*(r02)*(sj5)*(x899)))+(((IkReal(-1.00000000000000))*(cj6)*(r01)*(x898))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j1array[0]=IKatan2(((gconst0)*(((((r11)*(x901)))+(((IkReal(-1.00000000000000))*(r10)*(x899)*(x900)))+(((IkReal(-1.00000000000000))*(cj6)*(r11)*(x898)))+(((IkReal(-1.00000000000000))*(r10)*(sj6)*(x898)))+(((IkReal(-1.00000000000000))*(r12)*(sj5)*(x899)))))), ((gconst0)*(((((r01)*(x901)))+(((IkReal(-1.00000000000000))*(r00)*(x899)*(x900)))+(((IkReal(-1.00000000000000))*(r00)*(sj6)*(x898)))+(((IkReal(-1.00000000000000))*(r02)*(sj5)*(x899)))+(((IkReal(-1.00000000000000))*(cj6)*(r01)*(x898)))))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
for(int ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
for(int iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[4];
IkReal x902=IKcos(j1);
IkReal x903=IKsin(j1);
IkReal x904=((r02)*(sj5));
IkReal x905=((IkReal(1.00000000000000))*(sj2));
IkReal x906=((IkReal(0.0270000000000000))*(sj6));
IkReal x907=((IkReal(0.0405000000000000))*(cj4));
IkReal x908=((IkReal(0.265000000000000))*(sj5));
IkReal x909=((cj6)*(r00));
IkReal x910=((r11)*(sj6));
IkReal x911=((r12)*(sj5));
IkReal x912=((r01)*(sj6));
IkReal x913=((IkReal(1.00000000000000))*(sj4));
IkReal x914=((cj6)*(r10));
IkReal x915=((IkReal(0.0135000000000000))*(cj5));
IkReal x916=((IkReal(0.0405000000000000))*(sj4));
IkReal x917=((r10)*(sj6));
IkReal x918=((cj6)*(r11));
IkReal x919=((IkReal(0.0405000000000000))*(cj2));
IkReal x920=((cj5)*(sj4));
IkReal x921=((IkReal(1.00000000000000))*(cj4));
IkReal x922=((cj6)*(r01));
IkReal x923=((IkReal(0.265000000000000))*(cj5));
IkReal x924=((r00)*(sj6));
IkReal x925=((cj5)*(sj6)*(x907));
evalcond[0]=((((IkReal(-1.00000000000000))*(x902)*(x905)))+(((IkReal(-1.00000000000000))*(cj5)*(x909)*(x913)))+(((IkReal(-1.00000000000000))*(x921)*(x922)))+(((IkReal(-1.00000000000000))*(x921)*(x924)))+(((IkReal(-1.00000000000000))*(x904)*(x913)))+(((x912)*(x920))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x903)*(x905)))+(((IkReal(-1.00000000000000))*(x918)*(x921)))+(((IkReal(-1.00000000000000))*(cj5)*(x913)*(x914)))+(((x910)*(x920)))+(((IkReal(-1.00000000000000))*(x911)*(x913)))+(((IkReal(-1.00000000000000))*(x917)*(x921))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x908)*(x909)))+(((IkReal(-0.0270000000000000))*(x909)))+(((x916)*(x924)))+(((x916)*(x922)))+(((x902)*(x919)))+(((x909)*(x915)))+(((r01)*(x906)))+(((IkReal(0.0300000000000000))*(x902)))+(((IkReal(0.246500000000000))*(x903)))+(((IkReal(-1.00000000000000))*(cj5)*(x907)*(x909)))+(((IkReal(-1.00000000000000))*(px)))+(((IkReal(-1.00000000000000))*(x912)*(x915)))+(((x908)*(x912)))+(((IkReal(-1.00000000000000))*(x904)*(x907)))+(((IkReal(0.0135000000000000))*(x904)))+(((r02)*(x923)))+(((cj5)*(x907)*(x912))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x908)*(x914)))+(((r11)*(x906)))+(((IkReal(0.0300000000000000))*(x903)))+(((IkReal(-0.0270000000000000))*(x914)))+(((x903)*(x919)))+(((x914)*(x915)))+(((IkReal(-1.00000000000000))*(py)))+(((IkReal(-0.246500000000000))*(x902)))+(((IkReal(-1.00000000000000))*(x910)*(x915)))+(((r12)*(x923)))+(((x916)*(x917)))+(((x916)*(x918)))+(((IkReal(-1.00000000000000))*(cj5)*(x907)*(x914)))+(((x908)*(x910)))+(((IkReal(-1.00000000000000))*(x907)*(x911)))+(((cj5)*(x907)*(x910)))+(((IkReal(0.0135000000000000))*(x911))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst2;
gconst2=IKsign(sj2);
dummyeval[0]=sj2;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[2];
IkReal x926=(cj1)*(cj1);
IkReal x927=(sj1)*(sj1);
dummyeval[0]=((x926)+(x927));
dummyeval[1]=((((cj2)*(x926)))+(((cj2)*(x927))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  || IKabs(dummyeval[1]) < 0.0000010000000000  )
{
{
IkReal dummyeval[2];
dummyeval[0]=cj1;
dummyeval[1]=sj2;
if( IKabs(dummyeval[0]) < 0.0000010000000000  || IKabs(dummyeval[1]) < 0.0000010000000000  )
{
{
IkReal evalcond[9];
IkReal x928=((r02)*(sj5));
IkReal x929=((cj5)*(sj6));
IkReal x930=((r21)*(sj4));
IkReal x931=((IkReal(0.0405000000000000))*(cj4));
IkReal x932=((IkReal(0.0405000000000000))*(sj4));
IkReal x933=((cj6)*(r11));
IkReal x934=((IkReal(0.265000000000000))*(sj5));
IkReal x935=((r21)*(sj6));
IkReal x936=((IkReal(0.265000000000000))*(cj5));
IkReal x937=((r11)*(sj6));
IkReal x938=((cj6)*(r00));
IkReal x939=((r12)*(sj5));
IkReal x940=((IkReal(1.00000000000000))*(sj4));
IkReal x941=((r20)*(sj6));
IkReal x942=((IkReal(1.00000000000000))*(cj4));
IkReal x943=((cj6)*(r20));
IkReal x944=((r10)*(sj6));
IkReal x945=((r22)*(sj5));
IkReal x946=((cj6)*(r10));
IkReal x947=((r01)*(sj6));
IkReal x948=((r00)*(sj6));
IkReal x949=((cj6)*(r01));
IkReal x950=((IkReal(0.0135000000000000))*(cj5)*(cj6));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.57079632679490))+(j1)), IkReal(6.28318530717959))));
evalcond[1]=((cj2)+(((IkReal(-1.00000000000000))*(cj6)*(r21)*(x942)))+(((IkReal(-1.00000000000000))*(cj5)*(x940)*(x943)))+(((IkReal(-1.00000000000000))*(x941)*(x942)))+(((x929)*(x930)))+(((IkReal(-1.00000000000000))*(x940)*(x945))));
evalcond[2]=((((IkReal(-1.00000000000000))*(cj5)*(x938)*(x940)))+(((IkReal(-1.00000000000000))*(x928)*(x940)))+(((IkReal(-1.00000000000000))*(x942)*(x949)))+(((IkReal(-1.00000000000000))*(x942)*(x948)))+(((r01)*(sj4)*(x929))));
evalcond[3]=((((IkReal(-1.00000000000000))*(sj2)))+(((IkReal(-1.00000000000000))*(x939)*(x940)))+(((IkReal(-1.00000000000000))*(x942)*(x944)))+(((IkReal(-1.00000000000000))*(cj5)*(x940)*(x946)))+(((IkReal(-1.00000000000000))*(x933)*(x942)))+(((r11)*(sj4)*(x929))));
evalcond[4]=((((IkReal(0.0405000000000000))*(sj2)))+(((x932)*(x941)))+(((r22)*(x936)))+(((IkReal(0.0135000000000000))*(cj5)*(x943)))+(((IkReal(-1.00000000000000))*(pz)))+(((IkReal(-0.0270000000000000))*(x943)))+(((IkReal(0.0270000000000000))*(x935)))+(((IkReal(-0.0135000000000000))*(r21)*(x929)))+(((r21)*(x929)*(x931)))+(((IkReal(-1.00000000000000))*(cj5)*(x931)*(x943)))+(((IkReal(-1.00000000000000))*(x931)*(x945)))+(((x934)*(x935)))+(((IkReal(0.0135000000000000))*(x945)))+(((IkReal(0.0405000000000000))*(cj6)*(x930)))+(((IkReal(-1.00000000000000))*(x934)*(x943))));
evalcond[5]=((IkReal(0.246500000000000))+(((x932)*(x948)))+(((x932)*(x949)))+(((IkReal(-1.00000000000000))*(cj5)*(x931)*(x938)))+(((IkReal(-1.00000000000000))*(x928)*(x931)))+(((IkReal(0.0135000000000000))*(cj5)*(x938)))+(((IkReal(-0.0270000000000000))*(x938)))+(((IkReal(-1.00000000000000))*(x934)*(x938)))+(((IkReal(0.0135000000000000))*(x928)))+(((IkReal(-1.00000000000000))*(px)))+(((IkReal(0.0270000000000000))*(x947)))+(((IkReal(-0.0135000000000000))*(r01)*(x929)))+(((x934)*(x947)))+(((r01)*(x929)*(x931)))+(((r02)*(x936))));
evalcond[6]=((IkReal(0.0300000000000000))+(((IkReal(-0.0135000000000000))*(r11)*(x929)))+(((x932)*(x944)))+(((r11)*(x929)*(x931)))+(((IkReal(-1.00000000000000))*(x931)*(x939)))+(((IkReal(0.0135000000000000))*(cj5)*(x946)))+(((IkReal(-1.00000000000000))*(py)))+(((IkReal(0.0135000000000000))*(x939)))+(((IkReal(-0.0270000000000000))*(x946)))+(((IkReal(0.0270000000000000))*(x937)))+(((r12)*(x936)))+(((IkReal(0.0405000000000000))*(cj2)))+(((IkReal(-1.00000000000000))*(cj5)*(x931)*(x946)))+(((x934)*(x937)))+(((x932)*(x933)))+(((IkReal(-1.00000000000000))*(x934)*(x946))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x951=((IkReal(1.00000000000000))*(sj5));
IkReal x952=((r01)*(sj6));
IkReal x953=((IkReal(1.00000000000000))*(cj5));
IkReal x954=((cj6)*(r00));
if( IKabs(((((IkReal(-1.00000000000000))*(x951)*(x952)))+(((sj5)*(x954)))+(((IkReal(-1.00000000000000))*(r02)*(x953))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(-1.00000000000000))*(cj4)*(r02)*(x951)))+(((r00)*(sj4)*(sj6)))+(((cj4)*(cj5)*(x952)))+(((cj6)*(r01)*(sj4)))+(((IkReal(-1.00000000000000))*(cj4)*(x953)*(x954))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IkReal(-1.00000000000000))*(x951)*(x952)))+(((sj5)*(x954)))+(((IkReal(-1.00000000000000))*(r02)*(x953)))))+IKsqr(((((IkReal(-1.00000000000000))*(cj4)*(r02)*(x951)))+(((r00)*(sj4)*(sj6)))+(((cj4)*(cj5)*(x952)))+(((cj6)*(r01)*(sj4)))+(((IkReal(-1.00000000000000))*(cj4)*(x953)*(x954)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j3array[0]=IKatan2(((((IkReal(-1.00000000000000))*(x951)*(x952)))+(((sj5)*(x954)))+(((IkReal(-1.00000000000000))*(r02)*(x953)))), ((((IkReal(-1.00000000000000))*(cj4)*(r02)*(x951)))+(((r00)*(sj4)*(sj6)))+(((cj4)*(cj5)*(x952)))+(((cj6)*(r01)*(sj4)))+(((IkReal(-1.00000000000000))*(cj4)*(x953)*(x954)))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[6];
IkReal x955=IKcos(j3);
IkReal x956=IKsin(j3);
IkReal x957=((sj4)*(sj6));
IkReal x958=((IkReal(1.00000000000000))*(cj5));
IkReal x959=((cj4)*(cj6));
IkReal x960=((r11)*(sj6));
IkReal x961=((IkReal(1.00000000000000))*(sj5));
IkReal x962=((cj6)*(sj4));
IkReal x963=((cj4)*(cj5));
IkReal x964=((r01)*(sj6));
IkReal x965=((r21)*(sj6));
IkReal x966=((cj6)*(sj5));
IkReal x967=((IkReal(1.00000000000000))*(x956));
evalcond[0]=((((IkReal(-1.00000000000000))*(x961)*(x965)))+(((IkReal(-1.00000000000000))*(r22)*(x958)))+(((sj2)*(x955)))+(((r20)*(x966))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x960)*(x961)))+(((cj2)*(x955)))+(((IkReal(-1.00000000000000))*(r12)*(x958)))+(((r10)*(x966))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x961)*(x964)))+(((r00)*(x966)))+(((IkReal(-1.00000000000000))*(r02)*(x958)))+(((IkReal(-1.00000000000000))*(x967))));
evalcond[3]=((((IkReal(-1.00000000000000))*(cj4)*(r22)*(x961)))+(((IkReal(-1.00000000000000))*(r20)*(x958)*(x959)))+(((r21)*(x962)))+(((IkReal(-1.00000000000000))*(sj2)*(x967)))+(((r20)*(x957)))+(((x963)*(x965))));
evalcond[4]=((((IkReal(-1.00000000000000))*(cj4)*(r12)*(x961)))+(((IkReal(-1.00000000000000))*(cj2)*(x967)))+(((x960)*(x963)))+(((r11)*(x962)))+(((IkReal(-1.00000000000000))*(r10)*(x958)*(x959)))+(((r10)*(x957))));
evalcond[5]=((((IkReal(-1.00000000000000))*(x955)))+(((r01)*(x962)))+(((r00)*(x957)))+(((x963)*(x964)))+(((IkReal(-1.00000000000000))*(cj4)*(r02)*(x961)))+(((IkReal(-1.00000000000000))*(r00)*(x958)*(x959))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
IkReal x968=((r02)*(sj5));
IkReal x969=((cj5)*(sj6));
IkReal x970=((r21)*(sj4));
IkReal x971=((IkReal(0.0405000000000000))*(cj4));
IkReal x972=((IkReal(0.0405000000000000))*(sj4));
IkReal x973=((cj6)*(r11));
IkReal x974=((IkReal(0.265000000000000))*(sj5));
IkReal x975=((r21)*(sj6));
IkReal x976=((IkReal(0.265000000000000))*(cj5));
IkReal x977=((r11)*(sj6));
IkReal x978=((cj6)*(r00));
IkReal x979=((r12)*(sj5));
IkReal x980=((IkReal(1.00000000000000))*(sj4));
IkReal x981=((r20)*(sj6));
IkReal x982=((IkReal(1.00000000000000))*(cj4));
IkReal x983=((cj6)*(r20));
IkReal x984=((r10)*(sj6));
IkReal x985=((r22)*(sj5));
IkReal x986=((cj6)*(r10));
IkReal x987=((r01)*(sj6));
IkReal x988=((r00)*(sj6));
IkReal x989=((cj6)*(r01));
IkReal x990=((IkReal(0.0135000000000000))*(cj5)*(cj6));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(4.71238898038469))+(j1)), IkReal(6.28318530717959))));
evalcond[1]=((((x969)*(x970)))+(cj2)+(((IkReal(-1.00000000000000))*(cj6)*(r21)*(x982)))+(((IkReal(-1.00000000000000))*(x980)*(x985)))+(((IkReal(-1.00000000000000))*(x981)*(x982)))+(((IkReal(-1.00000000000000))*(cj5)*(x980)*(x983))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x982)*(x989)))+(((IkReal(-1.00000000000000))*(x982)*(x988)))+(((IkReal(-1.00000000000000))*(cj5)*(x978)*(x980)))+(((r01)*(sj4)*(x969)))+(((IkReal(-1.00000000000000))*(x968)*(x980))));
evalcond[3]=((sj2)+(((IkReal(-1.00000000000000))*(x982)*(x984)))+(((r11)*(sj4)*(x969)))+(((IkReal(-1.00000000000000))*(x979)*(x980)))+(((IkReal(-1.00000000000000))*(x973)*(x982)))+(((IkReal(-1.00000000000000))*(cj5)*(x980)*(x986))));
evalcond[4]=((((x972)*(x981)))+(((IkReal(0.0405000000000000))*(sj2)))+(((IkReal(0.0135000000000000))*(cj5)*(x983)))+(((IkReal(-0.0135000000000000))*(r21)*(x969)))+(((IkReal(-1.00000000000000))*(cj5)*(x971)*(x983)))+(((r22)*(x976)))+(((IkReal(0.0270000000000000))*(x975)))+(((IkReal(-1.00000000000000))*(x974)*(x983)))+(((IkReal(-1.00000000000000))*(x971)*(x985)))+(((IkReal(-1.00000000000000))*(pz)))+(((IkReal(0.0135000000000000))*(x985)))+(((IkReal(-0.0270000000000000))*(x983)))+(((r21)*(x969)*(x971)))+(((IkReal(0.0405000000000000))*(cj6)*(x970)))+(((x974)*(x975))));
evalcond[5]=((IkReal(-0.246500000000000))+(((x972)*(x989)))+(((x972)*(x988)))+(((IkReal(0.0135000000000000))*(cj5)*(x978)))+(((IkReal(-1.00000000000000))*(cj5)*(x971)*(x978)))+(((IkReal(0.0270000000000000))*(x987)))+(((IkReal(-1.00000000000000))*(x974)*(x978)))+(((IkReal(-1.00000000000000))*(px)))+(((IkReal(-0.0135000000000000))*(r01)*(x969)))+(((IkReal(0.0135000000000000))*(x968)))+(((x974)*(x987)))+(((IkReal(-0.0270000000000000))*(x978)))+(((r01)*(x969)*(x971)))+(((r02)*(x976)))+(((IkReal(-1.00000000000000))*(x968)*(x971))));
evalcond[6]=((IkReal(-0.0300000000000000))+(((x972)*(x984)))+(((IkReal(0.0135000000000000))*(cj5)*(x986)))+(((IkReal(-1.00000000000000))*(cj5)*(x971)*(x986)))+(((IkReal(0.0270000000000000))*(x977)))+(((IkReal(-1.00000000000000))*(x974)*(x986)))+(((IkReal(-1.00000000000000))*(x971)*(x979)))+(((IkReal(-1.00000000000000))*(py)))+(((IkReal(-0.0405000000000000))*(cj2)))+(((IkReal(-0.0135000000000000))*(r11)*(x969)))+(((r11)*(x969)*(x971)))+(((IkReal(0.0135000000000000))*(x979)))+(((r12)*(x976)))+(((IkReal(-0.0270000000000000))*(x986)))+(((x974)*(x977)))+(((x972)*(x973))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x991=((IkReal(1.00000000000000))*(cj6));
IkReal x992=((IkReal(1.00000000000000))*(sj6));
IkReal x993=((cj4)*(cj5));
if( IKabs(((((r01)*(sj5)*(sj6)))+(((IkReal(-1.00000000000000))*(r00)*(sj5)*(x991)))+(((cj5)*(r02))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(-1.00000000000000))*(r01)*(sj4)*(x991)))+(((cj6)*(r00)*(x993)))+(((IkReal(-1.00000000000000))*(r00)*(sj4)*(x992)))+(((cj4)*(r02)*(sj5)))+(((IkReal(-1.00000000000000))*(r01)*(x992)*(x993))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((r01)*(sj5)*(sj6)))+(((IkReal(-1.00000000000000))*(r00)*(sj5)*(x991)))+(((cj5)*(r02)))))+IKsqr(((((IkReal(-1.00000000000000))*(r01)*(sj4)*(x991)))+(((cj6)*(r00)*(x993)))+(((IkReal(-1.00000000000000))*(r00)*(sj4)*(x992)))+(((cj4)*(r02)*(sj5)))+(((IkReal(-1.00000000000000))*(r01)*(x992)*(x993)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j3array[0]=IKatan2(((((r01)*(sj5)*(sj6)))+(((IkReal(-1.00000000000000))*(r00)*(sj5)*(x991)))+(((cj5)*(r02)))), ((((IkReal(-1.00000000000000))*(r01)*(sj4)*(x991)))+(((cj6)*(r00)*(x993)))+(((IkReal(-1.00000000000000))*(r00)*(sj4)*(x992)))+(((cj4)*(r02)*(sj5)))+(((IkReal(-1.00000000000000))*(r01)*(x992)*(x993)))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[6];
IkReal x994=IKcos(j3);
IkReal x995=IKsin(j3);
IkReal x996=((sj4)*(sj6));
IkReal x997=((IkReal(1.00000000000000))*(cj5));
IkReal x998=((cj4)*(cj6));
IkReal x999=((r11)*(sj6));
IkReal x1000=((IkReal(1.00000000000000))*(sj5));
IkReal x1001=((cj6)*(sj4));
IkReal x1002=((cj4)*(cj5));
IkReal x1003=((r01)*(sj6));
IkReal x1004=((r21)*(sj6));
IkReal x1005=((cj6)*(sj5));
evalcond[0]=((((IkReal(-1.00000000000000))*(r22)*(x997)))+(((sj2)*(x994)))+(((r20)*(x1005)))+(((IkReal(-1.00000000000000))*(x1000)*(x1004))));
evalcond[1]=((((IkReal(-1.00000000000000))*(cj2)*(x994)))+(((IkReal(-1.00000000000000))*(r12)*(x997)))+(((IkReal(-1.00000000000000))*(x1000)*(x999)))+(((r10)*(x1005))));
evalcond[2]=((((IkReal(-1.00000000000000))*(r02)*(x997)))+(((IkReal(-1.00000000000000))*(x1000)*(x1003)))+(x995)+(((r00)*(x1005))));
evalcond[3]=((((IkReal(-1.00000000000000))*(sj2)*(x995)))+(((r20)*(x996)))+(((IkReal(-1.00000000000000))*(r20)*(x997)*(x998)))+(((r21)*(x1001)))+(((IkReal(-1.00000000000000))*(cj4)*(r22)*(x1000)))+(((x1002)*(x1004))));
evalcond[4]=((((IkReal(-1.00000000000000))*(r10)*(x997)*(x998)))+(((r11)*(x1001)))+(((x1002)*(x999)))+(((r10)*(x996)))+(((IkReal(-1.00000000000000))*(cj4)*(r12)*(x1000)))+(((cj2)*(x995))));
evalcond[5]=((((r01)*(x1001)))+(((r00)*(x996)))+(((IkReal(-1.00000000000000))*(r00)*(x997)*(x998)))+(((IkReal(-1.00000000000000))*(cj4)*(r02)*(x1000)))+(((x1002)*(x1003)))+(x994));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
IkReal x1006=((r02)*(sj5));
IkReal x1007=((r21)*(sj6));
IkReal x1008=((cj5)*(sj4));
IkReal x1009=((cj4)*(cj5));
IkReal x1010=((cj6)*(r20));
IkReal x1011=((IkReal(0.0405000000000000))*(r11));
IkReal x1012=((cj6)*(sj4));
IkReal x1013=((IkReal(0.265000000000000))*(sj5));
IkReal x1014=((cj5)*(r22));
IkReal x1015=((r11)*(sj6));
IkReal x1016=((IkReal(0.0405000000000000))*(cj4));
IkReal x1017=((cj6)*(r00));
IkReal x1018=((r12)*(sj5));
IkReal x1019=((IkReal(1.00000000000000))*(sj4));
IkReal x1020=((r20)*(sj6));
IkReal x1021=((IkReal(1.00000000000000))*(cj4));
IkReal x1022=((IkReal(0.0135000000000000))*(cj5));
IkReal x1023=((cj6)*(r10));
IkReal x1024=((r01)*(sj6));
IkReal x1025=((IkReal(0.0405000000000000))*(sj4));
IkReal x1026=((r22)*(sj5));
IkReal x1027=((r10)*(sj6));
IkReal x1028=((IkReal(0.265000000000000))*(cj5));
IkReal x1029=((r00)*(sj6));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(3.14159265358979))+(j2)), IkReal(6.28318530717959))));
evalcond[1]=((((sj5)*(x1010)))+(((IkReal(-1.00000000000000))*(x1014)))+(((IkReal(-1.00000000000000))*(sj5)*(x1007))));
evalcond[2]=((IkReal(1.00000000000000))+(((IkReal(-1.00000000000000))*(x1008)*(x1010)))+(((IkReal(-1.00000000000000))*(x1019)*(x1026)))+(((IkReal(-1.00000000000000))*(x1020)*(x1021)))+(((x1007)*(x1008)))+(((IkReal(-1.00000000000000))*(cj6)*(r21)*(x1021))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x1009)*(x1010)))+(((r21)*(x1012)))+(((IkReal(-1.00000000000000))*(x1021)*(x1026)))+(((sj4)*(x1020)))+(((x1007)*(x1009))));
evalcond[4]=((((x1008)*(x1024)))+(((IkReal(-1.00000000000000))*(x1008)*(x1017)))+(((IkReal(-1.00000000000000))*(x1006)*(x1019)))+(((IkReal(-1.00000000000000))*(x1021)*(x1029)))+(((IkReal(-1.00000000000000))*(cj6)*(r01)*(x1021))));
evalcond[5]=((((IkReal(-1.00000000000000))*(x1018)*(x1019)))+(((IkReal(-1.00000000000000))*(x1008)*(x1023)))+(((IkReal(-1.00000000000000))*(cj6)*(r11)*(x1021)))+(((IkReal(-1.00000000000000))*(x1021)*(x1027)))+(((x1008)*(x1015))));
evalcond[6]=((((x1010)*(x1022)))+(((IkReal(-1.00000000000000))*(x1010)*(x1013)))+(((IkReal(0.0405000000000000))*(r21)*(x1012)))+(((IkReal(0.0135000000000000))*(x1026)))+(((IkReal(-0.0270000000000000))*(x1010)))+(((IkReal(0.0405000000000000))*(x1007)*(x1009)))+(((IkReal(-1.00000000000000))*(pz)))+(((x1020)*(x1025)))+(((IkReal(-1.00000000000000))*(x1016)*(x1026)))+(((IkReal(0.0270000000000000))*(x1007)))+(((x1007)*(x1013)))+(((IkReal(-1.00000000000000))*(x1007)*(x1022)))+(((IkReal(-0.0405000000000000))*(x1009)*(x1010)))+(((IkReal(0.265000000000000))*(x1014))));
evalcond[7]=((((x1017)*(x1022)))+(((IkReal(0.0270000000000000))*(x1024)))+(((IkReal(0.0705000000000000))*(cj1)))+(((IkReal(-1.00000000000000))*(x1022)*(x1024)))+(((IkReal(-0.0270000000000000))*(x1017)))+(((IkReal(0.0405000000000000))*(r01)*(x1012)))+(((IkReal(-1.00000000000000))*(x1006)*(x1016)))+(((IkReal(-1.00000000000000))*(px)))+(((IkReal(0.246500000000000))*(sj1)))+(((r02)*(x1028)))+(((IkReal(-1.00000000000000))*(x1013)*(x1017)))+(((x1025)*(x1029)))+(((IkReal(0.0135000000000000))*(x1006)))+(((x1013)*(x1024)))+(((IkReal(-0.0405000000000000))*(x1009)*(x1017)))+(((IkReal(0.0405000000000000))*(x1009)*(x1024))));
evalcond[8]=((((IkReal(-0.246500000000000))*(cj1)))+(((x1013)*(x1015)))+(((r12)*(x1028)))+(((sj6)*(x1009)*(x1011)))+(((IkReal(-1.00000000000000))*(py)))+(((x1022)*(x1023)))+(((IkReal(-1.00000000000000))*(x1016)*(x1018)))+(((IkReal(-1.00000000000000))*(x1015)*(x1022)))+(((IkReal(0.0705000000000000))*(sj1)))+(((x1025)*(x1027)))+(((IkReal(0.0270000000000000))*(x1015)))+(((IkReal(0.0135000000000000))*(x1018)))+(((IkReal(-1.00000000000000))*(x1013)*(x1023)))+(((IkReal(-0.0405000000000000))*(x1009)*(x1023)))+(((x1011)*(x1012)))+(((IkReal(-0.0270000000000000))*(x1023))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst3;
gconst3=IKsign((((sj1)*(sj1))+((cj1)*(cj1))));
dummyeval[0]=(((sj1)*(sj1))+((cj1)*(cj1)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst4;
gconst4=IKsign((((sj1)*(sj1))+((cj1)*(cj1))));
dummyeval[0]=(((sj1)*(sj1))+((cj1)*(cj1)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x1030=((cj1)*(r12));
IkReal x1031=((cj4)*(cj5));
IkReal x1032=((cj4)*(sj5));
IkReal x1033=((cj6)*(r10));
IkReal x1034=((IkReal(1.00000000000000))*(sj1));
IkReal x1035=((r10)*(sj6));
IkReal x1036=((cj6)*(r11));
IkReal x1037=((sj1)*(sj4));
IkReal x1038=((cj1)*(sj5));
IkReal x1039=((r11)*(sj6));
IkReal x1040=((sj1)*(x1039));
IkReal x1041=((IkReal(1.00000000000000))*(cj1)*(sj4));
if( IKabs(((gconst4)*(((((x1038)*(x1039)))+(((x1036)*(x1037)))+(((IkReal(-1.00000000000000))*(r12)*(x1032)*(x1034)))+(((IkReal(-1.00000000000000))*(x1033)*(x1038)))+(((x1031)*(x1040)))+(((cj5)*(x1030)))+(((x1035)*(x1037)))+(((IkReal(-1.00000000000000))*(x1031)*(x1033)*(x1034))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst4)*(((((cj5)*(r12)*(sj1)))+(((x1030)*(x1032)))+(((sj5)*(x1040)))+(((IkReal(-1.00000000000000))*(cj1)*(x1031)*(x1039)))+(((IkReal(-1.00000000000000))*(sj5)*(x1033)*(x1034)))+(((IkReal(-1.00000000000000))*(x1035)*(x1041)))+(((cj1)*(x1031)*(x1033)))+(((IkReal(-1.00000000000000))*(x1036)*(x1041))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j3array[0]=IKatan2(((gconst4)*(((((x1038)*(x1039)))+(((x1036)*(x1037)))+(((IkReal(-1.00000000000000))*(r12)*(x1032)*(x1034)))+(((IkReal(-1.00000000000000))*(x1033)*(x1038)))+(((x1031)*(x1040)))+(((cj5)*(x1030)))+(((x1035)*(x1037)))+(((IkReal(-1.00000000000000))*(x1031)*(x1033)*(x1034)))))), ((gconst4)*(((((cj5)*(r12)*(sj1)))+(((x1030)*(x1032)))+(((sj5)*(x1040)))+(((IkReal(-1.00000000000000))*(cj1)*(x1031)*(x1039)))+(((IkReal(-1.00000000000000))*(sj5)*(x1033)*(x1034)))+(((IkReal(-1.00000000000000))*(x1035)*(x1041)))+(((cj1)*(x1031)*(x1033)))+(((IkReal(-1.00000000000000))*(x1036)*(x1041)))))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[4];
IkReal x1042=IKcos(j3);
IkReal x1043=IKsin(j3);
IkReal x1044=((r11)*(sj6));
IkReal x1045=((IkReal(1.00000000000000))*(sj5));
IkReal x1046=((sj4)*(sj6));
IkReal x1047=((cj6)*(sj4));
IkReal x1048=((cj4)*(cj5));
IkReal x1049=((r01)*(sj6));
IkReal x1050=((IkReal(1.00000000000000))*(cj5));
IkReal x1051=((cj6)*(sj5));
IkReal x1052=((cj1)*(x1042));
IkReal x1053=((cj1)*(x1043));
IkReal x1054=((sj1)*(x1042));
IkReal x1055=((IkReal(1.00000000000000))*(sj1)*(x1043));
IkReal x1056=((IkReal(1.00000000000000))*(cj6)*(x1048));
evalcond[0]=((x1053)+(x1054)+(((IkReal(-1.00000000000000))*(x1044)*(x1045)))+(((IkReal(-1.00000000000000))*(r12)*(x1050)))+(((r10)*(x1051))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x1055)))+(((IkReal(-1.00000000000000))*(r02)*(x1050)))+(x1052)+(((IkReal(-1.00000000000000))*(x1045)*(x1049)))+(((r00)*(x1051))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x1055)))+(x1052)+(((r11)*(x1047)))+(((IkReal(-1.00000000000000))*(cj4)*(r12)*(x1045)))+(((IkReal(-1.00000000000000))*(r10)*(x1056)))+(((r10)*(x1046)))+(((x1044)*(x1048))));
evalcond[3]=((((IkReal(-1.00000000000000))*(r00)*(x1056)))+(((x1048)*(x1049)))+(((r01)*(x1047)))+(((r00)*(x1046)))+(((IkReal(-1.00000000000000))*(x1054)))+(((IkReal(-1.00000000000000))*(x1053)))+(((IkReal(-1.00000000000000))*(cj4)*(r02)*(x1045))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x1057=((cj5)*(r12));
IkReal x1058=((IkReal(1.00000000000000))*(sj1));
IkReal x1059=((sj1)*(sj5));
IkReal x1060=((cj6)*(r00));
IkReal x1061=((cj5)*(r02));
IkReal x1062=((r11)*(sj6));
IkReal x1063=((cj1)*(sj5));
IkReal x1064=((r01)*(sj5)*(sj6));
IkReal x1065=((cj6)*(r10)*(sj5));
if( IKabs(((gconst3)*(((((IkReal(-1.00000000000000))*(x1058)*(x1064)))+(((IkReal(-1.00000000000000))*(x1058)*(x1061)))+(((cj1)*(x1057)))+(((x1062)*(x1063)))+(((x1059)*(x1060)))+(((IkReal(-1.00000000000000))*(cj6)*(r10)*(x1063))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst3)*(((((IkReal(-1.00000000000000))*(x1060)*(x1063)))+(((IkReal(-1.00000000000000))*(x1058)*(x1065)))+(((r01)*(sj6)*(x1063)))+(((sj1)*(x1057)))+(((cj1)*(x1061)))+(((x1059)*(x1062))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j3array[0]=IKatan2(((gconst3)*(((((IkReal(-1.00000000000000))*(x1058)*(x1064)))+(((IkReal(-1.00000000000000))*(x1058)*(x1061)))+(((cj1)*(x1057)))+(((x1062)*(x1063)))+(((x1059)*(x1060)))+(((IkReal(-1.00000000000000))*(cj6)*(r10)*(x1063)))))), ((gconst3)*(((((IkReal(-1.00000000000000))*(x1060)*(x1063)))+(((IkReal(-1.00000000000000))*(x1058)*(x1065)))+(((r01)*(sj6)*(x1063)))+(((sj1)*(x1057)))+(((cj1)*(x1061)))+(((x1059)*(x1062)))))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[4];
IkReal x1066=IKcos(j3);
IkReal x1067=IKsin(j3);
IkReal x1068=((r11)*(sj6));
IkReal x1069=((IkReal(1.00000000000000))*(sj5));
IkReal x1070=((sj4)*(sj6));
IkReal x1071=((cj6)*(sj4));
IkReal x1072=((cj4)*(cj5));
IkReal x1073=((r01)*(sj6));
IkReal x1074=((IkReal(1.00000000000000))*(cj5));
IkReal x1075=((cj6)*(sj5));
IkReal x1076=((cj1)*(x1066));
IkReal x1077=((cj1)*(x1067));
IkReal x1078=((sj1)*(x1066));
IkReal x1079=((IkReal(1.00000000000000))*(sj1)*(x1067));
IkReal x1080=((IkReal(1.00000000000000))*(cj6)*(x1072));
evalcond[0]=((x1078)+(x1077)+(((IkReal(-1.00000000000000))*(r12)*(x1074)))+(((IkReal(-1.00000000000000))*(x1068)*(x1069)))+(((r10)*(x1075))));
evalcond[1]=((x1076)+(((IkReal(-1.00000000000000))*(r02)*(x1074)))+(((r00)*(x1075)))+(((IkReal(-1.00000000000000))*(x1069)*(x1073)))+(((IkReal(-1.00000000000000))*(x1079))));
evalcond[2]=((((x1068)*(x1072)))+(((IkReal(-1.00000000000000))*(cj4)*(r12)*(x1069)))+(x1076)+(((IkReal(-1.00000000000000))*(r10)*(x1080)))+(((r10)*(x1070)))+(((IkReal(-1.00000000000000))*(x1079)))+(((r11)*(x1071))));
evalcond[3]=((((IkReal(-1.00000000000000))*(cj4)*(r02)*(x1069)))+(((IkReal(-1.00000000000000))*(r00)*(x1080)))+(((r00)*(x1070)))+(((IkReal(-1.00000000000000))*(x1078)))+(((IkReal(-1.00000000000000))*(x1077)))+(((x1072)*(x1073)))+(((r01)*(x1071))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
IkReal x1081=((r02)*(sj5));
IkReal x1082=((r21)*(sj6));
IkReal x1083=((cj5)*(sj4));
IkReal x1084=((cj4)*(cj5));
IkReal x1085=((cj6)*(r20));
IkReal x1086=((IkReal(0.0405000000000000))*(r11));
IkReal x1087=((cj6)*(sj4));
IkReal x1088=((IkReal(0.265000000000000))*(sj5));
IkReal x1089=((cj5)*(r22));
IkReal x1090=((r11)*(sj6));
IkReal x1091=((IkReal(0.0405000000000000))*(cj4));
IkReal x1092=((cj6)*(r00));
IkReal x1093=((r12)*(sj5));
IkReal x1094=((IkReal(1.00000000000000))*(sj4));
IkReal x1095=((r20)*(sj6));
IkReal x1096=((IkReal(1.00000000000000))*(cj4));
IkReal x1097=((IkReal(0.0135000000000000))*(cj5));
IkReal x1098=((cj6)*(r10));
IkReal x1099=((r01)*(sj6));
IkReal x1100=((IkReal(0.0405000000000000))*(sj4));
IkReal x1101=((r22)*(sj5));
IkReal x1102=((r10)*(sj6));
IkReal x1103=((IkReal(0.265000000000000))*(cj5));
IkReal x1104=((r00)*(sj6));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.11022302462516e-16))+(j2)), IkReal(6.28318530717959))));
evalcond[1]=((((IkReal(-1.00000000000000))*(sj5)*(x1082)))+(((sj5)*(x1085)))+(((IkReal(-1.00000000000000))*(x1089))));
evalcond[2]=((IkReal(-1.00000000000000))+(((x1082)*(x1083)))+(((IkReal(-1.00000000000000))*(x1095)*(x1096)))+(((IkReal(-1.00000000000000))*(x1094)*(x1101)))+(((IkReal(-1.00000000000000))*(cj6)*(r21)*(x1096)))+(((IkReal(-1.00000000000000))*(x1083)*(x1085))));
evalcond[3]=((((x1082)*(x1084)))+(((sj4)*(x1095)))+(((IkReal(-1.00000000000000))*(x1084)*(x1085)))+(((IkReal(-1.00000000000000))*(x1096)*(x1101)))+(((r21)*(x1087))));
evalcond[4]=((((x1083)*(x1099)))+(((IkReal(-1.00000000000000))*(x1083)*(x1092)))+(((IkReal(-1.00000000000000))*(x1081)*(x1094)))+(((IkReal(-1.00000000000000))*(cj6)*(r01)*(x1096)))+(((IkReal(-1.00000000000000))*(x1096)*(x1104))));
evalcond[5]=((((x1083)*(x1090)))+(((IkReal(-1.00000000000000))*(x1083)*(x1098)))+(((IkReal(-1.00000000000000))*(cj6)*(r11)*(x1096)))+(((IkReal(-1.00000000000000))*(x1093)*(x1094)))+(((IkReal(-1.00000000000000))*(x1096)*(x1102))));
evalcond[6]=((((IkReal(-1.00000000000000))*(x1091)*(x1101)))+(((x1082)*(x1088)))+(((x1085)*(x1097)))+(((IkReal(0.0135000000000000))*(x1101)))+(((IkReal(0.0270000000000000))*(x1082)))+(((IkReal(0.265000000000000))*(x1089)))+(((IkReal(-0.0405000000000000))*(x1084)*(x1085)))+(((IkReal(-1.00000000000000))*(pz)))+(((IkReal(-0.0270000000000000))*(x1085)))+(((IkReal(-1.00000000000000))*(x1085)*(x1088)))+(((IkReal(-1.00000000000000))*(x1082)*(x1097)))+(((IkReal(0.0405000000000000))*(r21)*(x1087)))+(((IkReal(0.0405000000000000))*(x1082)*(x1084)))+(((x1095)*(x1100))));
evalcond[7]=((((r02)*(x1103)))+(((IkReal(0.0405000000000000))*(r01)*(x1087)))+(((IkReal(-1.00000000000000))*(x1088)*(x1092)))+(((IkReal(-1.00000000000000))*(x1097)*(x1099)))+(((IkReal(0.0405000000000000))*(x1084)*(x1099)))+(((IkReal(-1.00000000000000))*(x1081)*(x1091)))+(((IkReal(0.0135000000000000))*(x1081)))+(((x1088)*(x1099)))+(((IkReal(-0.0105000000000000))*(cj1)))+(((IkReal(-0.0405000000000000))*(x1084)*(x1092)))+(((IkReal(-1.00000000000000))*(px)))+(((IkReal(0.246500000000000))*(sj1)))+(((x1092)*(x1097)))+(((x1100)*(x1104)))+(((IkReal(-0.0270000000000000))*(x1092)))+(((IkReal(0.0270000000000000))*(x1099))));
evalcond[8]=((((sj6)*(x1084)*(x1086)))+(((IkReal(-1.00000000000000))*(x1091)*(x1093)))+(((IkReal(-1.00000000000000))*(x1088)*(x1098)))+(((IkReal(-1.00000000000000))*(x1090)*(x1097)))+(((IkReal(-0.246500000000000))*(cj1)))+(((x1088)*(x1090)))+(((IkReal(-0.0405000000000000))*(x1084)*(x1098)))+(((IkReal(-1.00000000000000))*(py)))+(((r12)*(x1103)))+(((x1100)*(x1102)))+(((IkReal(-0.0105000000000000))*(sj1)))+(((IkReal(-0.0270000000000000))*(x1098)))+(((x1086)*(x1087)))+(((IkReal(0.0135000000000000))*(x1093)))+(((IkReal(0.0270000000000000))*(x1090)))+(((x1097)*(x1098))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst5;
gconst5=IKsign((((sj1)*(sj1))+((cj1)*(cj1))));
dummyeval[0]=(((sj1)*(sj1))+((cj1)*(cj1)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst6;
gconst6=IKsign(((((IkReal(-1.00000000000000))*((sj1)*(sj1))))+(((IkReal(-1.00000000000000))*((cj1)*(cj1))))));
dummyeval[0]=((((IkReal(-1.00000000000000))*((sj1)*(sj1))))+(((IkReal(-1.00000000000000))*((cj1)*(cj1)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x1105=((cj4)*(cj5));
IkReal x1106=((r11)*(sj6));
IkReal x1107=((sj1)*(sj5));
IkReal x1108=((cj1)*(r10));
IkReal x1109=((sj4)*(sj6));
IkReal x1110=((cj5)*(r12));
IkReal x1111=((IkReal(1.00000000000000))*(cj1));
IkReal x1112=((IkReal(1.00000000000000))*(cj6)*(r10));
IkReal x1113=((IkReal(1.00000000000000))*(cj4)*(r12));
IkReal x1114=((cj6)*(r11)*(sj4));
if( IKabs(((gconst6)*(((((sj1)*(x1105)*(x1106)))+(((cj6)*(sj5)*(x1108)))+(((IkReal(-1.00000000000000))*(sj1)*(x1105)*(x1112)))+(((r10)*(sj1)*(x1109)))+(((IkReal(-1.00000000000000))*(x1107)*(x1113)))+(((IkReal(-1.00000000000000))*(sj5)*(x1106)*(x1111)))+(((sj1)*(x1114)))+(((IkReal(-1.00000000000000))*(x1110)*(x1111))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst6)*(((((x1108)*(x1109)))+(((cj1)*(x1105)*(x1106)))+(((IkReal(-1.00000000000000))*(cj6)*(x1105)*(x1108)))+(((cj1)*(x1114)))+(((IkReal(-1.00000000000000))*(x1107)*(x1112)))+(((IkReal(-1.00000000000000))*(cj4)*(r12)*(sj5)*(x1111)))+(((sj1)*(x1110)))+(((x1106)*(x1107))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j3array[0]=IKatan2(((gconst6)*(((((sj1)*(x1105)*(x1106)))+(((cj6)*(sj5)*(x1108)))+(((IkReal(-1.00000000000000))*(sj1)*(x1105)*(x1112)))+(((r10)*(sj1)*(x1109)))+(((IkReal(-1.00000000000000))*(x1107)*(x1113)))+(((IkReal(-1.00000000000000))*(sj5)*(x1106)*(x1111)))+(((sj1)*(x1114)))+(((IkReal(-1.00000000000000))*(x1110)*(x1111)))))), ((gconst6)*(((((x1108)*(x1109)))+(((cj1)*(x1105)*(x1106)))+(((IkReal(-1.00000000000000))*(cj6)*(x1105)*(x1108)))+(((cj1)*(x1114)))+(((IkReal(-1.00000000000000))*(x1107)*(x1112)))+(((IkReal(-1.00000000000000))*(cj4)*(r12)*(sj5)*(x1111)))+(((sj1)*(x1110)))+(((x1106)*(x1107)))))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[4];
IkReal x1115=IKcos(j3);
IkReal x1116=IKsin(j3);
IkReal x1117=((r11)*(sj6));
IkReal x1118=((IkReal(1.00000000000000))*(sj5));
IkReal x1119=((sj4)*(sj6));
IkReal x1120=((cj6)*(sj4));
IkReal x1121=((cj4)*(cj5));
IkReal x1122=((r01)*(sj6));
IkReal x1123=((IkReal(1.00000000000000))*(cj5));
IkReal x1124=((cj6)*(sj5));
IkReal x1125=((cj1)*(x1116));
IkReal x1126=((sj1)*(x1116));
IkReal x1127=((cj1)*(x1115));
IkReal x1128=((IkReal(1.00000000000000))*(sj1)*(x1115));
IkReal x1129=((IkReal(1.00000000000000))*(cj6)*(x1121));
evalcond[0]=((x1125)+(((r10)*(x1124)))+(((IkReal(-1.00000000000000))*(r12)*(x1123)))+(((IkReal(-1.00000000000000))*(x1128)))+(((IkReal(-1.00000000000000))*(x1117)*(x1118))));
evalcond[1]=((((r00)*(x1124)))+(((IkReal(-1.00000000000000))*(x1126)))+(((IkReal(-1.00000000000000))*(x1127)))+(((IkReal(-1.00000000000000))*(r02)*(x1123)))+(((IkReal(-1.00000000000000))*(x1118)*(x1122))));
evalcond[2]=((x1126)+(x1127)+(((IkReal(-1.00000000000000))*(r10)*(x1129)))+(((IkReal(-1.00000000000000))*(cj4)*(r12)*(x1118)))+(((x1117)*(x1121)))+(((r11)*(x1120)))+(((r10)*(x1119))));
evalcond[3]=((x1125)+(((IkReal(-1.00000000000000))*(cj4)*(r02)*(x1118)))+(((r01)*(x1120)))+(((x1121)*(x1122)))+(((r00)*(x1119)))+(((IkReal(-1.00000000000000))*(x1128)))+(((IkReal(-1.00000000000000))*(r00)*(x1129))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x1130=((cj5)*(r12));
IkReal x1131=((IkReal(1.00000000000000))*(sj1));
IkReal x1132=((cj5)*(r02));
IkReal x1133=((IkReal(1.00000000000000))*(cj1));
IkReal x1134=((cj6)*(sj5));
IkReal x1135=((r01)*(sj5)*(sj6));
IkReal x1136=((sj1)*(x1134));
IkReal x1137=((r11)*(sj5)*(sj6));
if( IKabs(((gconst5)*(((((r00)*(x1136)))+(((IkReal(-1.00000000000000))*(x1131)*(x1132)))+(((IkReal(-1.00000000000000))*(x1131)*(x1135)))+(((cj1)*(x1137)))+(((cj1)*(x1130)))+(((IkReal(-1.00000000000000))*(r10)*(x1133)*(x1134))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst5)*(((((r10)*(x1136)))+(((IkReal(-1.00000000000000))*(x1131)*(x1137)))+(((IkReal(-1.00000000000000))*(x1130)*(x1131)))+(((IkReal(-1.00000000000000))*(x1132)*(x1133)))+(((cj1)*(r00)*(x1134)))+(((IkReal(-1.00000000000000))*(x1133)*(x1135))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j3array[0]=IKatan2(((gconst5)*(((((r00)*(x1136)))+(((IkReal(-1.00000000000000))*(x1131)*(x1132)))+(((IkReal(-1.00000000000000))*(x1131)*(x1135)))+(((cj1)*(x1137)))+(((cj1)*(x1130)))+(((IkReal(-1.00000000000000))*(r10)*(x1133)*(x1134)))))), ((gconst5)*(((((r10)*(x1136)))+(((IkReal(-1.00000000000000))*(x1131)*(x1137)))+(((IkReal(-1.00000000000000))*(x1130)*(x1131)))+(((IkReal(-1.00000000000000))*(x1132)*(x1133)))+(((cj1)*(r00)*(x1134)))+(((IkReal(-1.00000000000000))*(x1133)*(x1135)))))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[4];
IkReal x1138=IKcos(j3);
IkReal x1139=IKsin(j3);
IkReal x1140=((r11)*(sj6));
IkReal x1141=((IkReal(1.00000000000000))*(sj5));
IkReal x1142=((sj4)*(sj6));
IkReal x1143=((cj6)*(sj4));
IkReal x1144=((cj4)*(cj5));
IkReal x1145=((r01)*(sj6));
IkReal x1146=((IkReal(1.00000000000000))*(cj5));
IkReal x1147=((cj6)*(sj5));
IkReal x1148=((cj1)*(x1139));
IkReal x1149=((sj1)*(x1139));
IkReal x1150=((cj1)*(x1138));
IkReal x1151=((IkReal(1.00000000000000))*(sj1)*(x1138));
IkReal x1152=((IkReal(1.00000000000000))*(cj6)*(x1144));
evalcond[0]=((((IkReal(-1.00000000000000))*(x1140)*(x1141)))+(x1148)+(((IkReal(-1.00000000000000))*(x1151)))+(((IkReal(-1.00000000000000))*(r12)*(x1146)))+(((r10)*(x1147))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x1141)*(x1145)))+(((IkReal(-1.00000000000000))*(x1149)))+(((IkReal(-1.00000000000000))*(r02)*(x1146)))+(((IkReal(-1.00000000000000))*(x1150)))+(((r00)*(x1147))));
evalcond[2]=((((x1140)*(x1144)))+(x1149)+(x1150)+(((r11)*(x1143)))+(((IkReal(-1.00000000000000))*(cj4)*(r12)*(x1141)))+(((IkReal(-1.00000000000000))*(r10)*(x1152)))+(((r10)*(x1142))));
evalcond[3]=((x1148)+(((IkReal(-1.00000000000000))*(cj4)*(r02)*(x1141)))+(((IkReal(-1.00000000000000))*(x1151)))+(((IkReal(-1.00000000000000))*(r00)*(x1152)))+(((r01)*(x1143)))+(((x1144)*(x1145)))+(((r00)*(x1142))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
IkReal x1153=((r02)*(sj5));
IkReal x1154=((cj5)*(sj6));
IkReal x1155=((r21)*(sj4));
IkReal x1156=((IkReal(0.0405000000000000))*(cj4));
IkReal x1157=((IkReal(0.0405000000000000))*(sj4));
IkReal x1158=((cj6)*(r11));
IkReal x1159=((IkReal(0.265000000000000))*(sj5));
IkReal x1160=((r21)*(sj6));
IkReal x1161=((cj6)*(r10));
IkReal x1162=((IkReal(0.265000000000000))*(cj5));
IkReal x1163=((r11)*(sj6));
IkReal x1164=((cj6)*(r00));
IkReal x1165=((r12)*(sj5));
IkReal x1166=((r20)*(sj6));
IkReal x1167=((IkReal(1.00000000000000))*(cj4));
IkReal x1168=((IkReal(0.0135000000000000))*(cj5));
IkReal x1169=((cj6)*(r20));
IkReal x1170=((r10)*(sj6));
IkReal x1171=((IkReal(1.00000000000000))*(sj4));
IkReal x1172=((r22)*(sj5));
IkReal x1173=((r01)*(sj6));
IkReal x1174=((r00)*(sj6));
IkReal x1175=((cj6)*(r01));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.57079632679490))+(j2)), IkReal(6.28318530717959))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x1166)*(x1167)))+(((IkReal(-1.00000000000000))*(cj5)*(x1169)*(x1171)))+(((IkReal(-1.00000000000000))*(x1171)*(x1172)))+(((IkReal(-1.00000000000000))*(cj6)*(r21)*(x1167)))+(((x1154)*(x1155))));
evalcond[2]=((((IkReal(-1.00000000000000))*(cj5)*(x1164)*(x1171)))+(((IkReal(-1.00000000000000))*(x1153)*(x1171)))+(((IkReal(-1.00000000000000))*(x1167)*(x1175)))+(((IkReal(-1.00000000000000))*(x1167)*(x1174)))+(((r01)*(sj4)*(x1154)))+(((IkReal(-1.00000000000000))*(cj1))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x1165)*(x1171)))+(((IkReal(-1.00000000000000))*(cj5)*(x1161)*(x1171)))+(((IkReal(-1.00000000000000))*(sj1)))+(((IkReal(-1.00000000000000))*(x1158)*(x1167)))+(((r11)*(sj4)*(x1154)))+(((IkReal(-1.00000000000000))*(x1167)*(x1170))));
evalcond[4]=((IkReal(0.0405000000000000))+(((x1159)*(x1160)))+(((x1168)*(x1169)))+(((IkReal(-1.00000000000000))*(x1159)*(x1169)))+(((r21)*(x1154)*(x1156)))+(((IkReal(-1.00000000000000))*(cj5)*(x1156)*(x1169)))+(((IkReal(-0.0270000000000000))*(x1169)))+(((IkReal(-0.0135000000000000))*(r21)*(x1154)))+(((IkReal(0.0270000000000000))*(x1160)))+(((IkReal(0.0135000000000000))*(x1172)))+(((IkReal(0.0405000000000000))*(cj6)*(x1155)))+(((x1157)*(x1166)))+(((IkReal(-1.00000000000000))*(pz)))+(((r22)*(x1162)))+(((IkReal(-1.00000000000000))*(x1156)*(x1172))));
evalcond[5]=((((IkReal(-0.0135000000000000))*(r01)*(x1154)))+(((r01)*(x1154)*(x1156)))+(((x1164)*(x1168)))+(((r02)*(x1162)))+(((IkReal(-1.00000000000000))*(x1159)*(x1164)))+(((IkReal(-1.00000000000000))*(cj5)*(x1156)*(x1164)))+(((IkReal(-0.0270000000000000))*(x1164)))+(((IkReal(0.0270000000000000))*(x1173)))+(((IkReal(0.0300000000000000))*(cj1)))+(((x1157)*(x1175)))+(((x1157)*(x1174)))+(((IkReal(-1.00000000000000))*(px)))+(((IkReal(0.246500000000000))*(sj1)))+(((IkReal(0.0135000000000000))*(x1153)))+(((IkReal(-1.00000000000000))*(x1153)*(x1156)))+(((x1159)*(x1173))));
evalcond[6]=((((IkReal(-1.00000000000000))*(x1156)*(x1165)))+(((x1159)*(x1163)))+(((IkReal(-0.0135000000000000))*(r11)*(x1154)))+(((IkReal(-1.00000000000000))*(x1159)*(x1161)))+(((IkReal(0.0300000000000000))*(sj1)))+(((IkReal(-1.00000000000000))*(cj5)*(x1156)*(x1161)))+(((IkReal(-0.0270000000000000))*(x1161)))+(((IkReal(-0.246500000000000))*(cj1)))+(((IkReal(0.0270000000000000))*(x1163)))+(((IkReal(0.0135000000000000))*(x1165)))+(((x1157)*(x1170)))+(((IkReal(-1.00000000000000))*(py)))+(((r12)*(x1162)))+(((r11)*(x1154)*(x1156)))+(((x1157)*(x1158)))+(((x1161)*(x1168))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x1176=((r21)*(sj6));
IkReal x1177=((cj4)*(cj5));
IkReal x1178=((IkReal(1.00000000000000))*(cj6)*(r20));
if( IKabs(((((x1176)*(x1177)))+(((IkReal(-1.00000000000000))*(cj4)*(r22)*(sj5)))+(((cj6)*(r21)*(sj4)))+(((IkReal(-1.00000000000000))*(x1177)*(x1178)))+(((r20)*(sj4)*(sj6))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(-1.00000000000000))*(sj5)*(x1178)))+(((cj5)*(r22)))+(((sj5)*(x1176))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((x1176)*(x1177)))+(((IkReal(-1.00000000000000))*(cj4)*(r22)*(sj5)))+(((cj6)*(r21)*(sj4)))+(((IkReal(-1.00000000000000))*(x1177)*(x1178)))+(((r20)*(sj4)*(sj6)))))+IKsqr(((((IkReal(-1.00000000000000))*(sj5)*(x1178)))+(((cj5)*(r22)))+(((sj5)*(x1176)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j3array[0]=IKatan2(((((x1176)*(x1177)))+(((IkReal(-1.00000000000000))*(cj4)*(r22)*(sj5)))+(((cj6)*(r21)*(sj4)))+(((IkReal(-1.00000000000000))*(x1177)*(x1178)))+(((r20)*(sj4)*(sj6)))), ((((IkReal(-1.00000000000000))*(sj5)*(x1178)))+(((cj5)*(r22)))+(((sj5)*(x1176)))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[6];
IkReal x1179=IKsin(j3);
IkReal x1180=IKcos(j3);
IkReal x1181=((sj4)*(sj6));
IkReal x1182=((IkReal(1.00000000000000))*(cj5));
IkReal x1183=((r11)*(sj6));
IkReal x1184=((IkReal(1.00000000000000))*(sj5));
IkReal x1185=((cj4)*(cj6));
IkReal x1186=((cj4)*(cj5));
IkReal x1187=((r21)*(sj6));
IkReal x1188=((cj6)*(sj4));
IkReal x1189=((r01)*(sj6));
IkReal x1190=((cj6)*(sj5));
IkReal x1191=((IkReal(1.00000000000000))*(x1179));
evalcond[0]=((x1180)+(((IkReal(-1.00000000000000))*(x1184)*(x1187)))+(((IkReal(-1.00000000000000))*(r22)*(x1182)))+(((r20)*(x1190))));
evalcond[1]=((((cj1)*(x1179)))+(((r10)*(x1190)))+(((IkReal(-1.00000000000000))*(x1183)*(x1184)))+(((IkReal(-1.00000000000000))*(r12)*(x1182))));
evalcond[2]=((((r00)*(x1190)))+(((IkReal(-1.00000000000000))*(x1184)*(x1189)))+(((IkReal(-1.00000000000000))*(r02)*(x1182)))+(((IkReal(-1.00000000000000))*(sj1)*(x1191))));
evalcond[3]=((((x1186)*(x1187)))+(((IkReal(-1.00000000000000))*(x1191)))+(((IkReal(-1.00000000000000))*(cj4)*(r22)*(x1184)))+(((r21)*(x1188)))+(((IkReal(-1.00000000000000))*(r20)*(x1182)*(x1185)))+(((r20)*(x1181))));
evalcond[4]=((((x1183)*(x1186)))+(((r10)*(x1181)))+(((IkReal(-1.00000000000000))*(cj4)*(r12)*(x1184)))+(((IkReal(-1.00000000000000))*(r10)*(x1182)*(x1185)))+(((r11)*(x1188)))+(((cj1)*(x1180))));
evalcond[5]=((((x1186)*(x1189)))+(((r00)*(x1181)))+(((r01)*(x1188)))+(((IkReal(-1.00000000000000))*(r00)*(x1182)*(x1185)))+(((IkReal(-1.00000000000000))*(sj1)*(x1180)))+(((IkReal(-1.00000000000000))*(cj4)*(r02)*(x1184))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
IkReal x1192=((r02)*(sj5));
IkReal x1193=((cj5)*(sj6));
IkReal x1194=((r21)*(sj4));
IkReal x1195=((IkReal(0.0405000000000000))*(cj4));
IkReal x1196=((IkReal(0.0405000000000000))*(sj4));
IkReal x1197=((cj6)*(r11));
IkReal x1198=((IkReal(0.265000000000000))*(sj5));
IkReal x1199=((r21)*(sj6));
IkReal x1200=((cj6)*(r10));
IkReal x1201=((IkReal(0.265000000000000))*(cj5));
IkReal x1202=((r11)*(sj6));
IkReal x1203=((cj6)*(r00));
IkReal x1204=((r12)*(sj5));
IkReal x1205=((IkReal(1.00000000000000))*(sj4));
IkReal x1206=((r20)*(sj6));
IkReal x1207=((IkReal(1.00000000000000))*(cj4));
IkReal x1208=((IkReal(0.0135000000000000))*(cj5));
IkReal x1209=((cj6)*(r20));
IkReal x1210=((r10)*(sj6));
IkReal x1211=((r22)*(sj5));
IkReal x1212=((r01)*(sj6));
IkReal x1213=((r00)*(sj6));
IkReal x1214=((cj6)*(r01));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(4.71238898038469))+(j2)), IkReal(6.28318530717959))));
evalcond[1]=((((IkReal(-1.00000000000000))*(cj6)*(r21)*(x1207)))+(((IkReal(-1.00000000000000))*(cj5)*(x1205)*(x1209)))+(((IkReal(-1.00000000000000))*(x1205)*(x1211)))+(((x1193)*(x1194)))+(((IkReal(-1.00000000000000))*(x1206)*(x1207))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x1207)*(x1214)))+(((IkReal(-1.00000000000000))*(x1207)*(x1213)))+(cj1)+(((r01)*(sj4)*(x1193)))+(((IkReal(-1.00000000000000))*(x1192)*(x1205)))+(((IkReal(-1.00000000000000))*(cj5)*(x1203)*(x1205))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x1204)*(x1205)))+(((IkReal(-1.00000000000000))*(x1207)*(x1210)))+(sj1)+(((IkReal(-1.00000000000000))*(cj5)*(x1200)*(x1205)))+(((IkReal(-1.00000000000000))*(x1197)*(x1207)))+(((r11)*(sj4)*(x1193))));
evalcond[4]=((IkReal(-0.0405000000000000))+(((IkReal(-1.00000000000000))*(cj5)*(x1195)*(x1209)))+(((IkReal(-0.0135000000000000))*(r21)*(x1193)))+(((IkReal(-0.0270000000000000))*(x1209)))+(((x1198)*(x1199)))+(((IkReal(-1.00000000000000))*(pz)))+(((x1208)*(x1209)))+(((r21)*(x1193)*(x1195)))+(((IkReal(0.0405000000000000))*(cj6)*(x1194)))+(((IkReal(0.0135000000000000))*(x1211)))+(((IkReal(-1.00000000000000))*(x1195)*(x1211)))+(((x1196)*(x1206)))+(((IkReal(0.0270000000000000))*(x1199)))+(((r22)*(x1201)))+(((IkReal(-1.00000000000000))*(x1198)*(x1209))));
evalcond[5]=((((IkReal(-1.00000000000000))*(cj5)*(x1195)*(x1203)))+(((IkReal(0.0270000000000000))*(x1212)))+(((IkReal(-0.0270000000000000))*(x1203)))+(((IkReal(-0.0135000000000000))*(r01)*(x1193)))+(((r01)*(x1193)*(x1195)))+(((IkReal(0.0300000000000000))*(cj1)))+(((IkReal(-1.00000000000000))*(px)))+(((x1203)*(x1208)))+(((IkReal(0.246500000000000))*(sj1)))+(((x1196)*(x1213)))+(((x1196)*(x1214)))+(((x1198)*(x1212)))+(((IkReal(-1.00000000000000))*(x1192)*(x1195)))+(((r02)*(x1201)))+(((IkReal(0.0135000000000000))*(x1192)))+(((IkReal(-1.00000000000000))*(x1198)*(x1203))));
evalcond[6]=((((IkReal(-1.00000000000000))*(cj5)*(x1195)*(x1200)))+(((IkReal(0.0300000000000000))*(sj1)))+(((IkReal(-0.246500000000000))*(cj1)))+(((IkReal(-0.0270000000000000))*(x1200)))+(((r12)*(x1201)))+(((IkReal(0.0135000000000000))*(x1204)))+(((IkReal(-1.00000000000000))*(py)))+(((x1200)*(x1208)))+(((x1196)*(x1197)))+(((x1196)*(x1210)))+(((r11)*(x1193)*(x1195)))+(((IkReal(-0.0135000000000000))*(r11)*(x1193)))+(((IkReal(-1.00000000000000))*(x1195)*(x1204)))+(((IkReal(0.0270000000000000))*(x1202)))+(((x1198)*(x1202)))+(((IkReal(-1.00000000000000))*(x1198)*(x1200))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x1215=((cj4)*(cj5));
IkReal x1216=((IkReal(1.00000000000000))*(sj6));
IkReal x1217=((cj6)*(r20));
if( IKabs(((((IkReal(-1.00000000000000))*(cj6)*(r21)*(sj4)))+(((cj4)*(r22)*(sj5)))+(((IkReal(-1.00000000000000))*(r20)*(sj4)*(x1216)))+(((IkReal(-1.00000000000000))*(r21)*(x1215)*(x1216)))+(((x1215)*(x1217))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((sj5)*(x1217)))+(((IkReal(-1.00000000000000))*(cj5)*(r22)))+(((IkReal(-1.00000000000000))*(r21)*(sj5)*(x1216))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IkReal(-1.00000000000000))*(cj6)*(r21)*(sj4)))+(((cj4)*(r22)*(sj5)))+(((IkReal(-1.00000000000000))*(r20)*(sj4)*(x1216)))+(((IkReal(-1.00000000000000))*(r21)*(x1215)*(x1216)))+(((x1215)*(x1217)))))+IKsqr(((((sj5)*(x1217)))+(((IkReal(-1.00000000000000))*(cj5)*(r22)))+(((IkReal(-1.00000000000000))*(r21)*(sj5)*(x1216)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j3array[0]=IKatan2(((((IkReal(-1.00000000000000))*(cj6)*(r21)*(sj4)))+(((cj4)*(r22)*(sj5)))+(((IkReal(-1.00000000000000))*(r20)*(sj4)*(x1216)))+(((IkReal(-1.00000000000000))*(r21)*(x1215)*(x1216)))+(((x1215)*(x1217)))), ((((sj5)*(x1217)))+(((IkReal(-1.00000000000000))*(cj5)*(r22)))+(((IkReal(-1.00000000000000))*(r21)*(sj5)*(x1216)))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[6];
IkReal x1218=IKsin(j3);
IkReal x1219=IKcos(j3);
IkReal x1220=((sj4)*(sj6));
IkReal x1221=((IkReal(1.00000000000000))*(cj5));
IkReal x1222=((cj4)*(cj6));
IkReal x1223=((r11)*(sj6));
IkReal x1224=((IkReal(1.00000000000000))*(sj5));
IkReal x1225=((cj6)*(sj4));
IkReal x1226=((cj4)*(cj5));
IkReal x1227=((r21)*(sj6));
IkReal x1228=((r01)*(sj6));
IkReal x1229=((cj6)*(sj5));
IkReal x1230=((IkReal(1.00000000000000))*(x1219));
evalcond[0]=((((r20)*(x1229)))+(((IkReal(-1.00000000000000))*(x1224)*(x1227)))+(((IkReal(-1.00000000000000))*(x1230)))+(((IkReal(-1.00000000000000))*(r22)*(x1221))));
evalcond[1]=((((IkReal(-1.00000000000000))*(r12)*(x1221)))+(((r10)*(x1229)))+(((cj1)*(x1218)))+(((IkReal(-1.00000000000000))*(x1223)*(x1224))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x1224)*(x1228)))+(((r00)*(x1229)))+(((IkReal(-1.00000000000000))*(sj1)*(x1218)))+(((IkReal(-1.00000000000000))*(r02)*(x1221))));
evalcond[3]=((((IkReal(-1.00000000000000))*(r20)*(x1221)*(x1222)))+(((r20)*(x1220)))+(x1218)+(((x1226)*(x1227)))+(((r21)*(x1225)))+(((IkReal(-1.00000000000000))*(cj4)*(r22)*(x1224))));
evalcond[4]=((((x1223)*(x1226)))+(((IkReal(-1.00000000000000))*(r10)*(x1221)*(x1222)))+(((r10)*(x1220)))+(((cj1)*(x1219)))+(((r11)*(x1225)))+(((IkReal(-1.00000000000000))*(cj4)*(r12)*(x1224))));
evalcond[5]=((((r01)*(x1225)))+(((r00)*(x1220)))+(((IkReal(-1.00000000000000))*(cj4)*(r02)*(x1224)))+(((x1226)*(x1228)))+(((IkReal(-1.00000000000000))*(r00)*(x1221)*(x1222)))+(((IkReal(-1.00000000000000))*(sj1)*(x1230))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}
}
}
}
}
}

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x1231=((IKabs(sj2) != 0)?((IkReal)1/(sj2)):(IkReal)1.0e30);
IkReal x1232=((cj5)*(r22));
IkReal x1233=((IkReal(1.00000000000000))*(sj5));
IkReal x1234=((r21)*(sj6));
IkReal x1235=((cj2)*(sj1));
IkReal x1236=((cj6)*(r20));
if( IKabs(((x1231)*(((IKabs(cj1) != 0)?((IkReal)1/(cj1)):(IkReal)1.0e30))*(((((cj5)*(r12)*(sj2)))+(((IkReal(-1.00000000000000))*(x1232)*(x1235)))+(((IkReal(-1.00000000000000))*(x1233)*(x1234)*(x1235)))+(((sj5)*(x1235)*(x1236)))+(((IkReal(-1.00000000000000))*(cj6)*(r10)*(sj2)*(x1233)))+(((r11)*(sj2)*(sj5)*(sj6))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((x1231)*(((x1232)+(((sj5)*(x1234)))+(((IkReal(-1.00000000000000))*(x1233)*(x1236))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((x1231)*(((IKabs(cj1) != 0)?((IkReal)1/(cj1)):(IkReal)1.0e30))*(((((cj5)*(r12)*(sj2)))+(((IkReal(-1.00000000000000))*(x1232)*(x1235)))+(((IkReal(-1.00000000000000))*(x1233)*(x1234)*(x1235)))+(((sj5)*(x1235)*(x1236)))+(((IkReal(-1.00000000000000))*(cj6)*(r10)*(sj2)*(x1233)))+(((r11)*(sj2)*(sj5)*(sj6)))))))+IKsqr(((x1231)*(((x1232)+(((sj5)*(x1234)))+(((IkReal(-1.00000000000000))*(x1233)*(x1236)))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j3array[0]=IKatan2(((x1231)*(((IKabs(cj1) != 0)?((IkReal)1/(cj1)):(IkReal)1.0e30))*(((((cj5)*(r12)*(sj2)))+(((IkReal(-1.00000000000000))*(x1232)*(x1235)))+(((IkReal(-1.00000000000000))*(x1233)*(x1234)*(x1235)))+(((sj5)*(x1235)*(x1236)))+(((IkReal(-1.00000000000000))*(cj6)*(r10)*(sj2)*(x1233)))+(((r11)*(sj2)*(sj5)*(sj6)))))), ((x1231)*(((x1232)+(((sj5)*(x1234)))+(((IkReal(-1.00000000000000))*(x1233)*(x1236)))))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[6];
IkReal x1237=IKcos(j3);
IkReal x1238=IKsin(j3);
IkReal x1239=((IkReal(1.00000000000000))*(cj5));
IkReal x1240=((r11)*(sj6));
IkReal x1241=((IkReal(1.00000000000000))*(sj5));
IkReal x1242=((sj4)*(sj6));
IkReal x1243=((cj2)*(sj1));
IkReal x1244=((cj6)*(sj4));
IkReal x1245=((cj4)*(cj5));
IkReal x1246=((r01)*(sj6));
IkReal x1247=((r21)*(sj6));
IkReal x1248=((cj6)*(sj5));
IkReal x1249=((cj1)*(x1237));
IkReal x1250=((cj1)*(x1238));
IkReal x1251=((IkReal(1.00000000000000))*(x1238));
IkReal x1252=((cj4)*(cj6)*(x1239));
evalcond[0]=((((sj2)*(x1237)))+(((r20)*(x1248)))+(((IkReal(-1.00000000000000))*(x1241)*(x1247)))+(((IkReal(-1.00000000000000))*(r22)*(x1239))));
evalcond[1]=((x1250)+(((IkReal(-1.00000000000000))*(r12)*(x1239)))+(((IkReal(-1.00000000000000))*(x1240)*(x1241)))+(((r10)*(x1248)))+(((x1237)*(x1243))));
evalcond[2]=((((IkReal(-1.00000000000000))*(sj1)*(x1251)))+(((r00)*(x1248)))+(((IkReal(-1.00000000000000))*(x1241)*(x1246)))+(((cj2)*(x1249)))+(((IkReal(-1.00000000000000))*(r02)*(x1239))));
evalcond[3]=((((IkReal(-1.00000000000000))*(r20)*(x1252)))+(((r20)*(x1242)))+(((IkReal(-1.00000000000000))*(sj2)*(x1251)))+(((x1245)*(x1247)))+(((r21)*(x1244)))+(((IkReal(-1.00000000000000))*(cj4)*(r22)*(x1241))));
evalcond[4]=((x1249)+(((x1240)*(x1245)))+(((r11)*(x1244)))+(((r10)*(x1242)))+(((IkReal(-1.00000000000000))*(cj4)*(r12)*(x1241)))+(((IkReal(-1.00000000000000))*(x1243)*(x1251)))+(((IkReal(-1.00000000000000))*(r10)*(x1252))));
evalcond[5]=((((IkReal(-1.00000000000000))*(r00)*(x1252)))+(((IkReal(-1.00000000000000))*(cj2)*(x1250)))+(((r01)*(x1244)))+(((r00)*(x1242)))+(((IkReal(-1.00000000000000))*(cj4)*(r02)*(x1241)))+(((x1245)*(x1246)))+(((IkReal(-1.00000000000000))*(sj1)*(x1237))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x1253=(cj1)*(cj1);
IkReal x1254=(sj1)*(sj1);
IkReal x1255=((cj5)*(r12));
IkReal x1256=((IkReal(1.00000000000000))*(sj1));
IkReal x1257=((sj1)*(sj5));
IkReal x1258=((cj6)*(r00));
IkReal x1259=((cj5)*(r02));
IkReal x1260=((r11)*(sj6));
IkReal x1261=((cj1)*(sj5));
IkReal x1262=((r01)*(sj5)*(sj6));
IkReal x1263=((cj6)*(r10)*(sj5));
if( IKabs(((((IKabs(((x1254)+(x1253))) != 0)?((IkReal)1/(((x1254)+(x1253)))):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(x1256)*(x1259)))+(((IkReal(-1.00000000000000))*(x1256)*(x1262)))+(((x1260)*(x1261)))+(((IkReal(-1.00000000000000))*(cj6)*(r10)*(x1261)))+(((cj1)*(x1255)))+(((x1257)*(x1258))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IKabs(((((cj2)*(x1253)))+(((cj2)*(x1254))))) != 0)?((IkReal)1/(((((cj2)*(x1253)))+(((cj2)*(x1254)))))):(IkReal)1.0e30))*(((((sj1)*(x1255)))+(((r01)*(sj6)*(x1261)))+(((IkReal(-1.00000000000000))*(x1256)*(x1263)))+(((cj1)*(x1259)))+(((x1257)*(x1260)))+(((IkReal(-1.00000000000000))*(x1258)*(x1261))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IKabs(((x1254)+(x1253))) != 0)?((IkReal)1/(((x1254)+(x1253)))):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(x1256)*(x1259)))+(((IkReal(-1.00000000000000))*(x1256)*(x1262)))+(((x1260)*(x1261)))+(((IkReal(-1.00000000000000))*(cj6)*(r10)*(x1261)))+(((cj1)*(x1255)))+(((x1257)*(x1258)))))))+IKsqr(((((IKabs(((((cj2)*(x1253)))+(((cj2)*(x1254))))) != 0)?((IkReal)1/(((((cj2)*(x1253)))+(((cj2)*(x1254)))))):(IkReal)1.0e30))*(((((sj1)*(x1255)))+(((r01)*(sj6)*(x1261)))+(((IkReal(-1.00000000000000))*(x1256)*(x1263)))+(((cj1)*(x1259)))+(((x1257)*(x1260)))+(((IkReal(-1.00000000000000))*(x1258)*(x1261)))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j3array[0]=IKatan2(((((IKabs(((x1254)+(x1253))) != 0)?((IkReal)1/(((x1254)+(x1253)))):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(x1256)*(x1259)))+(((IkReal(-1.00000000000000))*(x1256)*(x1262)))+(((x1260)*(x1261)))+(((IkReal(-1.00000000000000))*(cj6)*(r10)*(x1261)))+(((cj1)*(x1255)))+(((x1257)*(x1258)))))), ((((IKabs(((((cj2)*(x1253)))+(((cj2)*(x1254))))) != 0)?((IkReal)1/(((((cj2)*(x1253)))+(((cj2)*(x1254)))))):(IkReal)1.0e30))*(((((sj1)*(x1255)))+(((r01)*(sj6)*(x1261)))+(((IkReal(-1.00000000000000))*(x1256)*(x1263)))+(((cj1)*(x1259)))+(((x1257)*(x1260)))+(((IkReal(-1.00000000000000))*(x1258)*(x1261)))))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[6];
IkReal x1264=IKcos(j3);
IkReal x1265=IKsin(j3);
IkReal x1266=((IkReal(1.00000000000000))*(cj5));
IkReal x1267=((r11)*(sj6));
IkReal x1268=((IkReal(1.00000000000000))*(sj5));
IkReal x1269=((sj4)*(sj6));
IkReal x1270=((cj2)*(sj1));
IkReal x1271=((cj6)*(sj4));
IkReal x1272=((cj4)*(cj5));
IkReal x1273=((r01)*(sj6));
IkReal x1274=((r21)*(sj6));
IkReal x1275=((cj6)*(sj5));
IkReal x1276=((cj1)*(x1264));
IkReal x1277=((cj1)*(x1265));
IkReal x1278=((IkReal(1.00000000000000))*(x1265));
IkReal x1279=((cj4)*(cj6)*(x1266));
evalcond[0]=((((IkReal(-1.00000000000000))*(x1268)*(x1274)))+(((IkReal(-1.00000000000000))*(r22)*(x1266)))+(((sj2)*(x1264)))+(((r20)*(x1275))));
evalcond[1]=((((IkReal(-1.00000000000000))*(r12)*(x1266)))+(x1277)+(((x1264)*(x1270)))+(((r10)*(x1275)))+(((IkReal(-1.00000000000000))*(x1267)*(x1268))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x1268)*(x1273)))+(((cj2)*(x1276)))+(((IkReal(-1.00000000000000))*(sj1)*(x1278)))+(((IkReal(-1.00000000000000))*(r02)*(x1266)))+(((r00)*(x1275))));
evalcond[3]=((((r21)*(x1271)))+(((x1272)*(x1274)))+(((IkReal(-1.00000000000000))*(cj4)*(r22)*(x1268)))+(((IkReal(-1.00000000000000))*(sj2)*(x1278)))+(((r20)*(x1269)))+(((IkReal(-1.00000000000000))*(r20)*(x1279))));
evalcond[4]=((x1276)+(((r11)*(x1271)))+(((r10)*(x1269)))+(((IkReal(-1.00000000000000))*(x1270)*(x1278)))+(((IkReal(-1.00000000000000))*(cj4)*(r12)*(x1268)))+(((x1267)*(x1272)))+(((IkReal(-1.00000000000000))*(r10)*(x1279))));
evalcond[5]=((((IkReal(-1.00000000000000))*(r00)*(x1279)))+(((x1272)*(x1273)))+(((IkReal(-1.00000000000000))*(cj2)*(x1277)))+(((IkReal(-1.00000000000000))*(sj1)*(x1264)))+(((r01)*(x1271)))+(((IkReal(-1.00000000000000))*(cj4)*(r02)*(x1268)))+(((r00)*(x1269))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x1280=((r21)*(sj6));
IkReal x1281=((cj4)*(cj5));
IkReal x1282=((IkReal(1.00000000000000))*(cj6)*(r20));
if( IKabs(((gconst2)*(((((IkReal(-1.00000000000000))*(cj4)*(r22)*(sj5)))+(((cj6)*(r21)*(sj4)))+(((x1280)*(x1281)))+(((r20)*(sj4)*(sj6)))+(((IkReal(-1.00000000000000))*(x1281)*(x1282))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst2)*(((((cj5)*(r22)))+(((sj5)*(x1280)))+(((IkReal(-1.00000000000000))*(sj5)*(x1282))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j3array[0]=IKatan2(((gconst2)*(((((IkReal(-1.00000000000000))*(cj4)*(r22)*(sj5)))+(((cj6)*(r21)*(sj4)))+(((x1280)*(x1281)))+(((r20)*(sj4)*(sj6)))+(((IkReal(-1.00000000000000))*(x1281)*(x1282)))))), ((gconst2)*(((((cj5)*(r22)))+(((sj5)*(x1280)))+(((IkReal(-1.00000000000000))*(sj5)*(x1282)))))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[6];
IkReal x1283=IKcos(j3);
IkReal x1284=IKsin(j3);
IkReal x1285=((IkReal(1.00000000000000))*(cj5));
IkReal x1286=((r11)*(sj6));
IkReal x1287=((IkReal(1.00000000000000))*(sj5));
IkReal x1288=((sj4)*(sj6));
IkReal x1289=((cj2)*(sj1));
IkReal x1290=((cj6)*(sj4));
IkReal x1291=((cj4)*(cj5));
IkReal x1292=((r01)*(sj6));
IkReal x1293=((r21)*(sj6));
IkReal x1294=((cj6)*(sj5));
IkReal x1295=((cj1)*(x1283));
IkReal x1296=((cj1)*(x1284));
IkReal x1297=((IkReal(1.00000000000000))*(x1284));
IkReal x1298=((cj4)*(cj6)*(x1285));
evalcond[0]=((((r20)*(x1294)))+(((IkReal(-1.00000000000000))*(x1287)*(x1293)))+(((IkReal(-1.00000000000000))*(r22)*(x1285)))+(((sj2)*(x1283))));
evalcond[1]=((x1296)+(((x1283)*(x1289)))+(((IkReal(-1.00000000000000))*(x1286)*(x1287)))+(((r10)*(x1294)))+(((IkReal(-1.00000000000000))*(r12)*(x1285))));
evalcond[2]=((((IkReal(-1.00000000000000))*(r02)*(x1285)))+(((IkReal(-1.00000000000000))*(x1287)*(x1292)))+(((cj2)*(x1295)))+(((IkReal(-1.00000000000000))*(sj1)*(x1297)))+(((r00)*(x1294))));
evalcond[3]=((((r21)*(x1290)))+(((IkReal(-1.00000000000000))*(sj2)*(x1297)))+(((IkReal(-1.00000000000000))*(r20)*(x1298)))+(((x1291)*(x1293)))+(((r20)*(x1288)))+(((IkReal(-1.00000000000000))*(cj4)*(r22)*(x1287))));
evalcond[4]=((x1295)+(((x1286)*(x1291)))+(((IkReal(-1.00000000000000))*(cj4)*(r12)*(x1287)))+(((IkReal(-1.00000000000000))*(x1289)*(x1297)))+(((r10)*(x1288)))+(((r11)*(x1290)))+(((IkReal(-1.00000000000000))*(r10)*(x1298))));
evalcond[5]=((((IkReal(-1.00000000000000))*(r00)*(x1298)))+(((x1291)*(x1292)))+(((r00)*(x1288)))+(((IkReal(-1.00000000000000))*(sj1)*(x1283)))+(((IkReal(-1.00000000000000))*(cj4)*(r02)*(x1287)))+(((IkReal(-1.00000000000000))*(cj2)*(x1296)))+(((r01)*(x1290))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}

} else
{
{
IkReal j3array[1], cj3array[1], sj3array[1];
bool j3valid[1]={false};
_nj3 = 1;
IkReal x1299=((r21)*(sj6));
IkReal x1300=((cj4)*(cj5));
IkReal x1301=((IkReal(1.00000000000000))*(cj6)*(r20));
if( IKabs(((gconst1)*(((((x1299)*(x1300)))+(((IkReal(-1.00000000000000))*(x1300)*(x1301)))+(((IkReal(-1.00000000000000))*(cj4)*(r22)*(sj5)))+(((cj6)*(r21)*(sj4)))+(((r20)*(sj4)*(sj6))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst1)*(((((sj5)*(x1299)))+(((cj5)*(r22)))+(((IkReal(-1.00000000000000))*(sj5)*(x1301))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j3array[0]=IKatan2(((gconst1)*(((((x1299)*(x1300)))+(((IkReal(-1.00000000000000))*(x1300)*(x1301)))+(((IkReal(-1.00000000000000))*(cj4)*(r22)*(sj5)))+(((cj6)*(r21)*(sj4)))+(((r20)*(sj4)*(sj6)))))), ((gconst1)*(((((sj5)*(x1299)))+(((cj5)*(r22)))+(((IkReal(-1.00000000000000))*(sj5)*(x1301)))))));
sj3array[0]=IKsin(j3array[0]);
cj3array[0]=IKcos(j3array[0]);
if( j3array[0] > IKPI )
{
    j3array[0]-=IK2PI;
}
else if( j3array[0] < -IKPI )
{    j3array[0]+=IK2PI;
}
j3valid[0] = true;
for(int ij3 = 0; ij3 < 1; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 1; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];
{
IkReal evalcond[2];
IkReal x1302=((IkReal(1.00000000000000))*(cj5));
IkReal x1303=((cj6)*(r20));
IkReal x1304=((IkReal(1.00000000000000))*(sj5));
IkReal x1305=((r21)*(sj6));
evalcond[0]=((((sj5)*(x1303)))+(((IkReal(-1.00000000000000))*(r22)*(x1302)))+(((sj2)*(IKcos(j3))))+(((IkReal(-1.00000000000000))*(x1304)*(x1305))));
evalcond[1]=((((IkReal(-1.00000000000000))*(cj4)*(x1302)*(x1303)))+(((cj6)*(r21)*(sj4)))+(((IkReal(-1.00000000000000))*(cj4)*(r22)*(x1304)))+(((r20)*(sj4)*(sj6)))+(((IkReal(-1.00000000000000))*(sj2)*(IKsin(j3))))+(((cj4)*(cj5)*(x1305))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst7;
gconst7=IKsign((((sj3)*(sj3))+((((cj2)*(cj2))*((cj3)*(cj3))))));
dummyeval[0]=(((sj3)*(sj3))+((((cj2)*(cj2))*((cj3)*(cj3)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[2];
dummyeval[0]=sj2;
dummyeval[1]=sj3;
if( IKabs(dummyeval[0]) < 0.0000010000000000  || IKabs(dummyeval[1]) < 0.0000010000000000  )
{
{
IkReal dummyeval[2];
dummyeval[0]=sj2;
dummyeval[1]=sj3;
if( IKabs(dummyeval[0]) < 0.0000010000000000  || IKabs(dummyeval[1]) < 0.0000010000000000  )
{
{
IkReal evalcond[7];
IkReal x1306=((r21)*(sj6));
IkReal x1307=((cj5)*(sj4));
IkReal x1308=((IkReal(1.00000000000000))*(cj5));
IkReal x1309=((cj6)*(r20));
IkReal x1310=((IkReal(0.265000000000000))*(sj5));
IkReal x1311=((r20)*(sj6));
IkReal x1312=((IkReal(1.00000000000000))*(cj4));
IkReal x1313=((IkReal(0.0135000000000000))*(cj5));
IkReal x1314=((r22)*(sj5));
IkReal x1315=((IkReal(1.00000000000000))*(cj6));
IkReal x1316=((IkReal(1.00000000000000))*(sj4)*(sj5));
IkReal x1317=((cj6)*(r21)*(sj4));
IkReal x1318=((IkReal(0.0405000000000000))*(cj4)*(cj5));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(3.14159265358979))+(j2)), IkReal(6.28318530717959))));
evalcond[1]=((((sj5)*(x1309)))+(((IkReal(-1.00000000000000))*(r22)*(x1308)))+(((IkReal(-1.00000000000000))*(sj5)*(x1306))));
evalcond[2]=((IkReal(1.00000000000000))+(((IkReal(-1.00000000000000))*(x1311)*(x1312)))+(((x1306)*(x1307)))+(((IkReal(-1.00000000000000))*(sj4)*(x1314)))+(((IkReal(-1.00000000000000))*(x1307)*(x1309)))+(((IkReal(-1.00000000000000))*(cj6)*(r21)*(x1312))));
evalcond[3]=((x1317)+(((IkReal(-1.00000000000000))*(cj4)*(x1308)*(x1309)))+(((sj4)*(x1311)))+(((cj4)*(cj5)*(x1306)))+(((IkReal(-1.00000000000000))*(x1312)*(x1314))));
evalcond[4]=((((r01)*(sj6)*(x1307)))+(((IkReal(-1.00000000000000))*(cj6)*(r01)*(x1312)))+(((IkReal(-1.00000000000000))*(r02)*(x1316)))+(((IkReal(-1.00000000000000))*(r00)*(sj6)*(x1312)))+(((IkReal(-1.00000000000000))*(r00)*(x1307)*(x1315))));
evalcond[5]=((((IkReal(-1.00000000000000))*(r12)*(x1316)))+(((IkReal(-1.00000000000000))*(cj6)*(r11)*(x1312)))+(((r11)*(sj6)*(x1307)))+(((IkReal(-1.00000000000000))*(r10)*(x1307)*(x1315)))+(((IkReal(-1.00000000000000))*(r10)*(sj6)*(x1312))));
evalcond[6]=((((IkReal(-1.00000000000000))*(x1306)*(x1313)))+(((IkReal(-0.0405000000000000))*(cj4)*(x1314)))+(((x1309)*(x1313)))+(((x1306)*(x1318)))+(((x1306)*(x1310)))+(((IkReal(0.265000000000000))*(cj5)*(r22)))+(((IkReal(-1.00000000000000))*(pz)))+(((IkReal(0.0135000000000000))*(x1314)))+(((IkReal(0.0405000000000000))*(x1317)))+(((IkReal(0.0270000000000000))*(x1306)))+(((IkReal(0.0405000000000000))*(sj4)*(x1311)))+(((IkReal(-0.0270000000000000))*(x1309)))+(((IkReal(-1.00000000000000))*(x1309)*(x1310)))+(((IkReal(-1.00000000000000))*(x1309)*(x1318))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst8;
gconst8=IKsign((((sj3)*(sj3))+((cj3)*(cj3))));
dummyeval[0]=(((sj3)*(sj3))+((cj3)*(cj3)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst9;
gconst9=IKsign((((sj3)*(sj3))+((cj3)*(cj3))));
dummyeval[0]=(((sj3)*(sj3))+((cj3)*(cj3)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x1319=((r10)*(sj3));
IkReal x1320=((sj4)*(sj6));
IkReal x1321=((r11)*(sj6));
IkReal x1322=((cj5)*(r12));
IkReal x1323=((sj3)*(sj5));
IkReal x1324=((cj4)*(cj5));
IkReal x1325=((cj4)*(r12));
IkReal x1326=((cj3)*(sj5));
IkReal x1327=((IkReal(1.00000000000000))*(sj5));
IkReal x1328=((IkReal(1.00000000000000))*(cj3));
IkReal x1329=((IkReal(1.00000000000000))*(x1324));
IkReal x1330=((cj3)*(cj6)*(r10));
IkReal x1331=((cj6)*(r11)*(sj4));
if( IKabs(((gconst9)*(((((IkReal(-1.00000000000000))*(x1323)*(x1325)))+(((IkReal(-1.00000000000000))*(cj6)*(r10)*(x1326)))+(((sj3)*(x1321)*(x1324)))+(((x1319)*(x1320)))+(((sj3)*(x1331)))+(((cj3)*(x1322)))+(((IkReal(-1.00000000000000))*(cj6)*(x1319)*(x1329)))+(((x1321)*(x1326))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst9)*(((((sj3)*(x1322)))+(((IkReal(-1.00000000000000))*(x1328)*(x1331)))+(((IkReal(-1.00000000000000))*(x1321)*(x1324)*(x1328)))+(((IkReal(-1.00000000000000))*(r10)*(x1320)*(x1328)))+(((x1325)*(x1326)))+(((x1324)*(x1330)))+(((IkReal(-1.00000000000000))*(cj6)*(x1319)*(x1327)))+(((x1321)*(x1323))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j1array[0]=IKatan2(((gconst9)*(((((IkReal(-1.00000000000000))*(x1323)*(x1325)))+(((IkReal(-1.00000000000000))*(cj6)*(r10)*(x1326)))+(((sj3)*(x1321)*(x1324)))+(((x1319)*(x1320)))+(((sj3)*(x1331)))+(((cj3)*(x1322)))+(((IkReal(-1.00000000000000))*(cj6)*(x1319)*(x1329)))+(((x1321)*(x1326)))))), ((gconst9)*(((((sj3)*(x1322)))+(((IkReal(-1.00000000000000))*(x1328)*(x1331)))+(((IkReal(-1.00000000000000))*(x1321)*(x1324)*(x1328)))+(((IkReal(-1.00000000000000))*(r10)*(x1320)*(x1328)))+(((x1325)*(x1326)))+(((x1324)*(x1330)))+(((IkReal(-1.00000000000000))*(cj6)*(x1319)*(x1327)))+(((x1321)*(x1323)))))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
for(int ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
for(int iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[6];
IkReal x1332=IKcos(j1);
IkReal x1333=IKsin(j1);
IkReal x1334=((r02)*(sj5));
IkReal x1335=((IkReal(1.00000000000000))*(sj3));
IkReal x1336=((IkReal(0.0270000000000000))*(sj6));
IkReal x1337=((IkReal(0.0405000000000000))*(cj4));
IkReal x1338=((IkReal(0.265000000000000))*(sj5));
IkReal x1339=((cj6)*(r00));
IkReal x1340=((r11)*(sj6));
IkReal x1341=((r12)*(sj5));
IkReal x1342=((IkReal(1.00000000000000))*(sj5));
IkReal x1343=((cj6)*(r10));
IkReal x1344=((cj6)*(sj4));
IkReal x1345=((sj4)*(sj6));
IkReal x1346=((cj4)*(cj5));
IkReal x1347=((r01)*(sj6));
IkReal x1348=((IkReal(0.0135000000000000))*(cj5));
IkReal x1349=((IkReal(1.00000000000000))*(cj4));
IkReal x1350=((cj5)*(r02));
IkReal x1351=((cj5)*(r12));
IkReal x1352=((cj3)*(x1332));
IkReal x1353=((cj3)*(x1333));
IkReal x1354=((IkReal(1.00000000000000))*(x1346));
IkReal x1355=((x1333)*(x1335));
IkReal x1356=((cj5)*(sj6)*(x1337));
evalcond[0]=((x1353)+(((IkReal(-1.00000000000000))*(x1351)))+(((IkReal(-1.00000000000000))*(x1340)*(x1342)))+(((sj3)*(x1332)))+(((sj5)*(x1343))));
evalcond[1]=((x1352)+(((IkReal(-1.00000000000000))*(x1355)))+(((IkReal(-1.00000000000000))*(x1350)))+(((sj5)*(x1339)))+(((IkReal(-1.00000000000000))*(x1342)*(x1347))));
evalcond[2]=((x1352)+(((IkReal(-1.00000000000000))*(x1355)))+(((IkReal(-1.00000000000000))*(x1341)*(x1349)))+(((x1340)*(x1346)))+(((r11)*(x1344)))+(((IkReal(-1.00000000000000))*(x1343)*(x1354)))+(((r10)*(x1345))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x1353)))+(((x1346)*(x1347)))+(((IkReal(-1.00000000000000))*(x1339)*(x1354)))+(((r00)*(x1345)))+(((r01)*(x1344)))+(((IkReal(-1.00000000000000))*(x1332)*(x1335)))+(((IkReal(-1.00000000000000))*(x1334)*(x1349))));
evalcond[4]=((((IkReal(-1.00000000000000))*(cj5)*(x1337)*(x1339)))+(((IkReal(-1.00000000000000))*(x1347)*(x1348)))+(((x1339)*(x1348)))+(((IkReal(0.0705000000000000))*(x1332)))+(((IkReal(-1.00000000000000))*(x1334)*(x1337)))+(((IkReal(0.0405000000000000))*(r00)*(x1345)))+(((r01)*(x1336)))+(((IkReal(-0.0270000000000000))*(x1339)))+(((IkReal(0.0405000000000000))*(r01)*(x1344)))+(((IkReal(-1.00000000000000))*(px)))+(((IkReal(0.246500000000000))*(x1333)))+(((x1338)*(x1347)))+(((cj5)*(x1337)*(x1347)))+(((IkReal(-1.00000000000000))*(x1338)*(x1339)))+(((IkReal(0.0135000000000000))*(x1334)))+(((IkReal(0.265000000000000))*(x1350))));
evalcond[5]=((((IkReal(0.0405000000000000))*(r10)*(x1345)))+(((IkReal(-1.00000000000000))*(x1340)*(x1348)))+(((IkReal(-0.0270000000000000))*(x1343)))+(((IkReal(-1.00000000000000))*(x1338)*(x1343)))+(((r11)*(x1336)))+(((IkReal(0.0705000000000000))*(x1333)))+(((IkReal(0.0135000000000000))*(x1341)))+(((IkReal(-1.00000000000000))*(py)))+(((x1338)*(x1340)))+(((IkReal(0.0405000000000000))*(r11)*(x1344)))+(((cj5)*(x1337)*(x1340)))+(((IkReal(-0.246500000000000))*(x1332)))+(((IkReal(-1.00000000000000))*(cj5)*(x1337)*(x1343)))+(((IkReal(-1.00000000000000))*(x1337)*(x1341)))+(((x1343)*(x1348)))+(((IkReal(0.265000000000000))*(x1351))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x1357=((cj5)*(r02));
IkReal x1358=((IkReal(1.00000000000000))*(sj3));
IkReal x1359=((cj5)*(r12));
IkReal x1360=((sj5)*(sj6));
IkReal x1361=((cj6)*(sj5));
IkReal x1362=((IkReal(1.00000000000000))*(cj3));
if( IKabs(((gconst8)*(((((r00)*(sj3)*(x1361)))+(((IkReal(-1.00000000000000))*(r10)*(x1361)*(x1362)))+(((cj3)*(r11)*(x1360)))+(((cj3)*(x1359)))+(((IkReal(-1.00000000000000))*(r01)*(x1358)*(x1360)))+(((IkReal(-1.00000000000000))*(x1357)*(x1358))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst8)*(((((IkReal(-1.00000000000000))*(r10)*(x1358)*(x1361)))+(((r11)*(sj3)*(x1360)))+(((IkReal(-1.00000000000000))*(r00)*(x1361)*(x1362)))+(((cj3)*(x1357)))+(((sj3)*(x1359)))+(((cj3)*(r01)*(x1360))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j1array[0]=IKatan2(((gconst8)*(((((r00)*(sj3)*(x1361)))+(((IkReal(-1.00000000000000))*(r10)*(x1361)*(x1362)))+(((cj3)*(r11)*(x1360)))+(((cj3)*(x1359)))+(((IkReal(-1.00000000000000))*(r01)*(x1358)*(x1360)))+(((IkReal(-1.00000000000000))*(x1357)*(x1358)))))), ((gconst8)*(((((IkReal(-1.00000000000000))*(r10)*(x1358)*(x1361)))+(((r11)*(sj3)*(x1360)))+(((IkReal(-1.00000000000000))*(r00)*(x1361)*(x1362)))+(((cj3)*(x1357)))+(((sj3)*(x1359)))+(((cj3)*(r01)*(x1360)))))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
for(int ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
for(int iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[6];
IkReal x1363=IKcos(j1);
IkReal x1364=IKsin(j1);
IkReal x1365=((r02)*(sj5));
IkReal x1366=((IkReal(1.00000000000000))*(sj3));
IkReal x1367=((IkReal(0.0270000000000000))*(sj6));
IkReal x1368=((IkReal(0.0405000000000000))*(cj4));
IkReal x1369=((IkReal(0.265000000000000))*(sj5));
IkReal x1370=((cj6)*(r00));
IkReal x1371=((r11)*(sj6));
IkReal x1372=((r12)*(sj5));
IkReal x1373=((IkReal(1.00000000000000))*(sj5));
IkReal x1374=((cj6)*(r10));
IkReal x1375=((cj6)*(sj4));
IkReal x1376=((sj4)*(sj6));
IkReal x1377=((cj4)*(cj5));
IkReal x1378=((r01)*(sj6));
IkReal x1379=((IkReal(0.0135000000000000))*(cj5));
IkReal x1380=((IkReal(1.00000000000000))*(cj4));
IkReal x1381=((cj5)*(r02));
IkReal x1382=((cj5)*(r12));
IkReal x1383=((cj3)*(x1363));
IkReal x1384=((cj3)*(x1364));
IkReal x1385=((IkReal(1.00000000000000))*(x1377));
IkReal x1386=((x1364)*(x1366));
IkReal x1387=((cj5)*(sj6)*(x1368));
evalcond[0]=((x1384)+(((sj5)*(x1374)))+(((IkReal(-1.00000000000000))*(x1371)*(x1373)))+(((IkReal(-1.00000000000000))*(x1382)))+(((sj3)*(x1363))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x1386)))+(x1383)+(((sj5)*(x1370)))+(((IkReal(-1.00000000000000))*(x1381)))+(((IkReal(-1.00000000000000))*(x1373)*(x1378))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x1386)))+(x1383)+(((IkReal(-1.00000000000000))*(x1372)*(x1380)))+(((r10)*(x1376)))+(((r11)*(x1375)))+(((IkReal(-1.00000000000000))*(x1374)*(x1385)))+(((x1371)*(x1377))));
evalcond[3]=((((x1377)*(x1378)))+(((IkReal(-1.00000000000000))*(x1370)*(x1385)))+(((IkReal(-1.00000000000000))*(x1384)))+(((IkReal(-1.00000000000000))*(x1365)*(x1380)))+(((IkReal(-1.00000000000000))*(x1363)*(x1366)))+(((r00)*(x1376)))+(((r01)*(x1375))));
evalcond[4]=((((IkReal(0.265000000000000))*(x1381)))+(((IkReal(0.0405000000000000))*(r00)*(x1376)))+(((IkReal(0.246500000000000))*(x1364)))+(((IkReal(0.0405000000000000))*(r01)*(x1375)))+(((IkReal(0.0135000000000000))*(x1365)))+(((cj5)*(x1368)*(x1378)))+(((IkReal(0.0705000000000000))*(x1363)))+(((IkReal(-1.00000000000000))*(px)))+(((x1370)*(x1379)))+(((IkReal(-1.00000000000000))*(x1365)*(x1368)))+(((x1369)*(x1378)))+(((IkReal(-1.00000000000000))*(cj5)*(x1368)*(x1370)))+(((r01)*(x1367)))+(((IkReal(-0.0270000000000000))*(x1370)))+(((IkReal(-1.00000000000000))*(x1378)*(x1379)))+(((IkReal(-1.00000000000000))*(x1369)*(x1370))));
evalcond[5]=((((IkReal(0.265000000000000))*(x1382)))+(((IkReal(-1.00000000000000))*(x1371)*(x1379)))+(((IkReal(0.0405000000000000))*(r11)*(x1375)))+(((IkReal(-0.246500000000000))*(x1363)))+(((x1374)*(x1379)))+(((IkReal(0.0405000000000000))*(r10)*(x1376)))+(((cj5)*(x1368)*(x1371)))+(((IkReal(0.0705000000000000))*(x1364)))+(((IkReal(-1.00000000000000))*(py)))+(((r11)*(x1367)))+(((x1369)*(x1371)))+(((IkReal(0.0135000000000000))*(x1372)))+(((IkReal(-1.00000000000000))*(cj5)*(x1368)*(x1374)))+(((IkReal(-0.0270000000000000))*(x1374)))+(((IkReal(-1.00000000000000))*(x1369)*(x1374)))+(((IkReal(-1.00000000000000))*(x1368)*(x1372))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
IkReal x1388=((r21)*(sj6));
IkReal x1389=((cj5)*(sj4));
IkReal x1390=((IkReal(1.00000000000000))*(cj5));
IkReal x1391=((cj6)*(r20));
IkReal x1392=((IkReal(0.265000000000000))*(sj5));
IkReal x1393=((r20)*(sj6));
IkReal x1394=((IkReal(1.00000000000000))*(cj4));
IkReal x1395=((IkReal(0.0135000000000000))*(cj5));
IkReal x1396=((r22)*(sj5));
IkReal x1397=((IkReal(1.00000000000000))*(cj6));
IkReal x1398=((IkReal(1.00000000000000))*(sj4)*(sj5));
IkReal x1399=((cj6)*(r21)*(sj4));
IkReal x1400=((IkReal(0.0405000000000000))*(cj4)*(cj5));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.11022302462516e-16))+(j2)), IkReal(6.28318530717959))));
evalcond[1]=((((IkReal(-1.00000000000000))*(sj5)*(x1388)))+(((IkReal(-1.00000000000000))*(r22)*(x1390)))+(((sj5)*(x1391))));
evalcond[2]=((IkReal(-1.00000000000000))+(((x1388)*(x1389)))+(((IkReal(-1.00000000000000))*(cj6)*(r21)*(x1394)))+(((IkReal(-1.00000000000000))*(x1393)*(x1394)))+(((IkReal(-1.00000000000000))*(x1389)*(x1391)))+(((IkReal(-1.00000000000000))*(sj4)*(x1396))));
evalcond[3]=((x1399)+(((IkReal(-1.00000000000000))*(cj4)*(x1390)*(x1391)))+(((sj4)*(x1393)))+(((IkReal(-1.00000000000000))*(x1394)*(x1396)))+(((cj4)*(cj5)*(x1388))));
evalcond[4]=((((IkReal(-1.00000000000000))*(cj6)*(r01)*(x1394)))+(((IkReal(-1.00000000000000))*(r00)*(sj6)*(x1394)))+(((IkReal(-1.00000000000000))*(r02)*(x1398)))+(((r01)*(sj6)*(x1389)))+(((IkReal(-1.00000000000000))*(r00)*(x1389)*(x1397))));
evalcond[5]=((((IkReal(-1.00000000000000))*(r10)*(x1389)*(x1397)))+(((r11)*(sj6)*(x1389)))+(((IkReal(-1.00000000000000))*(r12)*(x1398)))+(((IkReal(-1.00000000000000))*(r10)*(sj6)*(x1394)))+(((IkReal(-1.00000000000000))*(cj6)*(r11)*(x1394))));
evalcond[6]=((((IkReal(0.0405000000000000))*(x1399)))+(((x1388)*(x1392)))+(((IkReal(-0.0270000000000000))*(x1391)))+(((IkReal(-1.00000000000000))*(x1391)*(x1392)))+(((IkReal(0.0270000000000000))*(x1388)))+(((IkReal(0.265000000000000))*(cj5)*(r22)))+(((IkReal(0.0405000000000000))*(sj4)*(x1393)))+(((IkReal(-1.00000000000000))*(pz)))+(((IkReal(-1.00000000000000))*(x1391)*(x1400)))+(((x1388)*(x1400)))+(((IkReal(-1.00000000000000))*(x1388)*(x1395)))+(((x1391)*(x1395)))+(((IkReal(0.0135000000000000))*(x1396)))+(((IkReal(-0.0405000000000000))*(cj4)*(x1396))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst10;
gconst10=IKsign((((sj3)*(sj3))+((cj3)*(cj3))));
dummyeval[0]=(((sj3)*(sj3))+((cj3)*(cj3)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst11;
gconst11=IKsign((((sj3)*(sj3))+((cj3)*(cj3))));
dummyeval[0]=(((sj3)*(sj3))+((cj3)*(cj3)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x1401=((IkReal(1.00000000000000))*(cj5));
IkReal x1402=((cj4)*(sj3));
IkReal x1403=((r11)*(sj6));
IkReal x1404=((cj3)*(r12));
IkReal x1405=((cj3)*(cj4));
IkReal x1406=((IkReal(1.00000000000000))*(sj4));
IkReal x1407=((cj6)*(sj3));
IkReal x1408=((cj3)*(r10));
IkReal x1409=((IkReal(1.00000000000000))*(sj5));
IkReal x1410=((cj5)*(cj6)*(r10));
if( IKabs(((gconst11)*(((((x1402)*(x1410)))+(((IkReal(-1.00000000000000))*(r11)*(x1406)*(x1407)))+(((cj6)*(sj5)*(x1408)))+(((IkReal(-1.00000000000000))*(cj3)*(x1403)*(x1409)))+(((IkReal(-1.00000000000000))*(x1401)*(x1404)))+(((IkReal(-1.00000000000000))*(r10)*(sj3)*(sj6)*(x1406)))+(((r12)*(sj5)*(x1402)))+(((IkReal(-1.00000000000000))*(x1401)*(x1402)*(x1403))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst11)*(((((IkReal(-1.00000000000000))*(r10)*(x1407)*(x1409)))+(((cj5)*(r12)*(sj3)))+(((sj3)*(sj5)*(x1403)))+(((x1405)*(x1410)))+(((IkReal(-1.00000000000000))*(cj3)*(cj6)*(r11)*(x1406)))+(((cj4)*(sj5)*(x1404)))+(((IkReal(-1.00000000000000))*(sj6)*(x1406)*(x1408)))+(((IkReal(-1.00000000000000))*(x1401)*(x1403)*(x1405))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j1array[0]=IKatan2(((gconst11)*(((((x1402)*(x1410)))+(((IkReal(-1.00000000000000))*(r11)*(x1406)*(x1407)))+(((cj6)*(sj5)*(x1408)))+(((IkReal(-1.00000000000000))*(cj3)*(x1403)*(x1409)))+(((IkReal(-1.00000000000000))*(x1401)*(x1404)))+(((IkReal(-1.00000000000000))*(r10)*(sj3)*(sj6)*(x1406)))+(((r12)*(sj5)*(x1402)))+(((IkReal(-1.00000000000000))*(x1401)*(x1402)*(x1403)))))), ((gconst11)*(((((IkReal(-1.00000000000000))*(r10)*(x1407)*(x1409)))+(((cj5)*(r12)*(sj3)))+(((sj3)*(sj5)*(x1403)))+(((x1405)*(x1410)))+(((IkReal(-1.00000000000000))*(cj3)*(cj6)*(r11)*(x1406)))+(((cj4)*(sj5)*(x1404)))+(((IkReal(-1.00000000000000))*(sj6)*(x1406)*(x1408)))+(((IkReal(-1.00000000000000))*(x1401)*(x1403)*(x1405)))))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
for(int ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
for(int iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[6];
IkReal x1411=IKcos(j1);
IkReal x1412=IKsin(j1);
IkReal x1413=((r02)*(sj5));
IkReal x1414=((IkReal(0.0270000000000000))*(sj6));
IkReal x1415=((IkReal(0.0405000000000000))*(cj4));
IkReal x1416=((IkReal(0.265000000000000))*(sj5));
IkReal x1417=((cj6)*(r00));
IkReal x1418=((r11)*(sj6));
IkReal x1419=((r12)*(sj5));
IkReal x1420=((IkReal(1.00000000000000))*(sj5));
IkReal x1421=((cj6)*(r10));
IkReal x1422=((cj6)*(sj4));
IkReal x1423=((sj4)*(sj6));
IkReal x1424=((cj4)*(cj5));
IkReal x1425=((r01)*(sj6));
IkReal x1426=((IkReal(0.0135000000000000))*(cj5));
IkReal x1427=((IkReal(1.00000000000000))*(cj4));
IkReal x1428=((cj5)*(r02));
IkReal x1429=((cj5)*(r12));
IkReal x1430=((sj3)*(x1411));
IkReal x1431=((IkReal(1.00000000000000))*(x1412));
IkReal x1432=((IkReal(1.00000000000000))*(x1424));
IkReal x1433=((cj3)*(x1411));
IkReal x1434=((cj3)*(x1431));
IkReal x1435=((cj5)*(sj6)*(x1415));
evalcond[0]=((((IkReal(-1.00000000000000))*(x1434)))+(((IkReal(-1.00000000000000))*(x1418)*(x1420)))+(((IkReal(-1.00000000000000))*(x1429)))+(x1430)+(((sj5)*(x1421))));
evalcond[1]=((((IkReal(-1.00000000000000))*(sj3)*(x1431)))+(((IkReal(-1.00000000000000))*(x1433)))+(((sj5)*(x1417)))+(((IkReal(-1.00000000000000))*(x1420)*(x1425)))+(((IkReal(-1.00000000000000))*(x1428))));
evalcond[2]=((((r11)*(x1422)))+(((r10)*(x1423)))+(((IkReal(-1.00000000000000))*(x1419)*(x1427)))+(((IkReal(-1.00000000000000))*(x1421)*(x1432)))+(x1433)+(((x1418)*(x1424)))+(((sj3)*(x1412))));
evalcond[3]=((((x1424)*(x1425)))+(((r01)*(x1422)))+(((r00)*(x1423)))+(((IkReal(-1.00000000000000))*(x1434)))+(x1430)+(((IkReal(-1.00000000000000))*(x1417)*(x1432)))+(((IkReal(-1.00000000000000))*(x1413)*(x1427))));
evalcond[4]=((((IkReal(0.0405000000000000))*(r00)*(x1423)))+(((IkReal(0.246500000000000))*(x1412)))+(((IkReal(-1.00000000000000))*(x1413)*(x1415)))+(((IkReal(-1.00000000000000))*(x1425)*(x1426)))+(((IkReal(-1.00000000000000))*(x1416)*(x1417)))+(((IkReal(-1.00000000000000))*(px)))+(((r01)*(x1414)))+(((IkReal(0.0135000000000000))*(x1413)))+(((IkReal(-1.00000000000000))*(cj5)*(x1415)*(x1417)))+(((IkReal(0.265000000000000))*(x1428)))+(((IkReal(-0.0105000000000000))*(x1411)))+(((x1417)*(x1426)))+(((IkReal(0.0405000000000000))*(r01)*(x1422)))+(((IkReal(-0.0270000000000000))*(x1417)))+(((cj5)*(x1415)*(x1425)))+(((x1416)*(x1425))));
evalcond[5]=((((IkReal(-1.00000000000000))*(x1415)*(x1419)))+(((IkReal(0.0405000000000000))*(r11)*(x1422)))+(((IkReal(-1.00000000000000))*(x1416)*(x1421)))+(((IkReal(-0.0270000000000000))*(x1421)))+(((x1416)*(x1418)))+(((IkReal(-1.00000000000000))*(x1418)*(x1426)))+(((IkReal(-1.00000000000000))*(py)))+(((r11)*(x1414)))+(((IkReal(0.0135000000000000))*(x1419)))+(((IkReal(0.265000000000000))*(x1429)))+(((IkReal(-1.00000000000000))*(cj5)*(x1415)*(x1421)))+(((IkReal(-0.0105000000000000))*(x1412)))+(((IkReal(0.0405000000000000))*(r10)*(x1423)))+(((x1421)*(x1426)))+(((IkReal(-0.246500000000000))*(x1411)))+(((cj5)*(x1415)*(x1418))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x1436=((IkReal(1.00000000000000))*(cj3));
IkReal x1437=((cj5)*(r02));
IkReal x1438=((sj5)*(sj6));
IkReal x1439=((cj5)*(r12));
IkReal x1440=((IkReal(1.00000000000000))*(sj3));
IkReal x1441=((cj6)*(r00)*(sj5));
IkReal x1442=((cj6)*(r10)*(sj5));
if( IKabs(((gconst10)*(((((IkReal(-1.00000000000000))*(x1436)*(x1439)))+(((IkReal(-1.00000000000000))*(r01)*(x1438)*(x1440)))+(((IkReal(-1.00000000000000))*(r11)*(x1436)*(x1438)))+(((IkReal(-1.00000000000000))*(x1437)*(x1440)))+(((cj3)*(x1442)))+(((sj3)*(x1441))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst10)*(((((IkReal(-1.00000000000000))*(x1436)*(x1437)))+(((sj3)*(x1439)))+(((cj3)*(x1441)))+(((r11)*(sj3)*(x1438)))+(((IkReal(-1.00000000000000))*(r01)*(x1436)*(x1438)))+(((IkReal(-1.00000000000000))*(x1440)*(x1442))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j1array[0]=IKatan2(((gconst10)*(((((IkReal(-1.00000000000000))*(x1436)*(x1439)))+(((IkReal(-1.00000000000000))*(r01)*(x1438)*(x1440)))+(((IkReal(-1.00000000000000))*(r11)*(x1436)*(x1438)))+(((IkReal(-1.00000000000000))*(x1437)*(x1440)))+(((cj3)*(x1442)))+(((sj3)*(x1441)))))), ((gconst10)*(((((IkReal(-1.00000000000000))*(x1436)*(x1437)))+(((sj3)*(x1439)))+(((cj3)*(x1441)))+(((r11)*(sj3)*(x1438)))+(((IkReal(-1.00000000000000))*(r01)*(x1436)*(x1438)))+(((IkReal(-1.00000000000000))*(x1440)*(x1442)))))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
for(int ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
for(int iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[6];
IkReal x1443=IKcos(j1);
IkReal x1444=IKsin(j1);
IkReal x1445=((r02)*(sj5));
IkReal x1446=((IkReal(0.0270000000000000))*(sj6));
IkReal x1447=((IkReal(0.0405000000000000))*(cj4));
IkReal x1448=((IkReal(0.265000000000000))*(sj5));
IkReal x1449=((cj6)*(r00));
IkReal x1450=((r11)*(sj6));
IkReal x1451=((r12)*(sj5));
IkReal x1452=((IkReal(1.00000000000000))*(sj5));
IkReal x1453=((cj6)*(r10));
IkReal x1454=((cj6)*(sj4));
IkReal x1455=((sj4)*(sj6));
IkReal x1456=((cj4)*(cj5));
IkReal x1457=((r01)*(sj6));
IkReal x1458=((IkReal(0.0135000000000000))*(cj5));
IkReal x1459=((IkReal(1.00000000000000))*(cj4));
IkReal x1460=((cj5)*(r02));
IkReal x1461=((cj5)*(r12));
IkReal x1462=((sj3)*(x1443));
IkReal x1463=((IkReal(1.00000000000000))*(x1444));
IkReal x1464=((IkReal(1.00000000000000))*(x1456));
IkReal x1465=((cj3)*(x1443));
IkReal x1466=((cj3)*(x1463));
IkReal x1467=((cj5)*(sj6)*(x1447));
evalcond[0]=((((IkReal(-1.00000000000000))*(x1466)))+(((sj5)*(x1453)))+(x1462)+(((IkReal(-1.00000000000000))*(x1461)))+(((IkReal(-1.00000000000000))*(x1450)*(x1452))));
evalcond[1]=((((sj5)*(x1449)))+(((IkReal(-1.00000000000000))*(x1452)*(x1457)))+(((IkReal(-1.00000000000000))*(sj3)*(x1463)))+(((IkReal(-1.00000000000000))*(x1460)))+(((IkReal(-1.00000000000000))*(x1465))));
evalcond[2]=((((r10)*(x1455)))+(((IkReal(-1.00000000000000))*(x1453)*(x1464)))+(((x1450)*(x1456)))+(((r11)*(x1454)))+(x1465)+(((sj3)*(x1444)))+(((IkReal(-1.00000000000000))*(x1451)*(x1459))));
evalcond[3]=((((x1456)*(x1457)))+(((IkReal(-1.00000000000000))*(x1466)))+(((IkReal(-1.00000000000000))*(x1445)*(x1459)))+(((r01)*(x1454)))+(x1462)+(((IkReal(-1.00000000000000))*(x1449)*(x1464)))+(((r00)*(x1455))));
evalcond[4]=((((IkReal(-1.00000000000000))*(x1457)*(x1458)))+(((IkReal(-1.00000000000000))*(x1445)*(x1447)))+(((IkReal(0.0405000000000000))*(r01)*(x1454)))+(((IkReal(0.0405000000000000))*(r00)*(x1455)))+(((IkReal(0.246500000000000))*(x1444)))+(((IkReal(0.0135000000000000))*(x1445)))+(((x1448)*(x1457)))+(((IkReal(-0.0105000000000000))*(x1443)))+(((IkReal(-1.00000000000000))*(px)))+(((IkReal(0.265000000000000))*(x1460)))+(((cj5)*(x1447)*(x1457)))+(((IkReal(-0.0270000000000000))*(x1449)))+(((IkReal(-1.00000000000000))*(cj5)*(x1447)*(x1449)))+(((x1449)*(x1458)))+(((r01)*(x1446)))+(((IkReal(-1.00000000000000))*(x1448)*(x1449))));
evalcond[5]=((((IkReal(-1.00000000000000))*(x1447)*(x1451)))+(((r11)*(x1446)))+(((IkReal(-1.00000000000000))*(cj5)*(x1447)*(x1453)))+(((IkReal(-0.246500000000000))*(x1443)))+(((IkReal(-1.00000000000000))*(x1448)*(x1453)))+(((IkReal(0.0405000000000000))*(r11)*(x1454)))+(((x1448)*(x1450)))+(((IkReal(-0.0105000000000000))*(x1444)))+(((IkReal(0.0405000000000000))*(r10)*(x1455)))+(((IkReal(-1.00000000000000))*(py)))+(((IkReal(0.265000000000000))*(x1461)))+(((cj5)*(x1447)*(x1450)))+(((IkReal(-0.0270000000000000))*(x1453)))+(((IkReal(0.0135000000000000))*(x1451)))+(((x1453)*(x1458)))+(((IkReal(-1.00000000000000))*(x1450)*(x1458))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
IkReal x1468=((r21)*(sj6));
IkReal x1469=((cj5)*(sj4));
IkReal x1470=((IkReal(1.00000000000000))*(cj5));
IkReal x1471=((cj6)*(r20));
IkReal x1472=((IkReal(0.265000000000000))*(sj5));
IkReal x1473=((r20)*(sj6));
IkReal x1474=((IkReal(1.00000000000000))*(cj4));
IkReal x1475=((IkReal(0.0135000000000000))*(cj5));
IkReal x1476=((r22)*(sj5));
IkReal x1477=((cj6)*(r21)*(sj4));
IkReal x1478=((IkReal(0.0405000000000000))*(cj4)*(cj5));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(3.14159265358979))+(j3)), IkReal(6.28318530717959))));
evalcond[1]=((((IkReal(-1.00000000000000))*(r22)*(x1470)))+(sj2)+(((sj5)*(x1471)))+(((IkReal(-1.00000000000000))*(sj5)*(x1468))));
evalcond[2]=((cj2)+(((IkReal(-1.00000000000000))*(cj6)*(r21)*(x1474)))+(((IkReal(-1.00000000000000))*(sj4)*(x1476)))+(((x1468)*(x1469)))+(((IkReal(-1.00000000000000))*(x1469)*(x1471)))+(((IkReal(-1.00000000000000))*(x1473)*(x1474))));
evalcond[3]=((((cj4)*(cj5)*(x1468)))+(((sj4)*(x1473)))+(((IkReal(-1.00000000000000))*(x1474)*(x1476)))+(((IkReal(-1.00000000000000))*(cj4)*(x1470)*(x1471)))+(x1477));
evalcond[4]=((((IkReal(0.0270000000000000))*(x1468)))+(((IkReal(0.0405000000000000))*(sj2)))+(((x1471)*(x1475)))+(((IkReal(-1.00000000000000))*(x1471)*(x1472)))+(((IkReal(-1.00000000000000))*(x1471)*(x1478)))+(((IkReal(0.0405000000000000))*(x1477)))+(((IkReal(0.0135000000000000))*(x1476)))+(((IkReal(-0.0405000000000000))*(cj4)*(x1476)))+(((IkReal(0.265000000000000))*(cj5)*(r22)))+(((IkReal(-1.00000000000000))*(pz)))+(((IkReal(-1.00000000000000))*(x1468)*(x1475)))+(((IkReal(-0.0270000000000000))*(x1471)))+(((x1468)*(x1478)))+(((x1468)*(x1472)))+(((IkReal(0.0405000000000000))*(sj4)*(x1473))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst12;
gconst12=IKsign(cj2);
dummyeval[0]=cj2;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=cj2;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=cj2;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal evalcond[7];
IkReal x1479=((r21)*(sj6));
IkReal x1480=((cj5)*(sj4));
IkReal x1481=((IkReal(1.00000000000000))*(cj5));
IkReal x1482=((cj6)*(r20));
IkReal x1483=((IkReal(0.265000000000000))*(sj5));
IkReal x1484=((IkReal(1.00000000000000))*(sj6));
IkReal x1485=((IkReal(0.0135000000000000))*(cj5));
IkReal x1486=((r22)*(sj5));
IkReal x1487=((cj6)*(sj5));
IkReal x1488=((IkReal(1.00000000000000))*(cj4));
IkReal x1489=((cj6)*(r21)*(sj4));
IkReal x1490=((r20)*(sj4)*(sj6));
IkReal x1491=((IkReal(0.0405000000000000))*(cj4)*(cj5));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.57079632679490))+(j2)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(1.00000000000000))+(((IkReal(-1.00000000000000))*(sj5)*(x1479)))+(((IkReal(-1.00000000000000))*(r22)*(x1481)))+(((sj5)*(x1482))));
evalcond[2]=((((IkReal(-1.00000000000000))*(r11)*(sj5)*(x1484)))+(((r10)*(x1487)))+(((IkReal(-1.00000000000000))*(r12)*(x1481))));
evalcond[3]=((((r00)*(x1487)))+(((IkReal(-1.00000000000000))*(r02)*(x1481)))+(((IkReal(-1.00000000000000))*(r01)*(sj5)*(x1484))));
evalcond[4]=((((IkReal(-1.00000000000000))*(cj6)*(r21)*(x1488)))+(((IkReal(-1.00000000000000))*(sj4)*(x1486)))+(((IkReal(-1.00000000000000))*(x1480)*(x1482)))+(((IkReal(-1.00000000000000))*(cj4)*(r20)*(x1484)))+(((x1479)*(x1480))));
evalcond[5]=((((IkReal(-1.00000000000000))*(cj4)*(x1481)*(x1482)))+(((IkReal(-1.00000000000000))*(x1486)*(x1488)))+(((cj4)*(cj5)*(x1479)))+(x1490)+(x1489));
evalcond[6]=((IkReal(0.0405000000000000))+(((x1479)*(x1491)))+(((IkReal(0.0405000000000000))*(x1489)))+(((IkReal(-1.00000000000000))*(x1482)*(x1483)))+(((IkReal(-1.00000000000000))*(x1479)*(x1485)))+(((IkReal(0.0405000000000000))*(x1490)))+(((IkReal(-1.00000000000000))*(x1482)*(x1491)))+(((x1482)*(x1485)))+(((IkReal(0.0270000000000000))*(x1479)))+(((IkReal(0.265000000000000))*(cj5)*(r22)))+(((IkReal(-1.00000000000000))*(pz)))+(((IkReal(-0.0270000000000000))*(x1482)))+(((IkReal(-0.0405000000000000))*(cj4)*(x1486)))+(((IkReal(0.0135000000000000))*(x1486)))+(((x1479)*(x1483))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x1492=((cj6)*(sj4));
IkReal x1493=((cj4)*(cj5));
IkReal x1494=((sj4)*(sj6));
IkReal x1495=((cj4)*(sj5));
IkReal x1496=((IkReal(1.00000000000000))*(r11));
if( IKabs(((((IkReal(-1.00000000000000))*(r02)*(x1495)))+(((IkReal(-1.00000000000000))*(cj6)*(r00)*(x1493)))+(((r00)*(x1494)))+(((r01)*(x1492)))+(((r01)*(sj6)*(x1493))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((r12)*(x1495)))+(((IkReal(-1.00000000000000))*(x1492)*(x1496)))+(((IkReal(-1.00000000000000))*(r10)*(x1494)))+(((cj6)*(r10)*(x1493)))+(((IkReal(-1.00000000000000))*(sj6)*(x1493)*(x1496))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IkReal(-1.00000000000000))*(r02)*(x1495)))+(((IkReal(-1.00000000000000))*(cj6)*(r00)*(x1493)))+(((r00)*(x1494)))+(((r01)*(x1492)))+(((r01)*(sj6)*(x1493)))))+IKsqr(((((r12)*(x1495)))+(((IkReal(-1.00000000000000))*(x1492)*(x1496)))+(((IkReal(-1.00000000000000))*(r10)*(x1494)))+(((cj6)*(r10)*(x1493)))+(((IkReal(-1.00000000000000))*(sj6)*(x1493)*(x1496)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j1array[0]=IKatan2(((((IkReal(-1.00000000000000))*(r02)*(x1495)))+(((IkReal(-1.00000000000000))*(cj6)*(r00)*(x1493)))+(((r00)*(x1494)))+(((r01)*(x1492)))+(((r01)*(sj6)*(x1493)))), ((((r12)*(x1495)))+(((IkReal(-1.00000000000000))*(x1492)*(x1496)))+(((IkReal(-1.00000000000000))*(r10)*(x1494)))+(((cj6)*(r10)*(x1493)))+(((IkReal(-1.00000000000000))*(sj6)*(x1493)*(x1496)))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
for(int ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
for(int iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[6];
IkReal x1497=IKcos(j1);
IkReal x1498=IKsin(j1);
IkReal x1499=((r02)*(sj5));
IkReal x1500=((cj6)*(sj4));
IkReal x1501=((IkReal(0.0270000000000000))*(sj6));
IkReal x1502=((IkReal(0.0405000000000000))*(cj4));
IkReal x1503=((IkReal(0.265000000000000))*(sj5));
IkReal x1504=((cj6)*(r00));
IkReal x1505=((r11)*(sj6));
IkReal x1506=((r12)*(sj5));
IkReal x1507=((IkReal(1.00000000000000))*(sj4));
IkReal x1508=((IkReal(1.00000000000000))*(cj4));
IkReal x1509=((r01)*(sj6));
IkReal x1510=((sj4)*(sj6));
IkReal x1511=((cj5)*(sj4));
IkReal x1512=((cj6)*(r10));
IkReal x1513=((cj4)*(cj5));
IkReal x1514=((IkReal(0.0135000000000000))*(cj5));
IkReal x1515=((IkReal(0.265000000000000))*(cj5));
IkReal x1516=((IkReal(1.00000000000000))*(cj5));
IkReal x1517=((IkReal(1.00000000000000))*(x1498));
IkReal x1518=((cj5)*(x1512));
IkReal x1519=((cj5)*(sj6)*(x1502));
evalcond[0]=((((x1509)*(x1511)))+(((IkReal(-1.00000000000000))*(x1499)*(x1507)))+(((IkReal(-1.00000000000000))*(x1497)))+(((IkReal(-1.00000000000000))*(cj6)*(r01)*(x1508)))+(((IkReal(-1.00000000000000))*(r00)*(x1500)*(x1516)))+(((IkReal(-1.00000000000000))*(r00)*(sj6)*(x1508))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x1517)))+(((IkReal(-1.00000000000000))*(cj6)*(r11)*(x1508)))+(((IkReal(-1.00000000000000))*(r10)*(sj6)*(x1508)))+(((IkReal(-1.00000000000000))*(x1506)*(x1507)))+(((IkReal(-1.00000000000000))*(r10)*(x1500)*(x1516)))+(((x1505)*(x1511))));
evalcond[2]=((((r11)*(x1500)))+(((IkReal(-1.00000000000000))*(x1506)*(x1508)))+(((r10)*(x1510)))+(x1497)+(((x1505)*(x1513)))+(((IkReal(-1.00000000000000))*(x1508)*(x1518))));
evalcond[3]=((((x1509)*(x1513)))+(((IkReal(-1.00000000000000))*(x1499)*(x1508)))+(((IkReal(-1.00000000000000))*(x1517)))+(((r01)*(x1500)))+(((r00)*(x1510)))+(((IkReal(-1.00000000000000))*(cj5)*(x1504)*(x1508))));
evalcond[4]=((((cj5)*(x1502)*(x1509)))+(((IkReal(-1.00000000000000))*(x1499)*(x1502)))+(((IkReal(0.0405000000000000))*(r01)*(x1500)))+(((IkReal(-1.00000000000000))*(cj5)*(x1502)*(x1504)))+(((IkReal(0.0405000000000000))*(r00)*(x1510)))+(((x1504)*(x1514)))+(((r01)*(x1501)))+(((IkReal(-1.00000000000000))*(px)))+(((r02)*(x1515)))+(((IkReal(-0.0270000000000000))*(x1504)))+(((IkReal(0.0300000000000000))*(x1497)))+(((x1503)*(x1509)))+(((IkReal(-1.00000000000000))*(x1503)*(x1504)))+(((IkReal(-1.00000000000000))*(x1509)*(x1514)))+(((IkReal(0.0135000000000000))*(x1499)))+(((IkReal(0.246500000000000))*(x1498))));
evalcond[5]=((((cj5)*(x1502)*(x1505)))+(((IkReal(0.0405000000000000))*(r10)*(x1510)))+(((r11)*(x1501)))+(((IkReal(-0.246500000000000))*(x1497)))+(((r12)*(x1515)))+(((IkReal(-1.00000000000000))*(py)))+(((IkReal(0.0135000000000000))*(x1506)))+(((IkReal(-0.0270000000000000))*(x1512)))+(((IkReal(0.0300000000000000))*(x1498)))+(((IkReal(0.0405000000000000))*(r11)*(x1500)))+(((x1503)*(x1505)))+(((IkReal(-1.00000000000000))*(x1503)*(x1512)))+(((IkReal(-1.00000000000000))*(x1502)*(x1506)))+(((IkReal(-1.00000000000000))*(x1502)*(x1518)))+(((IkReal(-1.00000000000000))*(x1505)*(x1514)))+(((x1512)*(x1514))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
IkReal x1520=((r21)*(sj6));
IkReal x1521=((cj5)*(sj4));
IkReal x1522=((IkReal(1.00000000000000))*(cj5));
IkReal x1523=((cj6)*(r20));
IkReal x1524=((IkReal(0.265000000000000))*(sj5));
IkReal x1525=((IkReal(1.00000000000000))*(sj6));
IkReal x1526=((IkReal(0.0135000000000000))*(cj5));
IkReal x1527=((r22)*(sj5));
IkReal x1528=((cj6)*(sj5));
IkReal x1529=((IkReal(1.00000000000000))*(cj4));
IkReal x1530=((cj6)*(r21)*(sj4));
IkReal x1531=((r20)*(sj4)*(sj6));
IkReal x1532=((IkReal(0.0405000000000000))*(cj4)*(cj5));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(4.71238898038469))+(j2)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(-1.00000000000000))+(((sj5)*(x1523)))+(((IkReal(-1.00000000000000))*(r22)*(x1522)))+(((IkReal(-1.00000000000000))*(sj5)*(x1520))));
evalcond[2]=((((IkReal(-1.00000000000000))*(r12)*(x1522)))+(((r10)*(x1528)))+(((IkReal(-1.00000000000000))*(r11)*(sj5)*(x1525))));
evalcond[3]=((((r00)*(x1528)))+(((IkReal(-1.00000000000000))*(r02)*(x1522)))+(((IkReal(-1.00000000000000))*(r01)*(sj5)*(x1525))));
evalcond[4]=((((IkReal(-1.00000000000000))*(sj4)*(x1527)))+(((x1520)*(x1521)))+(((IkReal(-1.00000000000000))*(x1521)*(x1523)))+(((IkReal(-1.00000000000000))*(cj6)*(r21)*(x1529)))+(((IkReal(-1.00000000000000))*(cj4)*(r20)*(x1525))));
evalcond[5]=((x1531)+(x1530)+(((IkReal(-1.00000000000000))*(cj4)*(x1522)*(x1523)))+(((cj4)*(cj5)*(x1520)))+(((IkReal(-1.00000000000000))*(x1527)*(x1529))));
evalcond[6]=((IkReal(-0.0405000000000000))+(((IkReal(0.0270000000000000))*(x1520)))+(((x1523)*(x1526)))+(((IkReal(-0.0405000000000000))*(cj4)*(x1527)))+(((x1520)*(x1532)))+(((x1520)*(x1524)))+(((IkReal(0.265000000000000))*(cj5)*(r22)))+(((IkReal(-1.00000000000000))*(pz)))+(((IkReal(-0.0270000000000000))*(x1523)))+(((IkReal(0.0405000000000000))*(x1530)))+(((IkReal(0.0405000000000000))*(x1531)))+(((IkReal(-1.00000000000000))*(x1523)*(x1524)))+(((IkReal(-1.00000000000000))*(x1520)*(x1526)))+(((IkReal(-1.00000000000000))*(x1523)*(x1532)))+(((IkReal(0.0135000000000000))*(x1527))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x1533=((cj5)*(sj4));
IkReal x1534=((cj6)*(r10));
IkReal x1535=((r12)*(sj5));
IkReal x1536=((cj4)*(cj5));
IkReal x1537=((cj6)*(r11));
IkReal x1538=((IkReal(1.00000000000000))*(sj4));
IkReal x1539=((r10)*(sj6));
IkReal x1540=((IkReal(1.00000000000000))*(r11)*(sj6));
if( IKabs(((((IkReal(-1.00000000000000))*(x1533)*(x1540)))+(((cj4)*(x1539)))+(((cj4)*(x1537)))+(((x1533)*(x1534)))+(((sj4)*(x1535))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(-1.00000000000000))*(x1537)*(x1538)))+(((IkReal(-1.00000000000000))*(x1536)*(x1540)))+(((cj4)*(x1535)))+(((IkReal(-1.00000000000000))*(x1538)*(x1539)))+(((x1534)*(x1536))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IkReal(-1.00000000000000))*(x1533)*(x1540)))+(((cj4)*(x1539)))+(((cj4)*(x1537)))+(((x1533)*(x1534)))+(((sj4)*(x1535)))))+IKsqr(((((IkReal(-1.00000000000000))*(x1537)*(x1538)))+(((IkReal(-1.00000000000000))*(x1536)*(x1540)))+(((cj4)*(x1535)))+(((IkReal(-1.00000000000000))*(x1538)*(x1539)))+(((x1534)*(x1536)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j1array[0]=IKatan2(((((IkReal(-1.00000000000000))*(x1533)*(x1540)))+(((cj4)*(x1539)))+(((cj4)*(x1537)))+(((x1533)*(x1534)))+(((sj4)*(x1535)))), ((((IkReal(-1.00000000000000))*(x1537)*(x1538)))+(((IkReal(-1.00000000000000))*(x1536)*(x1540)))+(((cj4)*(x1535)))+(((IkReal(-1.00000000000000))*(x1538)*(x1539)))+(((x1534)*(x1536)))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
for(int ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
for(int iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[6];
IkReal x1541=IKcos(j1);
IkReal x1542=IKsin(j1);
IkReal x1543=((r02)*(sj5));
IkReal x1544=((IkReal(0.0270000000000000))*(sj6));
IkReal x1545=((IkReal(0.0405000000000000))*(cj4));
IkReal x1546=((IkReal(0.265000000000000))*(sj5));
IkReal x1547=((cj6)*(r00));
IkReal x1548=((r11)*(sj6));
IkReal x1549=((r12)*(sj5));
IkReal x1550=((IkReal(1.00000000000000))*(sj4));
IkReal x1551=((IkReal(1.00000000000000))*(cj4));
IkReal x1552=((cj6)*(r11));
IkReal x1553=((IkReal(0.0405000000000000))*(sj4));
IkReal x1554=((r01)*(sj6));
IkReal x1555=((sj4)*(sj6));
IkReal x1556=((cj5)*(sj4));
IkReal x1557=((cj6)*(r10));
IkReal x1558=((cj6)*(r01));
IkReal x1559=((cj4)*(cj5));
IkReal x1560=((IkReal(0.0135000000000000))*(cj5));
IkReal x1561=((IkReal(0.265000000000000))*(cj5));
IkReal x1562=((r10)*(sj6));
IkReal x1563=((r00)*(sj6));
IkReal x1564=((cj5)*(x1557));
IkReal x1565=((cj5)*(sj6)*(x1545));
evalcond[0]=((((IkReal(-1.00000000000000))*(cj5)*(x1547)*(x1550)))+(((IkReal(-1.00000000000000))*(x1543)*(x1550)))+(x1541)+(((x1554)*(x1556)))+(((IkReal(-1.00000000000000))*(x1551)*(x1563)))+(((IkReal(-1.00000000000000))*(x1551)*(x1558))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x1549)*(x1550)))+(((IkReal(-1.00000000000000))*(x1550)*(x1564)))+(x1542)+(((IkReal(-1.00000000000000))*(x1551)*(x1562)))+(((x1548)*(x1556)))+(((IkReal(-1.00000000000000))*(x1551)*(x1552))));
evalcond[2]=((((sj4)*(x1552)))+(((IkReal(-1.00000000000000))*(x1549)*(x1551)))+(x1541)+(((IkReal(-1.00000000000000))*(x1551)*(x1564)))+(((x1548)*(x1559)))+(((r10)*(x1555))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x1542)))+(((r00)*(x1555)))+(((sj4)*(x1558)))+(((IkReal(-1.00000000000000))*(cj5)*(x1547)*(x1551)))+(((IkReal(-1.00000000000000))*(x1543)*(x1551)))+(((x1554)*(x1559))));
evalcond[4]=((((IkReal(-1.00000000000000))*(x1543)*(x1545)))+(((IkReal(-1.00000000000000))*(x1546)*(x1547)))+(((x1553)*(x1558)))+(((IkReal(0.0300000000000000))*(x1541)))+(((IkReal(-0.0270000000000000))*(x1547)))+(((x1553)*(x1563)))+(((x1547)*(x1560)))+(((IkReal(-1.00000000000000))*(cj5)*(x1545)*(x1547)))+(((IkReal(0.246500000000000))*(x1542)))+(((IkReal(-1.00000000000000))*(px)))+(((IkReal(0.0135000000000000))*(x1543)))+(((x1546)*(x1554)))+(((r02)*(x1561)))+(((IkReal(-1.00000000000000))*(x1554)*(x1560)))+(((r01)*(x1544)))+(((cj5)*(x1545)*(x1554))));
evalcond[5]=((((IkReal(0.0300000000000000))*(x1542)))+(((cj5)*(x1545)*(x1548)))+(((IkReal(-1.00000000000000))*(x1546)*(x1557)))+(((x1552)*(x1553)))+(((x1553)*(x1562)))+(((IkReal(-1.00000000000000))*(x1548)*(x1560)))+(((r12)*(x1561)))+(((IkReal(-1.00000000000000))*(py)))+(((r11)*(x1544)))+(((x1546)*(x1548)))+(((x1557)*(x1560)))+(((IkReal(0.0135000000000000))*(x1549)))+(((IkReal(-1.00000000000000))*(x1545)*(x1549)))+(((IkReal(-1.00000000000000))*(x1545)*(x1564)))+(((IkReal(-0.246500000000000))*(x1541)))+(((IkReal(-0.0270000000000000))*(x1557))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}
}

} else
{
{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x1566=((cj4)*(cj5));
IkReal x1567=((IkReal(1.00000000000000))*(sj6));
IkReal x1568=((cj6)*(r10));
if( IKabs(((((IKabs(cj2) != 0)?((IkReal)1/(cj2)):(IkReal)1.0e30))*(((((cj5)*(r12)))+(((IkReal(-1.00000000000000))*(sj5)*(x1568)))+(((r11)*(sj5)*(sj6))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((x1566)*(x1568)))+(((IkReal(-1.00000000000000))*(cj6)*(r11)*(sj4)))+(((IkReal(-1.00000000000000))*(r10)*(sj4)*(x1567)))+(((IkReal(-1.00000000000000))*(r11)*(x1566)*(x1567)))+(((cj4)*(r12)*(sj5))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IKabs(cj2) != 0)?((IkReal)1/(cj2)):(IkReal)1.0e30))*(((((cj5)*(r12)))+(((IkReal(-1.00000000000000))*(sj5)*(x1568)))+(((r11)*(sj5)*(sj6)))))))+IKsqr(((((x1566)*(x1568)))+(((IkReal(-1.00000000000000))*(cj6)*(r11)*(sj4)))+(((IkReal(-1.00000000000000))*(r10)*(sj4)*(x1567)))+(((IkReal(-1.00000000000000))*(r11)*(x1566)*(x1567)))+(((cj4)*(r12)*(sj5)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j1array[0]=IKatan2(((((IKabs(cj2) != 0)?((IkReal)1/(cj2)):(IkReal)1.0e30))*(((((cj5)*(r12)))+(((IkReal(-1.00000000000000))*(sj5)*(x1568)))+(((r11)*(sj5)*(sj6)))))), ((((x1566)*(x1568)))+(((IkReal(-1.00000000000000))*(cj6)*(r11)*(sj4)))+(((IkReal(-1.00000000000000))*(r10)*(sj4)*(x1567)))+(((IkReal(-1.00000000000000))*(r11)*(x1566)*(x1567)))+(((cj4)*(r12)*(sj5)))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
for(int ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
for(int iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[8];
IkReal x1569=IKcos(j1);
IkReal x1570=IKsin(j1);
IkReal x1571=((r02)*(sj5));
IkReal x1572=((r01)*(sj6));
IkReal x1573=((IkReal(0.265000000000000))*(sj5));
IkReal x1574=((IkReal(1.00000000000000))*(sj2));
IkReal x1575=((r11)*(sj6));
IkReal x1576=((IkReal(0.0405000000000000))*(cj4));
IkReal x1577=((cj6)*(r00));
IkReal x1578=((cj5)*(sj4));
IkReal x1579=((IkReal(1.00000000000000))*(sj4));
IkReal x1580=((r12)*(sj5));
IkReal x1581=((IkReal(1.00000000000000))*(cj4));
IkReal x1582=((cj6)*(r11));
IkReal x1583=((IkReal(0.0405000000000000))*(sj4));
IkReal x1584=((sj4)*(sj6));
IkReal x1585=((IkReal(1.00000000000000))*(cj5));
IkReal x1586=((cj6)*(r10));
IkReal x1587=((cj6)*(r01));
IkReal x1588=((cj4)*(cj5));
IkReal x1589=((IkReal(0.0135000000000000))*(cj5));
IkReal x1590=((IkReal(1.00000000000000))*(sj5));
IkReal x1591=((IkReal(0.265000000000000))*(cj5));
IkReal x1592=((r10)*(sj6));
IkReal x1593=((r00)*(sj6));
IkReal x1594=((cj5)*(x1576));
IkReal x1595=((cj2)*(x1569));
IkReal x1596=((cj5)*(x1586));
IkReal x1597=((cj2)*(x1570));
evalcond[0]=((x1597)+(((IkReal(-1.00000000000000))*(r12)*(x1585)))+(((sj5)*(x1586)))+(((IkReal(-1.00000000000000))*(x1575)*(x1590))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x1572)*(x1590)))+(((IkReal(-1.00000000000000))*(r02)*(x1585)))+(x1595)+(((sj5)*(x1577))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x1571)*(x1579)))+(((x1572)*(x1578)))+(((IkReal(-1.00000000000000))*(x1569)*(x1574)))+(((IkReal(-1.00000000000000))*(x1577)*(x1578)))+(((IkReal(-1.00000000000000))*(x1581)*(x1593)))+(((IkReal(-1.00000000000000))*(x1581)*(x1587))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x1570)*(x1574)))+(((x1575)*(x1578)))+(((IkReal(-1.00000000000000))*(x1578)*(x1586)))+(((IkReal(-1.00000000000000))*(x1579)*(x1580)))+(((IkReal(-1.00000000000000))*(x1581)*(x1592)))+(((IkReal(-1.00000000000000))*(x1581)*(x1582))));
evalcond[4]=((((IkReal(-1.00000000000000))*(x1580)*(x1581)))+(((x1575)*(x1588)))+(((sj4)*(x1582)))+(x1569)+(((IkReal(-1.00000000000000))*(x1581)*(x1596)))+(((r10)*(x1584))));
evalcond[5]=((((IkReal(-1.00000000000000))*(x1571)*(x1581)))+(((sj4)*(x1587)))+(((IkReal(-1.00000000000000))*(cj5)*(x1577)*(x1581)))+(((x1572)*(x1588)))+(((IkReal(-1.00000000000000))*(x1570)))+(((r00)*(x1584))));
evalcond[6]=((((IkReal(0.0270000000000000))*(x1572)))+(((IkReal(-1.00000000000000))*(x1572)*(x1589)))+(((IkReal(-1.00000000000000))*(x1571)*(x1576)))+(((IkReal(0.0300000000000000))*(x1569)))+(((x1572)*(x1573)))+(((IkReal(-0.0270000000000000))*(x1577)))+(((IkReal(-1.00000000000000))*(x1577)*(x1594)))+(((IkReal(-1.00000000000000))*(x1573)*(x1577)))+(((IkReal(0.246500000000000))*(x1570)))+(((x1583)*(x1593)))+(((IkReal(-1.00000000000000))*(px)))+(((x1583)*(x1587)))+(((IkReal(0.0405000000000000))*(x1595)))+(((r02)*(x1591)))+(((x1577)*(x1589)))+(((IkReal(0.0135000000000000))*(x1571)))+(((x1572)*(x1594))));
evalcond[7]=((((IkReal(-1.00000000000000))*(x1573)*(x1586)))+(((x1586)*(x1589)))+(((IkReal(0.0270000000000000))*(x1575)))+(((IkReal(0.0300000000000000))*(x1570)))+(((r12)*(x1591)))+(((x1573)*(x1575)))+(((x1575)*(x1594)))+(((x1582)*(x1583)))+(((x1583)*(x1592)))+(((IkReal(-1.00000000000000))*(py)))+(((IkReal(0.0405000000000000))*(x1597)))+(((IkReal(0.0135000000000000))*(x1580)))+(((IkReal(-0.246500000000000))*(x1569)))+(((IkReal(-1.00000000000000))*(x1586)*(x1594)))+(((IkReal(-1.00000000000000))*(x1576)*(x1580)))+(((IkReal(-1.00000000000000))*(x1575)*(x1589)))+(((IkReal(-0.0270000000000000))*(x1586))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  || IKabs(evalcond[6]) > 0.000001  || IKabs(evalcond[7]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x1598=((cj4)*(cj5));
IkReal x1599=((r01)*(sj6));
IkReal x1600=((IkReal(1.00000000000000))*(cj6)*(r00));
if( IKabs(((((r00)*(sj4)*(sj6)))+(((cj6)*(r01)*(sj4)))+(((x1598)*(x1599)))+(((IkReal(-1.00000000000000))*(cj4)*(r02)*(sj5)))+(((IkReal(-1.00000000000000))*(x1598)*(x1600))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IKabs(cj2) != 0)?((IkReal)1/(cj2)):(IkReal)1.0e30))*(((((sj5)*(x1599)))+(((IkReal(-1.00000000000000))*(sj5)*(x1600)))+(((cj5)*(r02))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((r00)*(sj4)*(sj6)))+(((cj6)*(r01)*(sj4)))+(((x1598)*(x1599)))+(((IkReal(-1.00000000000000))*(cj4)*(r02)*(sj5)))+(((IkReal(-1.00000000000000))*(x1598)*(x1600)))))+IKsqr(((((IKabs(cj2) != 0)?((IkReal)1/(cj2)):(IkReal)1.0e30))*(((((sj5)*(x1599)))+(((IkReal(-1.00000000000000))*(sj5)*(x1600)))+(((cj5)*(r02)))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j1array[0]=IKatan2(((((r00)*(sj4)*(sj6)))+(((cj6)*(r01)*(sj4)))+(((x1598)*(x1599)))+(((IkReal(-1.00000000000000))*(cj4)*(r02)*(sj5)))+(((IkReal(-1.00000000000000))*(x1598)*(x1600)))), ((((IKabs(cj2) != 0)?((IkReal)1/(cj2)):(IkReal)1.0e30))*(((((sj5)*(x1599)))+(((IkReal(-1.00000000000000))*(sj5)*(x1600)))+(((cj5)*(r02)))))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
for(int ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
for(int iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[8];
IkReal x1601=IKcos(j1);
IkReal x1602=IKsin(j1);
IkReal x1603=((r02)*(sj5));
IkReal x1604=((r01)*(sj6));
IkReal x1605=((IkReal(0.265000000000000))*(sj5));
IkReal x1606=((IkReal(1.00000000000000))*(sj2));
IkReal x1607=((r11)*(sj6));
IkReal x1608=((IkReal(0.0405000000000000))*(cj4));
IkReal x1609=((cj6)*(r00));
IkReal x1610=((cj5)*(sj4));
IkReal x1611=((IkReal(1.00000000000000))*(sj4));
IkReal x1612=((r12)*(sj5));
IkReal x1613=((IkReal(1.00000000000000))*(cj4));
IkReal x1614=((cj6)*(r11));
IkReal x1615=((IkReal(0.0405000000000000))*(sj4));
IkReal x1616=((sj4)*(sj6));
IkReal x1617=((IkReal(1.00000000000000))*(cj5));
IkReal x1618=((cj6)*(r10));
IkReal x1619=((cj6)*(r01));
IkReal x1620=((cj4)*(cj5));
IkReal x1621=((IkReal(0.0135000000000000))*(cj5));
IkReal x1622=((IkReal(1.00000000000000))*(sj5));
IkReal x1623=((IkReal(0.265000000000000))*(cj5));
IkReal x1624=((r10)*(sj6));
IkReal x1625=((r00)*(sj6));
IkReal x1626=((cj5)*(x1608));
IkReal x1627=((cj2)*(x1601));
IkReal x1628=((cj5)*(x1618));
IkReal x1629=((cj2)*(x1602));
evalcond[0]=((((sj5)*(x1618)))+(((IkReal(-1.00000000000000))*(r12)*(x1617)))+(x1629)+(((IkReal(-1.00000000000000))*(x1607)*(x1622))));
evalcond[1]=((x1627)+(((sj5)*(x1609)))+(((IkReal(-1.00000000000000))*(r02)*(x1617)))+(((IkReal(-1.00000000000000))*(x1604)*(x1622))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x1609)*(x1610)))+(((IkReal(-1.00000000000000))*(x1601)*(x1606)))+(((IkReal(-1.00000000000000))*(x1603)*(x1611)))+(((x1604)*(x1610)))+(((IkReal(-1.00000000000000))*(x1613)*(x1619)))+(((IkReal(-1.00000000000000))*(x1613)*(x1625))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x1611)*(x1612)))+(((IkReal(-1.00000000000000))*(x1610)*(x1618)))+(((x1607)*(x1610)))+(((IkReal(-1.00000000000000))*(x1602)*(x1606)))+(((IkReal(-1.00000000000000))*(x1613)*(x1614)))+(((IkReal(-1.00000000000000))*(x1613)*(x1624))));
evalcond[4]=((x1601)+(((x1607)*(x1620)))+(((sj4)*(x1614)))+(((r10)*(x1616)))+(((IkReal(-1.00000000000000))*(x1612)*(x1613)))+(((IkReal(-1.00000000000000))*(x1613)*(x1628))));
evalcond[5]=((((IkReal(-1.00000000000000))*(cj5)*(x1609)*(x1613)))+(((r00)*(x1616)))+(((IkReal(-1.00000000000000))*(x1602)))+(((IkReal(-1.00000000000000))*(x1603)*(x1613)))+(((sj4)*(x1619)))+(((x1604)*(x1620))));
evalcond[6]=((((r02)*(x1623)))+(((IkReal(-0.0270000000000000))*(x1609)))+(((IkReal(0.0300000000000000))*(x1601)))+(((x1609)*(x1621)))+(((x1615)*(x1619)))+(((IkReal(-1.00000000000000))*(px)))+(((x1615)*(x1625)))+(((IkReal(0.246500000000000))*(x1602)))+(((IkReal(0.0270000000000000))*(x1604)))+(((IkReal(-1.00000000000000))*(x1609)*(x1626)))+(((IkReal(-1.00000000000000))*(x1605)*(x1609)))+(((IkReal(-1.00000000000000))*(x1603)*(x1608)))+(((x1604)*(x1626)))+(((IkReal(0.0405000000000000))*(x1627)))+(((IkReal(-1.00000000000000))*(x1604)*(x1621)))+(((x1604)*(x1605)))+(((IkReal(0.0135000000000000))*(x1603))));
evalcond[7]=((((IkReal(0.0135000000000000))*(x1612)))+(((IkReal(-0.246500000000000))*(x1601)))+(((IkReal(-0.0270000000000000))*(x1618)))+(((IkReal(0.0300000000000000))*(x1602)))+(((r12)*(x1623)))+(((x1614)*(x1615)))+(((IkReal(-1.00000000000000))*(py)))+(((x1615)*(x1624)))+(((IkReal(0.0270000000000000))*(x1607)))+(((x1618)*(x1621)))+(((x1607)*(x1626)))+(((IkReal(-1.00000000000000))*(x1605)*(x1618)))+(((IkReal(-1.00000000000000))*(x1608)*(x1612)))+(((IkReal(0.0405000000000000))*(x1629)))+(((x1605)*(x1607)))+(((IkReal(-1.00000000000000))*(x1607)*(x1621)))+(((IkReal(-1.00000000000000))*(x1618)*(x1626))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  || IKabs(evalcond[6]) > 0.000001  || IKabs(evalcond[7]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x1630=((sj5)*(sj6));
IkReal x1631=((IkReal(1.00000000000000))*(cj6)*(sj5));
if( IKabs(((gconst12)*(((((cj5)*(r12)))+(((r11)*(x1630)))+(((IkReal(-1.00000000000000))*(r10)*(x1631))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst12)*(((((IkReal(-1.00000000000000))*(r00)*(x1631)))+(((r01)*(x1630)))+(((cj5)*(r02))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j1array[0]=IKatan2(((gconst12)*(((((cj5)*(r12)))+(((r11)*(x1630)))+(((IkReal(-1.00000000000000))*(r10)*(x1631)))))), ((gconst12)*(((((IkReal(-1.00000000000000))*(r00)*(x1631)))+(((r01)*(x1630)))+(((cj5)*(r02)))))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
for(int ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
for(int iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[8];
IkReal x1632=IKcos(j1);
IkReal x1633=IKsin(j1);
IkReal x1634=((r02)*(sj5));
IkReal x1635=((r01)*(sj6));
IkReal x1636=((IkReal(0.265000000000000))*(sj5));
IkReal x1637=((IkReal(1.00000000000000))*(sj2));
IkReal x1638=((r11)*(sj6));
IkReal x1639=((IkReal(0.0405000000000000))*(cj4));
IkReal x1640=((cj6)*(r00));
IkReal x1641=((cj5)*(sj4));
IkReal x1642=((IkReal(1.00000000000000))*(sj4));
IkReal x1643=((r12)*(sj5));
IkReal x1644=((IkReal(1.00000000000000))*(cj4));
IkReal x1645=((cj6)*(r11));
IkReal x1646=((IkReal(0.0405000000000000))*(sj4));
IkReal x1647=((sj4)*(sj6));
IkReal x1648=((IkReal(1.00000000000000))*(cj5));
IkReal x1649=((cj6)*(r10));
IkReal x1650=((cj6)*(r01));
IkReal x1651=((cj4)*(cj5));
IkReal x1652=((IkReal(0.0135000000000000))*(cj5));
IkReal x1653=((IkReal(1.00000000000000))*(sj5));
IkReal x1654=((IkReal(0.265000000000000))*(cj5));
IkReal x1655=((r10)*(sj6));
IkReal x1656=((r00)*(sj6));
IkReal x1657=((cj5)*(x1639));
IkReal x1658=((cj2)*(x1632));
IkReal x1659=((cj5)*(x1649));
IkReal x1660=((cj2)*(x1633));
evalcond[0]=((((IkReal(-1.00000000000000))*(r12)*(x1648)))+(x1660)+(((sj5)*(x1649)))+(((IkReal(-1.00000000000000))*(x1638)*(x1653))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x1635)*(x1653)))+(x1658)+(((sj5)*(x1640)))+(((IkReal(-1.00000000000000))*(r02)*(x1648))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x1644)*(x1650)))+(((IkReal(-1.00000000000000))*(x1644)*(x1656)))+(((IkReal(-1.00000000000000))*(x1634)*(x1642)))+(((IkReal(-1.00000000000000))*(x1632)*(x1637)))+(((x1635)*(x1641)))+(((IkReal(-1.00000000000000))*(x1640)*(x1641))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x1644)*(x1655)))+(((IkReal(-1.00000000000000))*(x1644)*(x1645)))+(((IkReal(-1.00000000000000))*(x1633)*(x1637)))+(((IkReal(-1.00000000000000))*(x1641)*(x1649)))+(((IkReal(-1.00000000000000))*(x1642)*(x1643)))+(((x1638)*(x1641))));
evalcond[4]=((((IkReal(-1.00000000000000))*(x1644)*(x1659)))+(((x1638)*(x1651)))+(((r10)*(x1647)))+(x1632)+(((IkReal(-1.00000000000000))*(x1643)*(x1644)))+(((sj4)*(x1645))));
evalcond[5]=((((IkReal(-1.00000000000000))*(x1634)*(x1644)))+(((IkReal(-1.00000000000000))*(cj5)*(x1640)*(x1644)))+(((IkReal(-1.00000000000000))*(x1633)))+(((r00)*(x1647)))+(((x1635)*(x1651)))+(((sj4)*(x1650))));
evalcond[6]=((((IkReal(0.0405000000000000))*(x1658)))+(((x1640)*(x1652)))+(((IkReal(0.0135000000000000))*(x1634)))+(((IkReal(-1.00000000000000))*(x1634)*(x1639)))+(((IkReal(-1.00000000000000))*(x1635)*(x1652)))+(((r02)*(x1654)))+(((IkReal(-1.00000000000000))*(x1640)*(x1657)))+(((x1646)*(x1650)))+(((x1646)*(x1656)))+(((IkReal(-1.00000000000000))*(px)))+(((x1635)*(x1636)))+(((IkReal(0.0300000000000000))*(x1632)))+(((IkReal(-1.00000000000000))*(x1636)*(x1640)))+(((IkReal(0.246500000000000))*(x1633)))+(((x1635)*(x1657)))+(((IkReal(-0.0270000000000000))*(x1640)))+(((IkReal(0.0270000000000000))*(x1635))));
evalcond[7]=((((IkReal(0.0405000000000000))*(x1660)))+(((r12)*(x1654)))+(((x1638)*(x1657)))+(((x1636)*(x1638)))+(((IkReal(0.0135000000000000))*(x1643)))+(((x1645)*(x1646)))+(((x1646)*(x1655)))+(((IkReal(-1.00000000000000))*(x1639)*(x1643)))+(((IkReal(-1.00000000000000))*(py)))+(((x1649)*(x1652)))+(((IkReal(-1.00000000000000))*(x1638)*(x1652)))+(((IkReal(-1.00000000000000))*(x1649)*(x1657)))+(((IkReal(0.0300000000000000))*(x1633)))+(((IkReal(-1.00000000000000))*(x1636)*(x1649)))+(((IkReal(-0.0270000000000000))*(x1649)))+(((IkReal(0.0270000000000000))*(x1638)))+(((IkReal(-0.246500000000000))*(x1632))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  || IKabs(evalcond[6]) > 0.000001  || IKabs(evalcond[7]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
IkReal x1661=((r21)*(sj6));
IkReal x1662=((cj5)*(sj4));
IkReal x1663=((IkReal(1.00000000000000))*(cj5));
IkReal x1664=((cj6)*(r20));
IkReal x1665=((IkReal(0.265000000000000))*(sj5));
IkReal x1666=((r20)*(sj6));
IkReal x1667=((IkReal(1.00000000000000))*(cj4));
IkReal x1668=((IkReal(0.0135000000000000))*(cj5));
IkReal x1669=((r22)*(sj5));
IkReal x1670=((cj6)*(r21)*(sj4));
IkReal x1671=((IkReal(0.0405000000000000))*(cj4)*(cj5));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.11022302462516e-16))+(j3)), IkReal(6.28318530717959))));
evalcond[1]=((((IkReal(-1.00000000000000))*(sj2)))+(((IkReal(-1.00000000000000))*(sj5)*(x1661)))+(((IkReal(-1.00000000000000))*(r22)*(x1663)))+(((sj5)*(x1664))));
evalcond[2]=((((IkReal(-1.00000000000000))*(cj6)*(r21)*(x1667)))+(cj2)+(((x1661)*(x1662)))+(((IkReal(-1.00000000000000))*(x1662)*(x1664)))+(((IkReal(-1.00000000000000))*(x1666)*(x1667)))+(((IkReal(-1.00000000000000))*(sj4)*(x1669))));
evalcond[3]=((((IkReal(-1.00000000000000))*(cj4)*(x1663)*(x1664)))+(x1670)+(((IkReal(-1.00000000000000))*(x1667)*(x1669)))+(((cj4)*(cj5)*(x1661)))+(((sj4)*(x1666))));
evalcond[4]=((((IkReal(0.0270000000000000))*(x1661)))+(((IkReal(0.0405000000000000))*(sj2)))+(((IkReal(0.0405000000000000))*(x1670)))+(((IkReal(-1.00000000000000))*(x1661)*(x1668)))+(((IkReal(0.0135000000000000))*(x1669)))+(((IkReal(0.265000000000000))*(cj5)*(r22)))+(((IkReal(-1.00000000000000))*(pz)))+(((IkReal(-0.0405000000000000))*(cj4)*(x1669)))+(((IkReal(-1.00000000000000))*(x1664)*(x1671)))+(((IkReal(0.0405000000000000))*(sj4)*(x1666)))+(((x1661)*(x1665)))+(((x1664)*(x1668)))+(((IkReal(-1.00000000000000))*(x1664)*(x1665)))+(((IkReal(-0.0270000000000000))*(x1664)))+(((x1661)*(x1671))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst13;
gconst13=IKsign(cj2);
dummyeval[0]=cj2;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=cj2;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=cj2;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal evalcond[7];
IkReal x1672=((r21)*(sj6));
IkReal x1673=((cj5)*(sj4));
IkReal x1674=((IkReal(1.00000000000000))*(cj5));
IkReal x1675=((cj6)*(r20));
IkReal x1676=((IkReal(0.265000000000000))*(sj5));
IkReal x1677=((IkReal(1.00000000000000))*(sj6));
IkReal x1678=((IkReal(0.0135000000000000))*(cj5));
IkReal x1679=((r22)*(sj5));
IkReal x1680=((cj6)*(sj5));
IkReal x1681=((IkReal(1.00000000000000))*(cj4));
IkReal x1682=((cj6)*(r21)*(sj4));
IkReal x1683=((r20)*(sj4)*(sj6));
IkReal x1684=((IkReal(0.0405000000000000))*(cj4)*(cj5));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.57079632679490))+(j2)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(-1.00000000000000))+(((IkReal(-1.00000000000000))*(sj5)*(x1672)))+(((sj5)*(x1675)))+(((IkReal(-1.00000000000000))*(r22)*(x1674))));
evalcond[2]=((((r10)*(x1680)))+(((IkReal(-1.00000000000000))*(r11)*(sj5)*(x1677)))+(((IkReal(-1.00000000000000))*(r12)*(x1674))));
evalcond[3]=((((r00)*(x1680)))+(((IkReal(-1.00000000000000))*(r02)*(x1674)))+(((IkReal(-1.00000000000000))*(r01)*(sj5)*(x1677))));
evalcond[4]=((((IkReal(-1.00000000000000))*(cj4)*(r20)*(x1677)))+(((IkReal(-1.00000000000000))*(x1673)*(x1675)))+(((IkReal(-1.00000000000000))*(sj4)*(x1679)))+(((x1672)*(x1673)))+(((IkReal(-1.00000000000000))*(cj6)*(r21)*(x1681))));
evalcond[5]=((x1683)+(x1682)+(((IkReal(-1.00000000000000))*(x1679)*(x1681)))+(((cj4)*(cj5)*(x1672)))+(((IkReal(-1.00000000000000))*(cj4)*(x1674)*(x1675))));
evalcond[6]=((IkReal(0.0405000000000000))+(((IkReal(-1.00000000000000))*(x1672)*(x1678)))+(((x1672)*(x1684)))+(((x1675)*(x1678)))+(((IkReal(0.0135000000000000))*(x1679)))+(((IkReal(-1.00000000000000))*(x1675)*(x1684)))+(((IkReal(0.265000000000000))*(cj5)*(r22)))+(((IkReal(-1.00000000000000))*(pz)))+(((IkReal(-0.0270000000000000))*(x1675)))+(((IkReal(-0.0405000000000000))*(cj4)*(x1679)))+(((x1672)*(x1676)))+(((IkReal(0.0405000000000000))*(x1682)))+(((IkReal(0.0405000000000000))*(x1683)))+(((IkReal(0.0270000000000000))*(x1672)))+(((IkReal(-1.00000000000000))*(x1675)*(x1676))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x1685=((cj4)*(cj5));
IkReal x1686=((cj4)*(sj5));
IkReal x1687=((IkReal(1.00000000000000))*(cj6));
IkReal x1688=((sj4)*(sj6));
if( IKabs(((((IkReal(-1.00000000000000))*(r01)*(sj6)*(x1685)))+(((r02)*(x1686)))+(((IkReal(-1.00000000000000))*(r00)*(x1688)))+(((cj6)*(r00)*(x1685)))+(((IkReal(-1.00000000000000))*(r01)*(sj4)*(x1687))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((r10)*(x1688)))+(((IkReal(-1.00000000000000))*(r12)*(x1686)))+(((cj6)*(r11)*(sj4)))+(((r11)*(sj6)*(x1685)))+(((IkReal(-1.00000000000000))*(r10)*(x1685)*(x1687))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IkReal(-1.00000000000000))*(r01)*(sj6)*(x1685)))+(((r02)*(x1686)))+(((IkReal(-1.00000000000000))*(r00)*(x1688)))+(((cj6)*(r00)*(x1685)))+(((IkReal(-1.00000000000000))*(r01)*(sj4)*(x1687)))))+IKsqr(((((r10)*(x1688)))+(((IkReal(-1.00000000000000))*(r12)*(x1686)))+(((cj6)*(r11)*(sj4)))+(((r11)*(sj6)*(x1685)))+(((IkReal(-1.00000000000000))*(r10)*(x1685)*(x1687)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j1array[0]=IKatan2(((((IkReal(-1.00000000000000))*(r01)*(sj6)*(x1685)))+(((r02)*(x1686)))+(((IkReal(-1.00000000000000))*(r00)*(x1688)))+(((cj6)*(r00)*(x1685)))+(((IkReal(-1.00000000000000))*(r01)*(sj4)*(x1687)))), ((((r10)*(x1688)))+(((IkReal(-1.00000000000000))*(r12)*(x1686)))+(((cj6)*(r11)*(sj4)))+(((r11)*(sj6)*(x1685)))+(((IkReal(-1.00000000000000))*(r10)*(x1685)*(x1687)))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
for(int ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
for(int iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[6];
IkReal x1689=IKsin(j1);
IkReal x1690=IKcos(j1);
IkReal x1691=((r02)*(sj5));
IkReal x1692=((cj6)*(sj4));
IkReal x1693=((IkReal(0.0270000000000000))*(sj6));
IkReal x1694=((IkReal(0.0405000000000000))*(cj4));
IkReal x1695=((IkReal(0.265000000000000))*(sj5));
IkReal x1696=((cj6)*(r00));
IkReal x1697=((r11)*(sj6));
IkReal x1698=((r12)*(sj5));
IkReal x1699=((IkReal(1.00000000000000))*(sj4));
IkReal x1700=((IkReal(1.00000000000000))*(cj4));
IkReal x1701=((r01)*(sj6));
IkReal x1702=((sj4)*(sj6));
IkReal x1703=((cj5)*(sj4));
IkReal x1704=((cj6)*(r10));
IkReal x1705=((cj4)*(cj5));
IkReal x1706=((IkReal(0.0135000000000000))*(cj5));
IkReal x1707=((IkReal(0.265000000000000))*(cj5));
IkReal x1708=((IkReal(1.00000000000000))*(cj5));
IkReal x1709=((IkReal(1.00000000000000))*(x1690));
IkReal x1710=((cj5)*(x1704));
IkReal x1711=((cj5)*(sj6)*(x1694));
evalcond[0]=((((IkReal(-1.00000000000000))*(r00)*(x1692)*(x1708)))+(((IkReal(-1.00000000000000))*(r00)*(sj6)*(x1700)))+(((IkReal(-1.00000000000000))*(x1691)*(x1699)))+(((IkReal(-1.00000000000000))*(x1709)))+(((x1701)*(x1703)))+(((IkReal(-1.00000000000000))*(cj6)*(r01)*(x1700))));
evalcond[1]=((((x1697)*(x1703)))+(((IkReal(-1.00000000000000))*(x1698)*(x1699)))+(((IkReal(-1.00000000000000))*(r10)*(sj6)*(x1700)))+(((IkReal(-1.00000000000000))*(cj6)*(r11)*(x1700)))+(((IkReal(-1.00000000000000))*(x1689)))+(((IkReal(-1.00000000000000))*(r10)*(x1692)*(x1708))));
evalcond[2]=((((x1697)*(x1705)))+(((IkReal(-1.00000000000000))*(x1698)*(x1700)))+(((r11)*(x1692)))+(((IkReal(-1.00000000000000))*(x1709)))+(((IkReal(-1.00000000000000))*(x1700)*(x1710)))+(((r10)*(x1702))));
evalcond[3]=((((r01)*(x1692)))+(x1689)+(((IkReal(-1.00000000000000))*(cj5)*(x1696)*(x1700)))+(((r00)*(x1702)))+(((x1701)*(x1705)))+(((IkReal(-1.00000000000000))*(x1691)*(x1700))));
evalcond[4]=((((r01)*(x1693)))+(((cj5)*(x1694)*(x1701)))+(((x1696)*(x1706)))+(((r02)*(x1707)))+(((IkReal(0.246500000000000))*(x1689)))+(((IkReal(0.0405000000000000))*(r01)*(x1692)))+(((IkReal(0.0300000000000000))*(x1690)))+(((IkReal(-1.00000000000000))*(x1691)*(x1694)))+(((IkReal(-1.00000000000000))*(px)))+(((IkReal(0.0135000000000000))*(x1691)))+(((IkReal(0.0405000000000000))*(r00)*(x1702)))+(((x1695)*(x1701)))+(((IkReal(-1.00000000000000))*(x1701)*(x1706)))+(((IkReal(-0.0270000000000000))*(x1696)))+(((IkReal(-1.00000000000000))*(x1695)*(x1696)))+(((IkReal(-1.00000000000000))*(cj5)*(x1694)*(x1696))));
evalcond[5]=((((r12)*(x1707)))+(((IkReal(0.0300000000000000))*(x1689)))+(((cj5)*(x1694)*(x1697)))+(((IkReal(0.0405000000000000))*(r10)*(x1702)))+(((r11)*(x1693)))+(((x1695)*(x1697)))+(((IkReal(-1.00000000000000))*(x1694)*(x1698)))+(((x1704)*(x1706)))+(((IkReal(-1.00000000000000))*(py)))+(((IkReal(0.0135000000000000))*(x1698)))+(((IkReal(-1.00000000000000))*(x1695)*(x1704)))+(((IkReal(-1.00000000000000))*(x1694)*(x1710)))+(((IkReal(0.0405000000000000))*(r11)*(x1692)))+(((IkReal(-0.246500000000000))*(x1690)))+(((IkReal(-0.0270000000000000))*(x1704)))+(((IkReal(-1.00000000000000))*(x1697)*(x1706))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
IkReal x1712=((r21)*(sj6));
IkReal x1713=((cj5)*(sj4));
IkReal x1714=((IkReal(1.00000000000000))*(cj5));
IkReal x1715=((cj6)*(r20));
IkReal x1716=((IkReal(0.265000000000000))*(sj5));
IkReal x1717=((IkReal(1.00000000000000))*(sj6));
IkReal x1718=((IkReal(0.0135000000000000))*(cj5));
IkReal x1719=((r22)*(sj5));
IkReal x1720=((cj6)*(sj5));
IkReal x1721=((IkReal(1.00000000000000))*(cj4));
IkReal x1722=((cj6)*(r21)*(sj4));
IkReal x1723=((r20)*(sj4)*(sj6));
IkReal x1724=((IkReal(0.0405000000000000))*(cj4)*(cj5));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(4.71238898038469))+(j2)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(1.00000000000000))+(((IkReal(-1.00000000000000))*(r22)*(x1714)))+(((sj5)*(x1715)))+(((IkReal(-1.00000000000000))*(sj5)*(x1712))));
evalcond[2]=((((r10)*(x1720)))+(((IkReal(-1.00000000000000))*(r11)*(sj5)*(x1717)))+(((IkReal(-1.00000000000000))*(r12)*(x1714))));
evalcond[3]=((((r00)*(x1720)))+(((IkReal(-1.00000000000000))*(r01)*(sj5)*(x1717)))+(((IkReal(-1.00000000000000))*(r02)*(x1714))));
evalcond[4]=((((IkReal(-1.00000000000000))*(cj4)*(r20)*(x1717)))+(((IkReal(-1.00000000000000))*(sj4)*(x1719)))+(((IkReal(-1.00000000000000))*(x1713)*(x1715)))+(((x1712)*(x1713)))+(((IkReal(-1.00000000000000))*(cj6)*(r21)*(x1721))));
evalcond[5]=((((cj4)*(cj5)*(x1712)))+(x1722)+(x1723)+(((IkReal(-1.00000000000000))*(x1719)*(x1721)))+(((IkReal(-1.00000000000000))*(cj4)*(x1714)*(x1715))));
evalcond[6]=((IkReal(-0.0405000000000000))+(((IkReal(0.0405000000000000))*(x1723)))+(((IkReal(0.0405000000000000))*(x1722)))+(((IkReal(-1.00000000000000))*(x1715)*(x1724)))+(((IkReal(0.0270000000000000))*(x1712)))+(((IkReal(-1.00000000000000))*(x1712)*(x1718)))+(((x1712)*(x1716)))+(((IkReal(-0.0405000000000000))*(cj4)*(x1719)))+(((IkReal(0.265000000000000))*(cj5)*(r22)))+(((IkReal(-1.00000000000000))*(pz)))+(((IkReal(0.0135000000000000))*(x1719)))+(((IkReal(-1.00000000000000))*(x1715)*(x1716)))+(((x1715)*(x1718)))+(((x1712)*(x1724)))+(((IkReal(-0.0270000000000000))*(x1715))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  )
{
{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x1725=((r00)*(sj6));
IkReal x1726=((cj4)*(r01));
IkReal x1727=((r02)*(sj5));
IkReal x1728=((IkReal(1.00000000000000))*(sj4));
IkReal x1729=((cj5)*(sj6));
IkReal x1730=((cj5)*(cj6)*(r00));
if( IKabs(((((IkReal(-1.00000000000000))*(cj6)*(r01)*(x1728)))+(((IkReal(-1.00000000000000))*(x1726)*(x1729)))+(((cj4)*(x1730)))+(((IkReal(-1.00000000000000))*(x1725)*(x1728)))+(((cj4)*(x1727))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(-1.00000000000000))*(r01)*(x1728)*(x1729)))+(((cj6)*(x1726)))+(((sj4)*(x1730)))+(((sj4)*(x1727)))+(((cj4)*(x1725))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IkReal(-1.00000000000000))*(cj6)*(r01)*(x1728)))+(((IkReal(-1.00000000000000))*(x1726)*(x1729)))+(((cj4)*(x1730)))+(((IkReal(-1.00000000000000))*(x1725)*(x1728)))+(((cj4)*(x1727)))))+IKsqr(((((IkReal(-1.00000000000000))*(r01)*(x1728)*(x1729)))+(((cj6)*(x1726)))+(((sj4)*(x1730)))+(((sj4)*(x1727)))+(((cj4)*(x1725)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j1array[0]=IKatan2(((((IkReal(-1.00000000000000))*(cj6)*(r01)*(x1728)))+(((IkReal(-1.00000000000000))*(x1726)*(x1729)))+(((cj4)*(x1730)))+(((IkReal(-1.00000000000000))*(x1725)*(x1728)))+(((cj4)*(x1727)))), ((((IkReal(-1.00000000000000))*(r01)*(x1728)*(x1729)))+(((cj6)*(x1726)))+(((sj4)*(x1730)))+(((sj4)*(x1727)))+(((cj4)*(x1725)))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
for(int ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
for(int iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[6];
IkReal x1731=IKcos(j1);
IkReal x1732=IKsin(j1);
IkReal x1733=((r02)*(sj5));
IkReal x1734=((cj6)*(sj4));
IkReal x1735=((IkReal(0.0270000000000000))*(sj6));
IkReal x1736=((IkReal(0.0405000000000000))*(cj4));
IkReal x1737=((IkReal(0.265000000000000))*(sj5));
IkReal x1738=((cj6)*(r00));
IkReal x1739=((r11)*(sj6));
IkReal x1740=((r12)*(sj5));
IkReal x1741=((IkReal(1.00000000000000))*(sj4));
IkReal x1742=((IkReal(1.00000000000000))*(cj4));
IkReal x1743=((r01)*(sj6));
IkReal x1744=((sj4)*(sj6));
IkReal x1745=((cj5)*(sj4));
IkReal x1746=((cj6)*(r10));
IkReal x1747=((cj4)*(cj5));
IkReal x1748=((IkReal(0.0135000000000000))*(cj5));
IkReal x1749=((IkReal(0.265000000000000))*(cj5));
IkReal x1750=((IkReal(1.00000000000000))*(cj5));
IkReal x1751=((cj5)*(x1746));
IkReal x1752=((cj5)*(sj6)*(x1736));
evalcond[0]=((((IkReal(-1.00000000000000))*(r00)*(sj6)*(x1742)))+(((IkReal(-1.00000000000000))*(r00)*(x1734)*(x1750)))+(((IkReal(-1.00000000000000))*(x1733)*(x1741)))+(x1731)+(((IkReal(-1.00000000000000))*(cj6)*(r01)*(x1742)))+(((x1743)*(x1745))));
evalcond[1]=((((IkReal(-1.00000000000000))*(r10)*(x1734)*(x1750)))+(((x1739)*(x1745)))+(x1732)+(((IkReal(-1.00000000000000))*(r10)*(sj6)*(x1742)))+(((IkReal(-1.00000000000000))*(x1740)*(x1741)))+(((IkReal(-1.00000000000000))*(cj6)*(r11)*(x1742))));
evalcond[2]=((((x1739)*(x1747)))+(((IkReal(-1.00000000000000))*(x1740)*(x1742)))+(((r11)*(x1734)))+(((IkReal(-1.00000000000000))*(x1731)))+(((r10)*(x1744)))+(((IkReal(-1.00000000000000))*(x1742)*(x1751))));
evalcond[3]=((((r01)*(x1734)))+(((IkReal(-1.00000000000000))*(cj5)*(x1738)*(x1742)))+(((IkReal(-1.00000000000000))*(x1733)*(x1742)))+(x1732)+(((x1743)*(x1747)))+(((r00)*(x1744))));
evalcond[4]=((((IkReal(-1.00000000000000))*(x1733)*(x1736)))+(((r01)*(x1735)))+(((cj5)*(x1736)*(x1743)))+(((IkReal(0.0405000000000000))*(r00)*(x1744)))+(((IkReal(-0.0270000000000000))*(x1738)))+(((r02)*(x1749)))+(((IkReal(-1.00000000000000))*(cj5)*(x1736)*(x1738)))+(((IkReal(-1.00000000000000))*(px)))+(((IkReal(-1.00000000000000))*(x1737)*(x1738)))+(((IkReal(0.246500000000000))*(x1732)))+(((IkReal(0.0300000000000000))*(x1731)))+(((x1738)*(x1748)))+(((IkReal(-1.00000000000000))*(x1743)*(x1748)))+(((IkReal(0.0135000000000000))*(x1733)))+(((x1737)*(x1743)))+(((IkReal(0.0405000000000000))*(r01)*(x1734))));
evalcond[5]=((((r12)*(x1749)))+(((IkReal(0.0405000000000000))*(r11)*(x1734)))+(((x1737)*(x1739)))+(((IkReal(-1.00000000000000))*(x1736)*(x1740)))+(((x1746)*(x1748)))+(((IkReal(-1.00000000000000))*(x1736)*(x1751)))+(((IkReal(-0.0270000000000000))*(x1746)))+(((IkReal(-1.00000000000000))*(x1739)*(x1748)))+(((IkReal(-1.00000000000000))*(py)))+(((IkReal(-1.00000000000000))*(x1737)*(x1746)))+(((IkReal(0.0405000000000000))*(r10)*(x1744)))+(((r11)*(x1735)))+(((IkReal(0.0300000000000000))*(x1732)))+(((IkReal(-0.246500000000000))*(x1731)))+(((IkReal(0.0135000000000000))*(x1740)))+(((cj5)*(x1736)*(x1739))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}
}

} else
{
{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x1753=((IkReal(1.00000000000000))*(sj6));
IkReal x1754=((cj6)*(r00));
IkReal x1755=((cj4)*(cj5));
if( IKabs(((((x1754)*(x1755)))+(((IkReal(-1.00000000000000))*(r01)*(x1753)*(x1755)))+(((IkReal(-1.00000000000000))*(r00)*(sj4)*(x1753)))+(((cj4)*(r02)*(sj5)))+(((IkReal(-1.00000000000000))*(cj6)*(r01)*(sj4))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IKabs(cj2) != 0)?((IkReal)1/(cj2)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(r01)*(sj5)*(x1753)))+(((sj5)*(x1754)))+(((IkReal(-1.00000000000000))*(cj5)*(r02))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((x1754)*(x1755)))+(((IkReal(-1.00000000000000))*(r01)*(x1753)*(x1755)))+(((IkReal(-1.00000000000000))*(r00)*(sj4)*(x1753)))+(((cj4)*(r02)*(sj5)))+(((IkReal(-1.00000000000000))*(cj6)*(r01)*(sj4)))))+IKsqr(((((IKabs(cj2) != 0)?((IkReal)1/(cj2)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(r01)*(sj5)*(x1753)))+(((sj5)*(x1754)))+(((IkReal(-1.00000000000000))*(cj5)*(r02)))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j1array[0]=IKatan2(((((x1754)*(x1755)))+(((IkReal(-1.00000000000000))*(r01)*(x1753)*(x1755)))+(((IkReal(-1.00000000000000))*(r00)*(sj4)*(x1753)))+(((cj4)*(r02)*(sj5)))+(((IkReal(-1.00000000000000))*(cj6)*(r01)*(sj4)))), ((((IKabs(cj2) != 0)?((IkReal)1/(cj2)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(r01)*(sj5)*(x1753)))+(((sj5)*(x1754)))+(((IkReal(-1.00000000000000))*(cj5)*(r02)))))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
for(int ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
for(int iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[8];
IkReal x1756=IKcos(j1);
IkReal x1757=IKsin(j1);
IkReal x1758=((r02)*(sj5));
IkReal x1759=((r01)*(sj6));
IkReal x1760=((IkReal(0.265000000000000))*(sj5));
IkReal x1761=((cj6)*(sj4));
IkReal x1762=((r11)*(sj6));
IkReal x1763=((IkReal(0.0405000000000000))*(cj4));
IkReal x1764=((cj6)*(r00));
IkReal x1765=((cj5)*(sj4));
IkReal x1766=((IkReal(1.00000000000000))*(sj5));
IkReal x1767=((IkReal(1.00000000000000))*(cj5));
IkReal x1768=((cj6)*(r10));
IkReal x1769=((IkReal(0.0405000000000000))*(cj2));
IkReal x1770=((r12)*(sj5));
IkReal x1771=((sj4)*(sj6));
IkReal x1772=((IkReal(1.00000000000000))*(cj4));
IkReal x1773=((cj4)*(cj5));
IkReal x1774=((IkReal(0.0135000000000000))*(cj5));
IkReal x1775=((IkReal(0.265000000000000))*(cj5));
IkReal x1776=((IkReal(1.00000000000000))*(x1756));
IkReal x1777=((cj5)*(x1763));
IkReal x1778=((IkReal(1.00000000000000))*(x1757));
evalcond[0]=((((IkReal(-1.00000000000000))*(x1762)*(x1766)))+(((IkReal(-1.00000000000000))*(cj2)*(x1778)))+(((sj5)*(x1768)))+(((IkReal(-1.00000000000000))*(r12)*(x1767))));
evalcond[1]=((((IkReal(-1.00000000000000))*(cj2)*(x1776)))+(((IkReal(-1.00000000000000))*(r02)*(x1767)))+(((sj5)*(x1764)))+(((IkReal(-1.00000000000000))*(x1759)*(x1766))));
evalcond[2]=((((IkReal(-1.00000000000000))*(r00)*(x1761)*(x1767)))+(((x1759)*(x1765)))+(((IkReal(-1.00000000000000))*(r00)*(sj6)*(x1772)))+(((IkReal(-1.00000000000000))*(sj2)*(x1776)))+(((IkReal(-1.00000000000000))*(sj4)*(x1758)))+(((IkReal(-1.00000000000000))*(cj6)*(r01)*(x1772))));
evalcond[3]=((((IkReal(-1.00000000000000))*(r10)*(sj6)*(x1772)))+(((IkReal(-1.00000000000000))*(cj6)*(r11)*(x1772)))+(((IkReal(-1.00000000000000))*(sj2)*(x1778)))+(((x1762)*(x1765)))+(((IkReal(-1.00000000000000))*(r12)*(sj4)*(x1766)))+(((IkReal(-1.00000000000000))*(r10)*(x1761)*(x1767))));
evalcond[4]=((((r11)*(x1761)))+(((r10)*(x1771)))+(((IkReal(-1.00000000000000))*(x1776)))+(((IkReal(-1.00000000000000))*(cj4)*(x1767)*(x1768)))+(((x1762)*(x1773)))+(((IkReal(-1.00000000000000))*(cj4)*(r12)*(x1766))));
evalcond[5]=((x1757)+(((IkReal(-1.00000000000000))*(x1758)*(x1772)))+(((r01)*(x1761)))+(((r00)*(x1771)))+(((IkReal(-1.00000000000000))*(cj4)*(x1764)*(x1767)))+(((x1759)*(x1773))));
evalcond[6]=((((r02)*(x1775)))+(((x1764)*(x1774)))+(((x1759)*(x1760)))+(((IkReal(0.0270000000000000))*(x1759)))+(((IkReal(0.246500000000000))*(x1757)))+(((x1756)*(x1769)))+(((IkReal(-1.00000000000000))*(px)))+(((IkReal(0.0405000000000000))*(r00)*(x1771)))+(((IkReal(-1.00000000000000))*(x1759)*(x1774)))+(((IkReal(0.0300000000000000))*(x1756)))+(((IkReal(-1.00000000000000))*(x1760)*(x1764)))+(((IkReal(-1.00000000000000))*(x1764)*(x1777)))+(((IkReal(-1.00000000000000))*(x1758)*(x1763)))+(((IkReal(0.0405000000000000))*(r01)*(x1761)))+(((x1759)*(x1777)))+(((IkReal(0.0135000000000000))*(x1758)))+(((IkReal(-0.0270000000000000))*(x1764))));
evalcond[7]=((((IkReal(-1.00000000000000))*(x1762)*(x1774)))+(((r12)*(x1775)))+(((IkReal(0.0405000000000000))*(r10)*(x1771)))+(((IkReal(-1.00000000000000))*(x1763)*(x1770)))+(((IkReal(-1.00000000000000))*(py)))+(((x1757)*(x1769)))+(((x1762)*(x1777)))+(((IkReal(0.0300000000000000))*(x1757)))+(((IkReal(-1.00000000000000))*(x1760)*(x1768)))+(((IkReal(0.0135000000000000))*(x1770)))+(((IkReal(0.0405000000000000))*(r11)*(x1761)))+(((IkReal(-1.00000000000000))*(x1768)*(x1777)))+(((x1768)*(x1774)))+(((IkReal(0.0270000000000000))*(x1762)))+(((x1760)*(x1762)))+(((IkReal(-0.0270000000000000))*(x1768)))+(((IkReal(-0.246500000000000))*(x1756))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  || IKabs(evalcond[6]) > 0.000001  || IKabs(evalcond[7]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x1779=((cj4)*(cj5));
IkReal x1780=((r11)*(sj6));
IkReal x1781=((cj6)*(r10));
IkReal x1782=((IkReal(1.00000000000000))*(r12));
if( IKabs(((((IKabs(cj2) != 0)?((IkReal)1/(cj2)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(cj5)*(x1782)))+(((IkReal(-1.00000000000000))*(sj5)*(x1780)))+(((sj5)*(x1781))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(-1.00000000000000))*(cj4)*(sj5)*(x1782)))+(((r10)*(sj4)*(sj6)))+(((x1779)*(x1780)))+(((cj6)*(r11)*(sj4)))+(((IkReal(-1.00000000000000))*(x1779)*(x1781))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IKabs(cj2) != 0)?((IkReal)1/(cj2)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(cj5)*(x1782)))+(((IkReal(-1.00000000000000))*(sj5)*(x1780)))+(((sj5)*(x1781)))))))+IKsqr(((((IkReal(-1.00000000000000))*(cj4)*(sj5)*(x1782)))+(((r10)*(sj4)*(sj6)))+(((x1779)*(x1780)))+(((cj6)*(r11)*(sj4)))+(((IkReal(-1.00000000000000))*(x1779)*(x1781)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j1array[0]=IKatan2(((((IKabs(cj2) != 0)?((IkReal)1/(cj2)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(cj5)*(x1782)))+(((IkReal(-1.00000000000000))*(sj5)*(x1780)))+(((sj5)*(x1781)))))), ((((IkReal(-1.00000000000000))*(cj4)*(sj5)*(x1782)))+(((r10)*(sj4)*(sj6)))+(((x1779)*(x1780)))+(((cj6)*(r11)*(sj4)))+(((IkReal(-1.00000000000000))*(x1779)*(x1781)))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
for(int ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
for(int iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[8];
IkReal x1783=IKcos(j1);
IkReal x1784=IKsin(j1);
IkReal x1785=((r02)*(sj5));
IkReal x1786=((r01)*(sj6));
IkReal x1787=((IkReal(0.265000000000000))*(sj5));
IkReal x1788=((cj6)*(sj4));
IkReal x1789=((r11)*(sj6));
IkReal x1790=((IkReal(0.0405000000000000))*(cj4));
IkReal x1791=((cj6)*(r00));
IkReal x1792=((cj5)*(sj4));
IkReal x1793=((IkReal(1.00000000000000))*(sj5));
IkReal x1794=((IkReal(1.00000000000000))*(cj5));
IkReal x1795=((cj6)*(r10));
IkReal x1796=((IkReal(0.0405000000000000))*(cj2));
IkReal x1797=((r12)*(sj5));
IkReal x1798=((sj4)*(sj6));
IkReal x1799=((IkReal(1.00000000000000))*(cj4));
IkReal x1800=((cj4)*(cj5));
IkReal x1801=((IkReal(0.0135000000000000))*(cj5));
IkReal x1802=((IkReal(0.265000000000000))*(cj5));
IkReal x1803=((IkReal(1.00000000000000))*(x1783));
IkReal x1804=((cj5)*(x1790));
IkReal x1805=((IkReal(1.00000000000000))*(x1784));
evalcond[0]=((((IkReal(-1.00000000000000))*(cj2)*(x1805)))+(((IkReal(-1.00000000000000))*(r12)*(x1794)))+(((IkReal(-1.00000000000000))*(x1789)*(x1793)))+(((sj5)*(x1795))));
evalcond[1]=((((IkReal(-1.00000000000000))*(cj2)*(x1803)))+(((IkReal(-1.00000000000000))*(x1786)*(x1793)))+(((IkReal(-1.00000000000000))*(r02)*(x1794)))+(((sj5)*(x1791))));
evalcond[2]=((((IkReal(-1.00000000000000))*(r00)*(sj6)*(x1799)))+(((IkReal(-1.00000000000000))*(r00)*(x1788)*(x1794)))+(((IkReal(-1.00000000000000))*(cj6)*(r01)*(x1799)))+(((IkReal(-1.00000000000000))*(sj2)*(x1803)))+(((IkReal(-1.00000000000000))*(sj4)*(x1785)))+(((x1786)*(x1792))));
evalcond[3]=((((IkReal(-1.00000000000000))*(r12)*(sj4)*(x1793)))+(((x1789)*(x1792)))+(((IkReal(-1.00000000000000))*(r10)*(x1788)*(x1794)))+(((IkReal(-1.00000000000000))*(r10)*(sj6)*(x1799)))+(((IkReal(-1.00000000000000))*(cj6)*(r11)*(x1799)))+(((IkReal(-1.00000000000000))*(sj2)*(x1805))));
evalcond[4]=((((r10)*(x1798)))+(((IkReal(-1.00000000000000))*(cj4)*(r12)*(x1793)))+(((IkReal(-1.00000000000000))*(x1803)))+(((IkReal(-1.00000000000000))*(cj4)*(x1794)*(x1795)))+(((x1789)*(x1800)))+(((r11)*(x1788))));
evalcond[5]=((((r00)*(x1798)))+(x1784)+(((x1786)*(x1800)))+(((IkReal(-1.00000000000000))*(x1785)*(x1799)))+(((IkReal(-1.00000000000000))*(cj4)*(x1791)*(x1794)))+(((r01)*(x1788))));
evalcond[6]=((((x1783)*(x1796)))+(((IkReal(-1.00000000000000))*(x1787)*(x1791)))+(((IkReal(0.0135000000000000))*(x1785)))+(((IkReal(0.0405000000000000))*(r01)*(x1788)))+(((x1786)*(x1804)))+(((IkReal(0.0405000000000000))*(r00)*(x1798)))+(((IkReal(-0.0270000000000000))*(x1791)))+(((IkReal(-1.00000000000000))*(x1785)*(x1790)))+(((IkReal(-1.00000000000000))*(px)))+(((r02)*(x1802)))+(((IkReal(0.246500000000000))*(x1784)))+(((IkReal(-1.00000000000000))*(x1791)*(x1804)))+(((IkReal(-1.00000000000000))*(x1786)*(x1801)))+(((IkReal(0.0300000000000000))*(x1783)))+(((x1786)*(x1787)))+(((IkReal(0.0270000000000000))*(x1786)))+(((x1791)*(x1801))));
evalcond[7]=((((IkReal(-1.00000000000000))*(x1787)*(x1795)))+(((IkReal(-1.00000000000000))*(x1789)*(x1801)))+(((IkReal(0.0135000000000000))*(x1797)))+(((IkReal(-1.00000000000000))*(x1790)*(x1797)))+(((x1795)*(x1801)))+(((IkReal(-1.00000000000000))*(x1795)*(x1804)))+(((IkReal(0.0405000000000000))*(r11)*(x1788)))+(((IkReal(-0.0270000000000000))*(x1795)))+(((IkReal(-1.00000000000000))*(py)))+(((x1787)*(x1789)))+(((r12)*(x1802)))+(((IkReal(-0.246500000000000))*(x1783)))+(((x1789)*(x1804)))+(((x1784)*(x1796)))+(((IkReal(0.0405000000000000))*(r10)*(x1798)))+(((IkReal(0.0300000000000000))*(x1784)))+(((IkReal(0.0270000000000000))*(x1789))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  || IKabs(evalcond[6]) > 0.000001  || IKabs(evalcond[7]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x1806=((IkReal(1.00000000000000))*(cj5));
IkReal x1807=((cj6)*(sj5));
IkReal x1808=((IkReal(1.00000000000000))*(sj5)*(sj6));
if( IKabs(((gconst13)*(((((IkReal(-1.00000000000000))*(r12)*(x1806)))+(((r10)*(x1807)))+(((IkReal(-1.00000000000000))*(r11)*(x1808))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst13)*(((((IkReal(-1.00000000000000))*(r01)*(x1808)))+(((IkReal(-1.00000000000000))*(r02)*(x1806)))+(((r00)*(x1807))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j1array[0]=IKatan2(((gconst13)*(((((IkReal(-1.00000000000000))*(r12)*(x1806)))+(((r10)*(x1807)))+(((IkReal(-1.00000000000000))*(r11)*(x1808)))))), ((gconst13)*(((((IkReal(-1.00000000000000))*(r01)*(x1808)))+(((IkReal(-1.00000000000000))*(r02)*(x1806)))+(((r00)*(x1807)))))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
for(int ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
for(int iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[8];
IkReal x1809=IKcos(j1);
IkReal x1810=IKsin(j1);
IkReal x1811=((r02)*(sj5));
IkReal x1812=((r01)*(sj6));
IkReal x1813=((IkReal(0.265000000000000))*(sj5));
IkReal x1814=((cj6)*(sj4));
IkReal x1815=((r11)*(sj6));
IkReal x1816=((IkReal(0.0405000000000000))*(cj4));
IkReal x1817=((cj6)*(r00));
IkReal x1818=((cj5)*(sj4));
IkReal x1819=((IkReal(1.00000000000000))*(sj5));
IkReal x1820=((IkReal(1.00000000000000))*(cj5));
IkReal x1821=((cj6)*(r10));
IkReal x1822=((IkReal(0.0405000000000000))*(cj2));
IkReal x1823=((r12)*(sj5));
IkReal x1824=((sj4)*(sj6));
IkReal x1825=((IkReal(1.00000000000000))*(cj4));
IkReal x1826=((cj4)*(cj5));
IkReal x1827=((IkReal(0.0135000000000000))*(cj5));
IkReal x1828=((IkReal(0.265000000000000))*(cj5));
IkReal x1829=((IkReal(1.00000000000000))*(x1809));
IkReal x1830=((cj5)*(x1816));
IkReal x1831=((IkReal(1.00000000000000))*(x1810));
evalcond[0]=((((IkReal(-1.00000000000000))*(r12)*(x1820)))+(((IkReal(-1.00000000000000))*(x1815)*(x1819)))+(((IkReal(-1.00000000000000))*(cj2)*(x1831)))+(((sj5)*(x1821))));
evalcond[1]=((((IkReal(-1.00000000000000))*(cj2)*(x1829)))+(((sj5)*(x1817)))+(((IkReal(-1.00000000000000))*(x1812)*(x1819)))+(((IkReal(-1.00000000000000))*(r02)*(x1820))));
evalcond[2]=((((IkReal(-1.00000000000000))*(r00)*(x1814)*(x1820)))+(((IkReal(-1.00000000000000))*(sj4)*(x1811)))+(((x1812)*(x1818)))+(((IkReal(-1.00000000000000))*(cj6)*(r01)*(x1825)))+(((IkReal(-1.00000000000000))*(sj2)*(x1829)))+(((IkReal(-1.00000000000000))*(r00)*(sj6)*(x1825))));
evalcond[3]=((((IkReal(-1.00000000000000))*(cj6)*(r11)*(x1825)))+(((IkReal(-1.00000000000000))*(r10)*(sj6)*(x1825)))+(((IkReal(-1.00000000000000))*(r12)*(sj4)*(x1819)))+(((IkReal(-1.00000000000000))*(sj2)*(x1831)))+(((IkReal(-1.00000000000000))*(r10)*(x1814)*(x1820)))+(((x1815)*(x1818))));
evalcond[4]=((((IkReal(-1.00000000000000))*(x1829)))+(((r10)*(x1824)))+(((IkReal(-1.00000000000000))*(cj4)*(r12)*(x1819)))+(((IkReal(-1.00000000000000))*(cj4)*(x1820)*(x1821)))+(((r11)*(x1814)))+(((x1815)*(x1826))));
evalcond[5]=((((IkReal(-1.00000000000000))*(x1811)*(x1825)))+(((x1812)*(x1826)))+(((r00)*(x1824)))+(((IkReal(-1.00000000000000))*(cj4)*(x1817)*(x1820)))+(((r01)*(x1814)))+(x1810));
evalcond[6]=((((IkReal(0.0135000000000000))*(x1811)))+(((IkReal(0.246500000000000))*(x1810)))+(((IkReal(0.0405000000000000))*(r01)*(x1814)))+(((IkReal(-1.00000000000000))*(x1817)*(x1830)))+(((IkReal(-1.00000000000000))*(x1813)*(x1817)))+(((IkReal(0.0270000000000000))*(x1812)))+(((IkReal(-0.0270000000000000))*(x1817)))+(((IkReal(-1.00000000000000))*(x1812)*(x1827)))+(((IkReal(-1.00000000000000))*(x1811)*(x1816)))+(((x1812)*(x1813)))+(((IkReal(0.0300000000000000))*(x1809)))+(((IkReal(-1.00000000000000))*(px)))+(((r02)*(x1828)))+(((x1809)*(x1822)))+(((IkReal(0.0405000000000000))*(r00)*(x1824)))+(((x1812)*(x1830)))+(((x1817)*(x1827))));
evalcond[7]=((((IkReal(0.0300000000000000))*(x1810)))+(((IkReal(-0.0270000000000000))*(x1821)))+(((IkReal(0.0270000000000000))*(x1815)))+(((IkReal(-1.00000000000000))*(x1813)*(x1821)))+(((x1813)*(x1815)))+(((IkReal(-0.246500000000000))*(x1809)))+(((IkReal(0.0135000000000000))*(x1823)))+(((IkReal(0.0405000000000000))*(r11)*(x1814)))+(((IkReal(-1.00000000000000))*(py)))+(((IkReal(0.0405000000000000))*(r10)*(x1824)))+(((x1821)*(x1827)))+(((x1810)*(x1822)))+(((IkReal(-1.00000000000000))*(x1816)*(x1823)))+(((IkReal(-1.00000000000000))*(x1815)*(x1827)))+(((IkReal(-1.00000000000000))*(x1821)*(x1830)))+(((r12)*(x1828)))+(((x1815)*(x1830))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  || IKabs(evalcond[6]) > 0.000001  || IKabs(evalcond[7]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}
}
}
}

} else
{
{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x1832=((IKabs(sj2) != 0)?((IkReal)1/(sj2)):(IkReal)1.0e30);
IkReal x1833=((IkReal(1.00000000000000))*(sj6));
IkReal x1834=((sj2)*(sj5));
IkReal x1835=((cj4)*(r00));
IkReal x1836=((IkReal(1.00000000000000))*(cj6));
IkReal x1837=((cj5)*(sj4));
IkReal x1838=((cj2)*(cj3));
IkReal x1839=((cj4)*(r01));
IkReal x1840=((r01)*(sj6));
IkReal x1841=((IkReal(1.00000000000000))*(r02)*(sj4)*(sj5));
if( IKabs(((x1832)*(((IKabs(sj3) != 0)?((IkReal)1/(sj3)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(r01)*(x1833)*(x1834)))+(((x1837)*(x1838)*(x1840)))+(((IkReal(-1.00000000000000))*(cj5)*(r02)*(sj2)))+(((IkReal(-1.00000000000000))*(x1836)*(x1838)*(x1839)))+(((IkReal(-1.00000000000000))*(r00)*(x1836)*(x1837)*(x1838)))+(((IkReal(-1.00000000000000))*(x1833)*(x1835)*(x1838)))+(((cj6)*(r00)*(x1834)))+(((IkReal(-1.00000000000000))*(x1838)*(x1841))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((x1832)*(((((x1837)*(x1840)))+(((IkReal(-1.00000000000000))*(x1833)*(x1835)))+(((IkReal(-1.00000000000000))*(x1841)))+(((IkReal(-1.00000000000000))*(x1836)*(x1839)))+(((IkReal(-1.00000000000000))*(r00)*(x1836)*(x1837))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((x1832)*(((IKabs(sj3) != 0)?((IkReal)1/(sj3)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(r01)*(x1833)*(x1834)))+(((x1837)*(x1838)*(x1840)))+(((IkReal(-1.00000000000000))*(cj5)*(r02)*(sj2)))+(((IkReal(-1.00000000000000))*(x1836)*(x1838)*(x1839)))+(((IkReal(-1.00000000000000))*(r00)*(x1836)*(x1837)*(x1838)))+(((IkReal(-1.00000000000000))*(x1833)*(x1835)*(x1838)))+(((cj6)*(r00)*(x1834)))+(((IkReal(-1.00000000000000))*(x1838)*(x1841)))))))+IKsqr(((x1832)*(((((x1837)*(x1840)))+(((IkReal(-1.00000000000000))*(x1833)*(x1835)))+(((IkReal(-1.00000000000000))*(x1841)))+(((IkReal(-1.00000000000000))*(x1836)*(x1839)))+(((IkReal(-1.00000000000000))*(r00)*(x1836)*(x1837)))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j1array[0]=IKatan2(((x1832)*(((IKabs(sj3) != 0)?((IkReal)1/(sj3)):(IkReal)1.0e30))*(((((IkReal(-1.00000000000000))*(r01)*(x1833)*(x1834)))+(((x1837)*(x1838)*(x1840)))+(((IkReal(-1.00000000000000))*(cj5)*(r02)*(sj2)))+(((IkReal(-1.00000000000000))*(x1836)*(x1838)*(x1839)))+(((IkReal(-1.00000000000000))*(r00)*(x1836)*(x1837)*(x1838)))+(((IkReal(-1.00000000000000))*(x1833)*(x1835)*(x1838)))+(((cj6)*(r00)*(x1834)))+(((IkReal(-1.00000000000000))*(x1838)*(x1841)))))), ((x1832)*(((((x1837)*(x1840)))+(((IkReal(-1.00000000000000))*(x1833)*(x1835)))+(((IkReal(-1.00000000000000))*(x1841)))+(((IkReal(-1.00000000000000))*(x1836)*(x1839)))+(((IkReal(-1.00000000000000))*(r00)*(x1836)*(x1837)))))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
for(int ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
for(int iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[8];
IkReal x1842=IKcos(j1);
IkReal x1843=IKsin(j1);
IkReal x1844=((r02)*(sj5));
IkReal x1845=((r01)*(sj6));
IkReal x1846=((IkReal(0.265000000000000))*(sj5));
IkReal x1847=((r11)*(sj6));
IkReal x1848=((IkReal(0.0405000000000000))*(cj4));
IkReal x1849=((cj6)*(r00));
IkReal x1850=((cj5)*(sj4));
IkReal x1851=((IkReal(1.00000000000000))*(sj5));
IkReal x1852=((cj4)*(cj5));
IkReal x1853=((r12)*(sj5));
IkReal x1854=((sj4)*(sj6));
IkReal x1855=((cj6)*(r10));
IkReal x1856=((IkReal(1.00000000000000))*(cj4));
IkReal x1857=((cj6)*(r11));
IkReal x1858=((cj6)*(r01));
IkReal x1859=((IkReal(0.0135000000000000))*(cj5));
IkReal x1860=((cj5)*(r02));
IkReal x1861=((cj5)*(r12));
IkReal x1862=((IkReal(1.00000000000000))*(x1843));
IkReal x1863=((cj5)*(x1848));
IkReal x1864=((cj2)*(x1842));
IkReal x1865=((IkReal(0.0405000000000000))*(cj6)*(sj4));
IkReal x1866=((IkReal(1.00000000000000))*(x1855));
IkReal x1867=((cj2)*(x1843));
evalcond[0]=((((cj3)*(x1867)))+(((sj3)*(x1842)))+(((sj5)*(x1855)))+(((IkReal(-1.00000000000000))*(x1861)))+(((IkReal(-1.00000000000000))*(x1847)*(x1851))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x1845)*(x1851)))+(((cj3)*(x1864)))+(((sj5)*(x1849)))+(((IkReal(-1.00000000000000))*(sj3)*(x1862)))+(((IkReal(-1.00000000000000))*(x1860))));
evalcond[2]=((((IkReal(-1.00000000000000))*(r00)*(sj6)*(x1856)))+(((IkReal(-1.00000000000000))*(x1849)*(x1850)))+(((IkReal(-1.00000000000000))*(sj4)*(x1844)))+(((IkReal(-1.00000000000000))*(x1856)*(x1858)))+(((x1845)*(x1850)))+(((IkReal(-1.00000000000000))*(sj2)*(x1842))));
evalcond[3]=((((IkReal(-1.00000000000000))*(r12)*(sj4)*(x1851)))+(((IkReal(-1.00000000000000))*(x1850)*(x1866)))+(((x1847)*(x1850)))+(((IkReal(-1.00000000000000))*(r10)*(sj6)*(x1856)))+(((IkReal(-1.00000000000000))*(x1856)*(x1857)))+(((IkReal(-1.00000000000000))*(sj2)*(x1862))));
evalcond[4]=((((r10)*(x1854)))+(((sj4)*(x1857)))+(((x1847)*(x1852)))+(((cj3)*(x1842)))+(((IkReal(-1.00000000000000))*(x1852)*(x1866)))+(((IkReal(-1.00000000000000))*(cj2)*(sj3)*(x1862)))+(((IkReal(-1.00000000000000))*(cj4)*(r12)*(x1851))));
evalcond[5]=((((IkReal(-1.00000000000000))*(x1849)*(x1852)))+(((IkReal(-1.00000000000000))*(sj3)*(x1864)))+(((sj4)*(x1858)))+(((r00)*(x1854)))+(((x1845)*(x1852)))+(((IkReal(-1.00000000000000))*(cj3)*(x1862)))+(((IkReal(-1.00000000000000))*(x1844)*(x1856))));
evalcond[6]=((((IkReal(-1.00000000000000))*(x1845)*(x1859)))+(((IkReal(0.246500000000000))*(x1843)))+(((IkReal(0.0300000000000000))*(x1842)))+(((IkReal(0.265000000000000))*(x1860)))+(((IkReal(0.0405000000000000))*(sj4)*(x1858)))+(((x1845)*(x1846)))+(((x1849)*(x1859)))+(((IkReal(-0.0270000000000000))*(x1849)))+(((IkReal(0.0135000000000000))*(x1844)))+(((IkReal(0.0405000000000000))*(x1864)))+(((IkReal(0.0270000000000000))*(x1845)))+(((IkReal(-1.00000000000000))*(px)))+(((IkReal(-1.00000000000000))*(x1849)*(x1863)))+(((IkReal(0.0405000000000000))*(r00)*(x1854)))+(((IkReal(-1.00000000000000))*(x1844)*(x1848)))+(((IkReal(-1.00000000000000))*(x1846)*(x1849)))+(((x1845)*(x1863))));
evalcond[7]=((((IkReal(-1.00000000000000))*(x1848)*(x1853)))+(((IkReal(0.0300000000000000))*(x1843)))+(((IkReal(0.265000000000000))*(x1861)))+(((IkReal(-1.00000000000000))*(x1855)*(x1863)))+(((IkReal(-0.0270000000000000))*(x1855)))+(((IkReal(0.0405000000000000))*(sj4)*(x1857)))+(((IkReal(0.0405000000000000))*(x1867)))+(((IkReal(0.0135000000000000))*(x1853)))+(((IkReal(0.0270000000000000))*(x1847)))+(((x1855)*(x1859)))+(((x1847)*(x1863)))+(((IkReal(-1.00000000000000))*(py)))+(((IkReal(0.0405000000000000))*(r10)*(x1854)))+(((x1846)*(x1847)))+(((IkReal(-0.246500000000000))*(x1842)))+(((IkReal(-1.00000000000000))*(x1846)*(x1855)))+(((IkReal(-1.00000000000000))*(x1847)*(x1859))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  || IKabs(evalcond[6]) > 0.000001  || IKabs(evalcond[7]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x1868=((IKabs(sj2) != 0)?((IkReal)1/(sj2)):(IkReal)1.0e30);
IkReal x1869=((r12)*(sj5));
IkReal x1870=((IkReal(1.00000000000000))*(r10));
IkReal x1871=((cj4)*(sj6));
IkReal x1872=((sj2)*(sj5));
IkReal x1873=((cj2)*(cj3));
IkReal x1874=((cj5)*(cj6));
IkReal x1875=((sj4)*(x1873));
IkReal x1876=((cj5)*(r11)*(sj6));
IkReal x1877=((cj4)*(cj6)*(r11));
if( IKabs(((x1868)*(((((IkReal(-1.00000000000000))*(x1870)*(x1871)))+(((IkReal(-1.00000000000000))*(sj4)*(x1870)*(x1874)))+(((IkReal(-1.00000000000000))*(x1877)))+(((IkReal(-1.00000000000000))*(sj4)*(x1869)))+(((sj4)*(x1876))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((x1868)*(((IKabs(sj3) != 0)?((IkReal)1/(sj3)):(IkReal)1.0e30))*(((((cj5)*(r12)*(sj2)))+(((IkReal(-1.00000000000000))*(cj6)*(x1870)*(x1872)))+(((r10)*(x1871)*(x1873)))+(((r11)*(sj6)*(x1872)))+(((x1873)*(x1877)))+(((x1869)*(x1875)))+(((IkReal(-1.00000000000000))*(x1875)*(x1876)))+(((r10)*(x1874)*(x1875))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((x1868)*(((((IkReal(-1.00000000000000))*(x1870)*(x1871)))+(((IkReal(-1.00000000000000))*(sj4)*(x1870)*(x1874)))+(((IkReal(-1.00000000000000))*(x1877)))+(((IkReal(-1.00000000000000))*(sj4)*(x1869)))+(((sj4)*(x1876)))))))+IKsqr(((x1868)*(((IKabs(sj3) != 0)?((IkReal)1/(sj3)):(IkReal)1.0e30))*(((((cj5)*(r12)*(sj2)))+(((IkReal(-1.00000000000000))*(cj6)*(x1870)*(x1872)))+(((r10)*(x1871)*(x1873)))+(((r11)*(sj6)*(x1872)))+(((x1873)*(x1877)))+(((x1869)*(x1875)))+(((IkReal(-1.00000000000000))*(x1875)*(x1876)))+(((r10)*(x1874)*(x1875)))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j1array[0]=IKatan2(((x1868)*(((((IkReal(-1.00000000000000))*(x1870)*(x1871)))+(((IkReal(-1.00000000000000))*(sj4)*(x1870)*(x1874)))+(((IkReal(-1.00000000000000))*(x1877)))+(((IkReal(-1.00000000000000))*(sj4)*(x1869)))+(((sj4)*(x1876)))))), ((x1868)*(((IKabs(sj3) != 0)?((IkReal)1/(sj3)):(IkReal)1.0e30))*(((((cj5)*(r12)*(sj2)))+(((IkReal(-1.00000000000000))*(cj6)*(x1870)*(x1872)))+(((r10)*(x1871)*(x1873)))+(((r11)*(sj6)*(x1872)))+(((x1873)*(x1877)))+(((x1869)*(x1875)))+(((IkReal(-1.00000000000000))*(x1875)*(x1876)))+(((r10)*(x1874)*(x1875)))))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
for(int ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
for(int iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[8];
IkReal x1878=IKcos(j1);
IkReal x1879=IKsin(j1);
IkReal x1880=((r02)*(sj5));
IkReal x1881=((r01)*(sj6));
IkReal x1882=((IkReal(0.265000000000000))*(sj5));
IkReal x1883=((r11)*(sj6));
IkReal x1884=((IkReal(0.0405000000000000))*(cj4));
IkReal x1885=((cj6)*(r00));
IkReal x1886=((cj5)*(sj4));
IkReal x1887=((IkReal(1.00000000000000))*(sj5));
IkReal x1888=((cj4)*(cj5));
IkReal x1889=((r12)*(sj5));
IkReal x1890=((sj4)*(sj6));
IkReal x1891=((cj6)*(r10));
IkReal x1892=((IkReal(1.00000000000000))*(cj4));
IkReal x1893=((cj6)*(r11));
IkReal x1894=((cj6)*(r01));
IkReal x1895=((IkReal(0.0135000000000000))*(cj5));
IkReal x1896=((cj5)*(r02));
IkReal x1897=((cj5)*(r12));
IkReal x1898=((IkReal(1.00000000000000))*(x1879));
IkReal x1899=((cj5)*(x1884));
IkReal x1900=((cj2)*(x1878));
IkReal x1901=((IkReal(0.0405000000000000))*(cj6)*(sj4));
IkReal x1902=((IkReal(1.00000000000000))*(x1891));
IkReal x1903=((cj2)*(x1879));
evalcond[0]=((((sj5)*(x1891)))+(((IkReal(-1.00000000000000))*(x1883)*(x1887)))+(((sj3)*(x1878)))+(((cj3)*(x1903)))+(((IkReal(-1.00000000000000))*(x1897))));
evalcond[1]=((((IkReal(-1.00000000000000))*(sj3)*(x1898)))+(((sj5)*(x1885)))+(((cj3)*(x1900)))+(((IkReal(-1.00000000000000))*(x1896)))+(((IkReal(-1.00000000000000))*(x1881)*(x1887))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x1892)*(x1894)))+(((x1881)*(x1886)))+(((IkReal(-1.00000000000000))*(r00)*(sj6)*(x1892)))+(((IkReal(-1.00000000000000))*(sj4)*(x1880)))+(((IkReal(-1.00000000000000))*(x1885)*(x1886)))+(((IkReal(-1.00000000000000))*(sj2)*(x1878))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x1892)*(x1893)))+(((IkReal(-1.00000000000000))*(r10)*(sj6)*(x1892)))+(((IkReal(-1.00000000000000))*(sj2)*(x1898)))+(((x1883)*(x1886)))+(((IkReal(-1.00000000000000))*(x1886)*(x1902)))+(((IkReal(-1.00000000000000))*(r12)*(sj4)*(x1887))));
evalcond[4]=((((IkReal(-1.00000000000000))*(x1888)*(x1902)))+(((x1883)*(x1888)))+(((r10)*(x1890)))+(((cj3)*(x1878)))+(((IkReal(-1.00000000000000))*(cj4)*(r12)*(x1887)))+(((sj4)*(x1893)))+(((IkReal(-1.00000000000000))*(cj2)*(sj3)*(x1898))));
evalcond[5]=((((IkReal(-1.00000000000000))*(x1880)*(x1892)))+(((x1881)*(x1888)))+(((r00)*(x1890)))+(((IkReal(-1.00000000000000))*(sj3)*(x1900)))+(((IkReal(-1.00000000000000))*(x1885)*(x1888)))+(((sj4)*(x1894)))+(((IkReal(-1.00000000000000))*(cj3)*(x1898))));
evalcond[6]=((((IkReal(0.0270000000000000))*(x1881)))+(((IkReal(0.0135000000000000))*(x1880)))+(((IkReal(0.246500000000000))*(x1879)))+(((IkReal(0.265000000000000))*(x1896)))+(((IkReal(-1.00000000000000))*(x1882)*(x1885)))+(((x1881)*(x1882)))+(((x1885)*(x1895)))+(((IkReal(-1.00000000000000))*(x1880)*(x1884)))+(((IkReal(0.0300000000000000))*(x1878)))+(((x1881)*(x1899)))+(((IkReal(0.0405000000000000))*(sj4)*(x1894)))+(((IkReal(-0.0270000000000000))*(x1885)))+(((IkReal(-1.00000000000000))*(px)))+(((IkReal(0.0405000000000000))*(r00)*(x1890)))+(((IkReal(-1.00000000000000))*(x1885)*(x1899)))+(((IkReal(0.0405000000000000))*(x1900)))+(((IkReal(-1.00000000000000))*(x1881)*(x1895))));
evalcond[7]=((((IkReal(0.0270000000000000))*(x1883)))+(((IkReal(0.0135000000000000))*(x1889)))+(((IkReal(0.265000000000000))*(x1897)))+(((IkReal(0.0405000000000000))*(r10)*(x1890)))+(((x1883)*(x1899)))+(((IkReal(-1.00000000000000))*(x1883)*(x1895)))+(((IkReal(0.0300000000000000))*(x1879)))+(((x1882)*(x1883)))+(((IkReal(-1.00000000000000))*(x1882)*(x1891)))+(((IkReal(0.0405000000000000))*(sj4)*(x1893)))+(((IkReal(-1.00000000000000))*(x1891)*(x1899)))+(((IkReal(-1.00000000000000))*(py)))+(((x1891)*(x1895)))+(((IkReal(-1.00000000000000))*(x1884)*(x1889)))+(((IkReal(-0.0270000000000000))*(x1891)))+(((IkReal(0.0405000000000000))*(x1903)))+(((IkReal(-0.246500000000000))*(x1878))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  || IKabs(evalcond[6]) > 0.000001  || IKabs(evalcond[7]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j1array[1], cj1array[1], sj1array[1];
bool j1valid[1]={false};
_nj1 = 1;
IkReal x1904=((cj2)*(cj3));
IkReal x1905=((cj5)*(r12));
IkReal x1906=((IkReal(1.00000000000000))*(sj5));
IkReal x1907=((cj6)*(r00));
IkReal x1908=((sj5)*(sj6));
IkReal x1909=((cj5)*(r02));
IkReal x1910=((cj6)*(r10));
if( IKabs(((gconst7)*(((((IkReal(-1.00000000000000))*(r01)*(sj3)*(sj6)*(x1906)))+(((x1904)*(x1905)))+(((IkReal(-1.00000000000000))*(sj3)*(x1909)))+(((IkReal(-1.00000000000000))*(x1904)*(x1906)*(x1910)))+(((r11)*(x1904)*(x1908)))+(((sj3)*(sj5)*(x1907))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst7)*(((((IkReal(-1.00000000000000))*(sj3)*(x1906)*(x1910)))+(((x1904)*(x1909)))+(((r01)*(x1904)*(x1908)))+(((IkReal(-1.00000000000000))*(x1904)*(x1906)*(x1907)))+(((r11)*(sj3)*(x1908)))+(((sj3)*(x1905))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j1array[0]=IKatan2(((gconst7)*(((((IkReal(-1.00000000000000))*(r01)*(sj3)*(sj6)*(x1906)))+(((x1904)*(x1905)))+(((IkReal(-1.00000000000000))*(sj3)*(x1909)))+(((IkReal(-1.00000000000000))*(x1904)*(x1906)*(x1910)))+(((r11)*(x1904)*(x1908)))+(((sj3)*(sj5)*(x1907)))))), ((gconst7)*(((((IkReal(-1.00000000000000))*(sj3)*(x1906)*(x1910)))+(((x1904)*(x1909)))+(((r01)*(x1904)*(x1908)))+(((IkReal(-1.00000000000000))*(x1904)*(x1906)*(x1907)))+(((r11)*(sj3)*(x1908)))+(((sj3)*(x1905)))))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
for(int ij1 = 0; ij1 < 1; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
for(int iij1 = ij1+1; iij1 < 1; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];
{
IkReal evalcond[8];
IkReal x1911=IKcos(j1);
IkReal x1912=IKsin(j1);
IkReal x1913=((r02)*(sj5));
IkReal x1914=((r01)*(sj6));
IkReal x1915=((IkReal(0.265000000000000))*(sj5));
IkReal x1916=((r11)*(sj6));
IkReal x1917=((IkReal(0.0405000000000000))*(cj4));
IkReal x1918=((cj6)*(r00));
IkReal x1919=((cj5)*(sj4));
IkReal x1920=((IkReal(1.00000000000000))*(sj5));
IkReal x1921=((cj4)*(cj5));
IkReal x1922=((r12)*(sj5));
IkReal x1923=((sj4)*(sj6));
IkReal x1924=((cj6)*(r10));
IkReal x1925=((IkReal(1.00000000000000))*(cj4));
IkReal x1926=((cj6)*(r11));
IkReal x1927=((cj6)*(r01));
IkReal x1928=((IkReal(0.0135000000000000))*(cj5));
IkReal x1929=((cj5)*(r02));
IkReal x1930=((cj5)*(r12));
IkReal x1931=((IkReal(1.00000000000000))*(x1912));
IkReal x1932=((cj5)*(x1917));
IkReal x1933=((cj2)*(x1911));
IkReal x1934=((IkReal(0.0405000000000000))*(cj6)*(sj4));
IkReal x1935=((IkReal(1.00000000000000))*(x1924));
IkReal x1936=((cj2)*(x1912));
evalcond[0]=((((IkReal(-1.00000000000000))*(x1916)*(x1920)))+(((IkReal(-1.00000000000000))*(x1930)))+(((cj3)*(x1936)))+(((sj5)*(x1924)))+(((sj3)*(x1911))));
evalcond[1]=((((sj5)*(x1918)))+(((IkReal(-1.00000000000000))*(sj3)*(x1931)))+(((IkReal(-1.00000000000000))*(x1929)))+(((IkReal(-1.00000000000000))*(x1914)*(x1920)))+(((cj3)*(x1933))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x1918)*(x1919)))+(((x1914)*(x1919)))+(((IkReal(-1.00000000000000))*(sj2)*(x1911)))+(((IkReal(-1.00000000000000))*(r00)*(sj6)*(x1925)))+(((IkReal(-1.00000000000000))*(x1925)*(x1927)))+(((IkReal(-1.00000000000000))*(sj4)*(x1913))));
evalcond[3]=((((x1916)*(x1919)))+(((IkReal(-1.00000000000000))*(x1919)*(x1935)))+(((IkReal(-1.00000000000000))*(sj2)*(x1931)))+(((IkReal(-1.00000000000000))*(r10)*(sj6)*(x1925)))+(((IkReal(-1.00000000000000))*(x1925)*(x1926)))+(((IkReal(-1.00000000000000))*(r12)*(sj4)*(x1920))));
evalcond[4]=((((IkReal(-1.00000000000000))*(cj4)*(r12)*(x1920)))+(((sj4)*(x1926)))+(((IkReal(-1.00000000000000))*(x1921)*(x1935)))+(((cj3)*(x1911)))+(((x1916)*(x1921)))+(((IkReal(-1.00000000000000))*(cj2)*(sj3)*(x1931)))+(((r10)*(x1923))));
evalcond[5]=((((r00)*(x1923)))+(((sj4)*(x1927)))+(((IkReal(-1.00000000000000))*(sj3)*(x1933)))+(((IkReal(-1.00000000000000))*(x1913)*(x1925)))+(((IkReal(-1.00000000000000))*(x1918)*(x1921)))+(((x1914)*(x1921)))+(((IkReal(-1.00000000000000))*(cj3)*(x1931))));
evalcond[6]=((((IkReal(0.0405000000000000))*(sj4)*(x1927)))+(((IkReal(0.0300000000000000))*(x1911)))+(((x1914)*(x1932)))+(((x1918)*(x1928)))+(((x1914)*(x1915)))+(((IkReal(-1.00000000000000))*(x1914)*(x1928)))+(((IkReal(-0.0270000000000000))*(x1918)))+(((IkReal(-1.00000000000000))*(px)))+(((IkReal(-1.00000000000000))*(x1915)*(x1918)))+(((IkReal(0.0405000000000000))*(r00)*(x1923)))+(((IkReal(0.0270000000000000))*(x1914)))+(((IkReal(-1.00000000000000))*(x1918)*(x1932)))+(((IkReal(-1.00000000000000))*(x1913)*(x1917)))+(((IkReal(0.265000000000000))*(x1929)))+(((IkReal(0.0405000000000000))*(x1933)))+(((IkReal(0.246500000000000))*(x1912)))+(((IkReal(0.0135000000000000))*(x1913))));
evalcond[7]=((((IkReal(0.0405000000000000))*(sj4)*(x1926)))+(((IkReal(0.0405000000000000))*(r10)*(x1923)))+(((IkReal(0.0300000000000000))*(x1912)))+(((IkReal(-1.00000000000000))*(x1916)*(x1928)))+(((IkReal(0.265000000000000))*(x1930)))+(((IkReal(-1.00000000000000))*(x1917)*(x1922)))+(((x1916)*(x1932)))+(((IkReal(-1.00000000000000))*(x1915)*(x1924)))+(((IkReal(-0.246500000000000))*(x1911)))+(((IkReal(-1.00000000000000))*(x1924)*(x1932)))+(((IkReal(-1.00000000000000))*(py)))+(((IkReal(0.0270000000000000))*(x1916)))+(((IkReal(0.0135000000000000))*(x1922)))+(((IkReal(-0.0270000000000000))*(x1924)))+(((IkReal(0.0405000000000000))*(x1936)))+(((x1915)*(x1916)))+(((x1924)*(x1928))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  || IKabs(evalcond[6]) > 0.000001  || IKabs(evalcond[7]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(7);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
vinfos[6].jointtype = 1;
vinfos[6].foffset = j6;
vinfos[6].indices[0] = _ij6[0];
vinfos[6].indices[1] = _ij6[1];
vinfos[6].maxsolutions = _nj6;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}
}
}
    }
}
return solutions.GetNumSolutions()>0;
}

/// \brief Solve the det Ax^2+Bx+C = 0 problem using the Manocha and Canny method (1994)
///
/// matcoeffs is of length 54*3, for 3 matrices
static inline void solvedialyticpoly12qep(const IkReal* matcoeffs, IkReal* rawroots, int& numroots)
{
    const IkReal tol = 128.0*std::numeric_limits<IkReal>::epsilon();
    IkReal IKFAST_ALIGNED16(M[24*24]) = {0};
    IkReal IKFAST_ALIGNED16(A[12*12]);
    IkReal IKFAST_ALIGNED16(work[24*24*23]);
    int ipiv[12];
    int info, coeffindex;
    const int worksize=24*24*23;
    const int matrixdim = 12;
    const int matrixdim2 = 24;
    numroots = 0;
    // first setup M = [0 I; -C -B] and A
    coeffindex = 0;
    for(int j = 0; j < 6; ++j) {
        for(int k = 0; k < 9; ++k) {
            M[matrixdim+(j+6)+2*matrixdim*k] = M[matrixdim+j+2*matrixdim*(k+3)] = -matcoeffs[coeffindex++];
        }
    }
    for(int j = 0; j < 6; ++j) {
        for(int k = 0; k < 9; ++k) {
            M[matrixdim+(j+6)+2*matrixdim*k+matrixdim*2*matrixdim] = M[matrixdim+j+2*matrixdim*(k+3)+matrixdim*2*matrixdim] = -matcoeffs[coeffindex++];
        }
    }
    for(int j = 0; j < 6; ++j) {
        for(int k = 0; k < 9; ++k) {
            A[(j+6)+matrixdim*k] = A[j+matrixdim*(k+3)] = matcoeffs[coeffindex++];
        }
        for(int k = 0; k < 3; ++k) {
            A[j+matrixdim*k] = A[(j+6)+matrixdim*(k+9)] = 0;
        }
    }
    const IkReal lfpossibilities[4][4] = {{1,-1,1,1},{1,0,-2,1},{1,1,2,0},{1,-1,4,1}};
    int lfindex = -1;
    bool bsingular = true;
    do {
        dgetrf_(&matrixdim,&matrixdim,A,&matrixdim,&ipiv[0],&info);
        if( info == 0 ) {
            bsingular = false;
            for(int j = 0; j < matrixdim; ++j) {
                if( IKabs(A[j*matrixdim+j]) < 100*tol ) {
                    bsingular = true;
                    break;
                }
            }
            if( !bsingular ) {
                break;
            }
        }
        if( lfindex == 3 ) {
            break;
        }
        // transform by the linear functional
        lfindex++;
        const IkReal* lf = lfpossibilities[lfindex];
        // have to reinitialize A
        coeffindex = 0;
        for(int j = 0; j < 6; ++j) {
            for(int k = 0; k < 9; ++k) {
                IkReal a = matcoeffs[coeffindex+108], b = matcoeffs[coeffindex+54], c = matcoeffs[coeffindex];
                A[(j+6)+matrixdim*k] = A[j+matrixdim*(k+3)] = lf[0]*lf[0]*a+lf[0]*lf[2]*b+lf[2]*lf[2]*c;
                M[matrixdim+(j+6)+2*matrixdim*k] = M[matrixdim+j+2*matrixdim*(k+3)] = -(lf[1]*lf[1]*a + lf[1]*lf[3]*b + lf[3]*lf[3]*c);
                M[matrixdim+(j+6)+2*matrixdim*k+matrixdim*2*matrixdim] = M[matrixdim+j+2*matrixdim*(k+3)+matrixdim*2*matrixdim] = -(2*lf[0]*lf[1]*a + (lf[0]*lf[3]+lf[1]*lf[2])*b + 2*lf[2]*lf[3]*c);
                coeffindex++;
            }
            for(int k = 0; k < 3; ++k) {
                A[j+matrixdim*k] = A[(j+6)+matrixdim*(k+9)] = 0;
            }
        }
    } while(lfindex<4);

    if( bsingular ) {
        return;
    }
    dgetrs_("No transpose", &matrixdim, &matrixdim2, A, &matrixdim, &ipiv[0], &M[matrixdim], &matrixdim2, &info);
    if( info != 0 ) {
        return;
    }

    // set identity in upper corner
    for(int j = 0; j < matrixdim; ++j) {
        M[matrixdim*2*matrixdim+j+matrixdim*2*j] = 1;
    }
    IkReal IKFAST_ALIGNED16(wr[24]);
    IkReal IKFAST_ALIGNED16(wi[24]);
    IkReal IKFAST_ALIGNED16(vr[24*24]);
    int one=1;
    dgeev_("N", "V", &matrixdim2, M, &matrixdim2, wr, wi,NULL, &one, vr, &matrixdim2, work, &worksize, &info);
    if( info != 0 ) {
        return;
    }
    IkReal Breal[matrixdim-1];
    for(int i = 0; i < matrixdim2; ++i) {
        if( IKabs(wi[i]) < tol*100 ) {
            IkReal* ev = vr+matrixdim2*i;
            if( IKabs(wr[i]) > 1 ) {
                ev += matrixdim;
            }
            // consistency has to be checked!!
            if( IKabs(ev[0]) < tol ) {
                continue;
            }
            IkReal iconst = 1/ev[0];
            for(int j = 1; j < matrixdim; ++j) {
                Breal[j-1] = ev[j]*iconst;
            }
            if( checkconsistency12(Breal) ) {
                if( lfindex >= 0 ) {
                    const IkReal* lf = lfpossibilities[lfindex];
                    rawroots[numroots++] = (wr[i]*lf[0]+lf[1])/(wr[i]*lf[2]+lf[3]);
                }
                else {
                    rawroots[numroots++] = wr[i];
                }
                bool bsmall0=IKabs(ev[0]) > IKabs(ev[3]);
                bool bsmall1=IKabs(ev[0]) > IKabs(ev[1]);
                if( bsmall0 && bsmall1 ) {
                    rawroots[numroots++] = ev[3]/ev[0];
                    rawroots[numroots++] = ev[1]/ev[0];
                }
                else if( bsmall0 && !bsmall1 ) {
                    rawroots[numroots++] = ev[5]/ev[2];
                    rawroots[numroots++] = ev[2]/ev[1];
                }
                else if( !bsmall0 && bsmall1 ) {
                    rawroots[numroots++] = ev[9]/ev[6];
                    rawroots[numroots++] = ev[10]/ev[9];
                }
                else if( !bsmall0 && !bsmall1 ) {
                    rawroots[numroots++] = ev[11]/ev[8];
                    rawroots[numroots++] = ev[11]/ev[10];
                }
            }
        }
    }
}
static inline bool checkconsistency12(const IkReal* Breal)
{
    IkReal norm = 0.1;
    for(int i = 0; i < 11; ++i) {
        norm += IKabs(Breal[i]);
    }
    IkReal tol = 1e-6*norm; // have to increase the threshold since many computations are involved
    return IKabs(Breal[0]*Breal[0]-Breal[1]) < tol && IKabs(Breal[0]*Breal[2]-Breal[3]) < tol && IKabs(Breal[1]*Breal[2]-Breal[4]) < tol && IKabs(Breal[2]*Breal[2]-Breal[5]) < tol && IKabs(Breal[0]*Breal[5]-Breal[6]) < tol && IKabs(Breal[1]*Breal[5]-Breal[7]) < tol && IKabs(Breal[2]*Breal[5]-Breal[8]) < tol && IKabs(Breal[0]*Breal[8]-Breal[9]) < tol && IKabs(Breal[1]*Breal[8]-Breal[10]) < tol;
}
};


/// solves the inverse kinematics equations.
/// \param pfree is an array specifying the free joints of the chain.
IKFAST_API bool ComputeIk(const IkReal* eetrans, const IkReal* eerot, const IkReal* pfree, IkSolutionListBase<IkReal>& solutions) {
IKSolver solver;
return solver.ComputeIk(eetrans,eerot,pfree,solutions);
}

IKFAST_API const char* GetKinematicsHash() { return "<robot:GenericRobot - raw3-3 (b1d29c9c8aeb875903c00a80e5cdb131)>"; }

IKFAST_API const char* GetIkFastVersion() { return IKFAST_STRINGIZE(IKFAST_VERSION); }

#ifdef IKFAST_NAMESPACE
} // end namespace
#endif

#ifndef IKFAST_NO_MAIN
#include <stdio.h>
#include <stdlib.h>
#ifdef IKFAST_NAMESPACE
using namespace IKFAST_NAMESPACE;
#endif
int main(int argc, char** argv)
{
    if( argc != 12+GetNumFreeParameters()+1 ) {
        printf("\nUsage: ./ik r00 r01 r02 t0 r10 r11 r12 t1 r20 r21 r22 t2 free0 ...\n\n"
               "Returns the ik solutions given the transformation of the end effector specified by\n"
               "a 3x3 rotation R (rXX), and a 3x1 translation (tX).\n"
               "There are %d free parameters that have to be specified.\n\n",GetNumFreeParameters());
        return 1;
    }

    IkSolutionList<IkReal> solutions;
    std::vector<IkReal> vfree(GetNumFreeParameters());
    IkReal eerot[9],eetrans[3];
    eerot[0] = atof(argv[1]); eerot[1] = atof(argv[2]); eerot[2] = atof(argv[3]); eetrans[0] = atof(argv[4]);
    eerot[3] = atof(argv[5]); eerot[4] = atof(argv[6]); eerot[5] = atof(argv[7]); eetrans[1] = atof(argv[8]);
    eerot[6] = atof(argv[9]); eerot[7] = atof(argv[10]); eerot[8] = atof(argv[11]); eetrans[2] = atof(argv[12]);
    for(std::size_t i = 0; i < vfree.size(); ++i)
        vfree[i] = atof(argv[13+i]);
    bool bSuccess = ComputeIk(eetrans, eerot, vfree.size() > 0 ? &vfree[0] : NULL, solutions);

    if( !bSuccess ) {
        fprintf(stderr,"Failed to get ik solution\n");
        return -1;
    }

    printf("Found %d ik solutions:\n", (int)solutions.GetNumSolutions());
    std::vector<IkReal> solvalues(GetNumJoints());
    for(std::size_t i = 0; i < solutions.GetNumSolutions(); ++i) {
        const IkSolutionBase<IkReal>& sol = solutions.GetSolution(i);
        printf("sol%d (free=%d): ", (int)i, (int)sol.GetFree().size());
        std::vector<IkReal> vsolfree(sol.GetFree().size());
        sol.GetSolution(&solvalues[0],vsolfree.size()>0?&vsolfree[0]:NULL);
        for( std::size_t j = 0; j < solvalues.size(); ++j)
            printf("%.15f, ", solvalues[j]);
        printf("\n");
    }
    return 0;
}

#endif
